{"version":3,"file":"demos.bundle.js","mappings":"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","sources":["webpack://@agogpixel/phaser3-glyph-plugin/webpack/runtime/create fake namespace object","webpack://@agogpixel/phaser3-glyph-plugin/webpack/runtime/load script","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/alpha-single.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/alpha.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/blend-mode.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/computed-size.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/create-mixin.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/crop.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/depth.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/flip.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/get-bounds.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/index.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/mask.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/origin.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/path-follower.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/pipeline.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/scroll-factor.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/size.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/texture-crop.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/texture.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/tint.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/transform.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/visible.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/gameobjects/custom-gameobject.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/@agogpixel/phaser3-ts-utils/mixins/scene/create-plugin-api-mixin.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/color-name/index.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/color-string/index.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/BLUR_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/BOOT_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/CONTEXT_LOST_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/CONTEXT_RESTORED_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/DESTROY_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/FOCUS_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/HIDDEN_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/PAUSE_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/POST_RENDER_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/POST_STEP_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/PRE_RENDER_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/PRE_STEP_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/READY_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/RESUME_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/STEP_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/VISIBLE_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/core/events/index.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/display/mask/BitmapMask.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/display/mask/GeometryMask.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/Alpha.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/AlphaSingle.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/BlendMode.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/ComputedSize.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/Crop.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/Depth.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/Flip.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/GetBounds.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/Mask.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/Origin.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/PathFollower.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/Pipeline.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/ScrollFactor.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/Size.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/Texture.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/TextureCrop.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/Tint.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/ToJSON.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/Transform.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/TransformMatrix.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/Visible.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/gameobjects/components/index.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/geom/const.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/geom/line/GetPoint.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/geom/line/GetPoints.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/geom/line/Length.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/geom/line/Line.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/geom/line/Random.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/geom/point/Point.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/geom/rectangle/Contains.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/geom/rectangle/GetPoint.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/geom/rectangle/GetPoints.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/geom/rectangle/Perimeter.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/geom/rectangle/Random.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/geom/rectangle/Rectangle.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/math/Clamp.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/math/DegToRad.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/math/RotateAround.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/math/TransformXY.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/math/Vector2.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/math/Wrap.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/math/angle/Wrap.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/math/angle/WrapDegrees.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/math/const.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/math/fuzzy/Equal.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/renderer/BlendModes.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/renderer/events/POST_RENDER_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/renderer/events/PRE_RENDER_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/renderer/events/RENDER_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/renderer/events/RESIZE_EVENT.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/renderer/events/index.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/renderer/webgl/pipelines/const.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/tweens/builders/GetBoolean.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/tweens/tween/const.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/utils/Class.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/utils/array/SpliceOne.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/utils/object/DeepCopy.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/phaser/src/utils/object/GetValue.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/simple-swizzle/index.js","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/simple-swizzle/node_modules/is-arrayish/index.js","webpack://@agogpixel/phaser3-glyph-plugin/./demos/shared.ts","webpack://@agogpixel/phaser3-glyph-plugin/./src/gameobjects/glyph-plugin-gameobject.ts","webpack://@agogpixel/phaser3-glyph-plugin/./src/gameobjects/glyph.ts","webpack://@agogpixel/phaser3-glyph-plugin/./src/gameobjects/glyphmap.ts","webpack://@agogpixel/phaser3-glyph-plugin/./src/plugin.ts","webpack://@agogpixel/phaser3-glyph-plugin/./src/shared.ts","webpack://@agogpixel/phaser3-glyph-plugin/./node_modules/tslib/tslib.es6.js","webpack://@agogpixel/phaser3-glyph-plugin/webpack/bootstrap","webpack://@agogpixel/phaser3-glyph-plugin/webpack/runtime/compat get default export","webpack://@agogpixel/phaser3-glyph-plugin/webpack/runtime/define property getters","webpack://@agogpixel/phaser3-glyph-plugin/webpack/runtime/ensure chunk","webpack://@agogpixel/phaser3-glyph-plugin/webpack/runtime/get javascript chunk filename","webpack://@agogpixel/phaser3-glyph-plugin/webpack/runtime/get mini-css chunk filename","webpack://@agogpixel/phaser3-glyph-plugin/webpack/runtime/global","webpack://@agogpixel/phaser3-glyph-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://@agogpixel/phaser3-glyph-plugin/webpack/runtime/make namespace object","webpack://@agogpixel/phaser3-glyph-plugin/webpack/runtime/publicPath","webpack://@agogpixel/phaser3-glyph-plugin/webpack/runtime/jsonp chunk loading","webpack://@agogpixel/phaser3-glyph-plugin/./demos/index.ts"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"@agogpixel/phaser3-glyph-plugin:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AlphaSingle = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for setting the alpha property of a Game Object.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.AlphaSingle = (0, create_mixin_1.createMixin)(components_1.AlphaSingle);\n//# sourceMappingURL=alpha-single.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Alpha = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for setting the alpha properties of a Game Object.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.Alpha = (0, create_mixin_1.createMixin)(components_1.Alpha);\n//# sourceMappingURL=alpha.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlendMode = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for setting the blend mode of a Game Object.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.BlendMode = (0, create_mixin_1.createMixin)(components_1.BlendMode);\n//# sourceMappingURL=blend-mode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ComputedSize = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for calculating and setting the size of a non-Frame based Game Object.\n *\n * Target Game Object class must have\n * [Phaser.GameObjects.Components.Transform](https://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Components.Transform.html)\n * defined.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.ComputedSize = (0, create_mixin_1.createMixin)(components_1.ComputedSize);\n//# sourceMappingURL=computed-size.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMixin = void 0;\nvar Class_1 = require(\"phaser/src/utils/Class\");\n/**\n * Create Game Object class component mixin.\n * @param component Game Object component definition.\n * @template GameObjectComponent Game Object component type.\n * @template GameObjectConstraint Game Object type constraint. Ensures resulting mixin only accepts Game Object classes\n * that provide properties that a given Game Object component is dependent on.\n * @returns Game Object class component mixin.\n * @internal\n */\nfunction createMixin() {\n    var component = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        component[_i] = arguments[_i];\n    }\n    return function (BaseGameObject) {\n        (0, Class_1.mixin)(BaseGameObject, component);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return BaseGameObject;\n    };\n}\nexports.createMixin = createMixin;\n//# sourceMappingURL=create-mixin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Crop = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for getting and setting the texture of a Game Object.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.Crop = (0, create_mixin_1.createMixin)(components_1.Crop);\n//# sourceMappingURL=crop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Depth = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for setting the depth of a Game Object.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.Depth = (0, create_mixin_1.createMixin)(components_1.Depth);\n//# sourceMappingURL=depth.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Flip = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for visually flipping a Game Object.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.Flip = (0, create_mixin_1.createMixin)(components_1.Flip);\n//# sourceMappingURL=flip.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBounds = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for obtaining the bounds of a Game Object.\n *\n * Target Game Object class must have\n * [Phaser.GameObjects.Components.Transform](https://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Components.Transform.html),\n * one of [Phaser.GameObjects.Components.ComputedSize](https://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Components.ComputedSize.html)\n * or [Phaser.GameObjects.Components.Size](https://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Components.Size.html),\n * & [Phaser.GameObjects.Components.Origin](https://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Components.Origin.html)\n * defined.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.GetBounds = (0, create_mixin_1.createMixin)(components_1.GetBounds);\n//# sourceMappingURL=get-bounds.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./alpha\"), exports);\n(0, tslib_1.__exportStar)(require(\"./alpha-single\"), exports);\n(0, tslib_1.__exportStar)(require(\"./blend-mode\"), exports);\n(0, tslib_1.__exportStar)(require(\"./computed-size\"), exports);\n(0, tslib_1.__exportStar)(require(\"./crop\"), exports);\n(0, tslib_1.__exportStar)(require(\"./depth\"), exports);\n(0, tslib_1.__exportStar)(require(\"./flip\"), exports);\n//export * from './fx';\n(0, tslib_1.__exportStar)(require(\"./get-bounds\"), exports);\n(0, tslib_1.__exportStar)(require(\"./mask\"), exports);\n(0, tslib_1.__exportStar)(require(\"./origin\"), exports);\n(0, tslib_1.__exportStar)(require(\"./path-follower\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pipeline\"), exports);\n(0, tslib_1.__exportStar)(require(\"./scroll-factor\"), exports);\n(0, tslib_1.__exportStar)(require(\"./size\"), exports);\n(0, tslib_1.__exportStar)(require(\"./texture\"), exports);\n(0, tslib_1.__exportStar)(require(\"./texture-crop\"), exports);\n(0, tslib_1.__exportStar)(require(\"./tint\"), exports);\n(0, tslib_1.__exportStar)(require(\"./transform\"), exports);\n(0, tslib_1.__exportStar)(require(\"./visible\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mask = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for getting and setting the mask of a Game Object.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.Mask = (0, create_mixin_1.createMixin)(components_1.Mask);\n//# sourceMappingURL=mask.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Origin = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for getting and setting the origin of a Game Object. Values are normalized, given in the range\n * 0 to 1. Display values contain the calculated pixel values.\n *\n * Target Game Object class must have one of\n * [Phaser.GameObjects.Components.ComputedSize](https://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Components.ComputedSize.html)\n * or [Phaser.GameObjects.Components.Size](https://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Components.Size.html)\n * defined.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.Origin = (0, create_mixin_1.createMixin)(components_1.Origin);\n//# sourceMappingURL=origin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PathFollower = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for managing a Game Object following a Path.\n *\n * Target Game Object class must have\n * [Phaser.GameObjects.Components.Transform](https://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Components.Transform.html)\n * defined.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.PathFollower = (0, create_mixin_1.createMixin)(components_1.PathFollower);\n//# sourceMappingURL=path-follower.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pipeline = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for setting the WebGL rendering pipeline of a Game Object.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.Pipeline = (0, create_mixin_1.createMixin)(components_1.Pipeline);\n//# sourceMappingURL=pipeline.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScrollFactor = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for getting and setting the Scroll Factor of a Game Object.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.ScrollFactor = (0, create_mixin_1.createMixin)(components_1.ScrollFactor);\n//# sourceMappingURL=scroll-factor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Size = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for getting and setting the size of a Game Object.\n *\n * Target Game Object class must have\n * [Phaser.GameObjects.Components.Transform](https://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Components.Transform.html)\n * and one of [Phaser.GameObjects.Components.Crop](https://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Components.Crop.html),\n * [Phaser.GameObjects.Components.Texture](https://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Components.Texture.html),\n * or [Phaser.GameObjects.Components.TextureCrop](https://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Components.TextureCrop.html)\n * defined.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.Size = (0, create_mixin_1.createMixin)(components_1.Size);\n//# sourceMappingURL=size.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextureCrop = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for getting and setting the texture of a Game Object.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.TextureCrop = (0, create_mixin_1.createMixin)(components_1.TextureCrop);\n//# sourceMappingURL=texture-crop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Texture = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for getting and setting the texture of a Game Object.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.Texture = (0, create_mixin_1.createMixin)(components_1.Texture);\n//# sourceMappingURL=texture.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tint = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for setting the tint of a Game Object.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.Tint = (0, create_mixin_1.createMixin)(components_1.Tint);\n//# sourceMappingURL=tint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transform = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for getting and setting the position, scale and rotation of a Game Object.\n * @param BaseGameObject Game Object class.\n * @returns Game Object class with component definition mixed in.\n */\nexports.Transform = (0, create_mixin_1.createMixin)(components_1.Transform);\n//# sourceMappingURL=transform.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Visible = void 0;\nvar components_1 = require(\"phaser/src/gameobjects/components\");\nvar create_mixin_1 = require(\"./create-mixin\");\n/**\n * Provides methods used for setting the visibility of a Game Object.\n * @param BaseGameObject Game Object class.\n * @template GameObject Game Object type.\n * @template GameObjectType Game Object constructor type.\n * @returns Game Object class with component definition mixed in.\n */\nexports.Visible = (0, create_mixin_1.createMixin)(components_1.Visible);\n//# sourceMappingURL=visible.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CustomGameObject = void 0;\nvar tslib_1 = require(\"tslib\");\nvar Mixins = (0, tslib_1.__importStar)(require(\"./components\"));\n/**\n * Custom Game Object factory.\n * @param check Check if component dependencies are included in mixins.\n * @param mixins Game Object component mixins.\n * @returns Custom Game Object class with component definitions mixed in.\n */\nvar CustomGameObject = function (check) {\n    var mixins = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        mixins[_i - 1] = arguments[_i];\n    }\n    var BaseGameObject = /** @class */ (function (_super) {\n        (0, tslib_1.__extends)(BaseGameObject, _super);\n        function BaseGameObject() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return BaseGameObject;\n    }(Phaser.GameObjects.GameObject));\n    var target = BaseGameObject;\n    mixins.forEach(function (mixin) {\n        if (check) {\n            if (mixin === Mixins.ComputedSize) {\n                if (!mixins.includes(Mixins.Transform)) {\n                    throw new Error('CustomGameObject: ComputedSize requires Transform');\n                }\n            }\n            else if (mixin === Mixins.GetBounds) {\n                if (![Mixins.ComputedSize, Mixins.Size].some(function (m) { return mixins.includes(m); })) {\n                    throw new Error('CustomGameObject: GetBounds requires one of ComputedSize or Size');\n                }\n                if (![Mixins.Transform, Mixins.Origin].every(function (m) { return mixins.includes(m); })) {\n                    throw new Error('CustomGameObject: GetBounds requires Origin and Transform');\n                }\n            }\n            else if (mixin === Mixins.Origin) {\n                if (![Mixins.ComputedSize, Mixins.Size].some(function (m) { return mixins.includes(m); })) {\n                    throw new Error('CustomGameObject: Origin requires one of ComputedSize or Size');\n                }\n            }\n            else if (mixin === Mixins.PathFollower) {\n                if (!mixins.includes(Mixins.Transform)) {\n                    throw new Error('CustomGameObject: PathFollower requires Transform');\n                }\n            }\n            else if (mixin === Mixins.Size) {\n                if (!mixins.includes(Mixins.Transform)) {\n                    throw new Error('CustomGameObject: Size requires Transform');\n                }\n                if (![Mixins.Crop, Mixins.Texture, Mixins.TextureCrop].some(function (m) { return mixins.includes(m); })) {\n                    throw new Error('CustomGameObject: Size requires one of Crop, Texture, or TextureCrop');\n                }\n            }\n        }\n        target = mixin(target);\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return target;\n};\nexports.CustomGameObject = CustomGameObject;\n//# sourceMappingURL=custom-gameobject.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createPluginApiMixin = void 0;\n/**\n * Creates a class mixin that exposes an\n * [injected plugin](https://rexrainbow.github.io/phaser3-rex-notes/docs/site/pluginsystem/)'s API on a\n * [Phaser.Scene](https://photonstorm.github.io/phaser3-docs/Phaser.Scene.html) based class.\n * @template Plugin Plugin for which we are exposing an API.\n * @template PluginPublicProperty String literal or union of string literals mapping plugin properties to the plugin's\n * scene mapping.\n * @template GameObjectFactory (Optional) Maps a given game object key to the corresponding game object factory function type.\n * @template GameObjectCreator (Optional) Maps a given game object key to the corresponding game object creator function type.\n * @template Loader (Optional) Maps a given file type key to the corresponding file type callback function type.\n * @returns Class mixin that accepts a mapping for the plugin as well as a scene class.\n */\nvar createPluginApiMixin = function () { return function (mapping, BaseScene) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return BaseScene;\n}; };\nexports.createPluginApiMixin = createPluginApiMixin;\n//# sourceMappingURL=create-plugin-api-mixin.js.map","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Blur Event.\r\n * \r\n * This event is dispatched by the Game Visibility Handler when the window in which the Game instance is embedded\r\n * enters a blurred state. The blur event is raised when the window loses focus. This can happen if a user swaps\r\n * tab, or if they simply remove focus from the browser to another app.\r\n *\r\n * @event Phaser.Core.Events#BLUR\r\n * @since 3.0.0\r\n */\r\nmodule.exports = 'blur';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Boot Event.\r\n * \r\n * This event is dispatched when the Phaser Game instance has finished booting, but before it is ready to start running.\r\n * The global systems use this event to know when to set themselves up, dispatching their own `ready` events as required.\r\n *\r\n * @event Phaser.Core.Events#BOOT\r\n * @since 3.0.0\r\n */\r\nmodule.exports = 'boot';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Context Lost Event.\r\n * \r\n * This event is dispatched by the Game if the WebGL Renderer it is using encounters a WebGL Context Lost event from the browser.\r\n * \r\n * The partner event is `CONTEXT_RESTORED`.\r\n *\r\n * @event Phaser.Core.Events#CONTEXT_LOST\r\n * @since 3.19.0\r\n */\r\nmodule.exports = 'contextlost';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Context Restored Event.\r\n * \r\n * This event is dispatched by the Game if the WebGL Renderer it is using encounters a WebGL Context Restored event from the browser.\r\n * \r\n * The partner event is `CONTEXT_LOST`.\r\n *\r\n * @event Phaser.Core.Events#CONTEXT_RESTORED\r\n * @since 3.19.0\r\n */\r\nmodule.exports = 'contextrestored';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Destroy Event.\r\n * \r\n * This event is dispatched when the game instance has been told to destroy itself.\r\n * Lots of internal systems listen to this event in order to clear themselves out.\r\n * Custom plugins and game code should also do the same.\r\n *\r\n * @event Phaser.Core.Events#DESTROY\r\n * @since 3.0.0\r\n */\r\nmodule.exports = 'destroy';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Focus Event.\r\n * \r\n * This event is dispatched by the Game Visibility Handler when the window in which the Game instance is embedded\r\n * enters a focused state. The focus event is raised when the window re-gains focus, having previously lost it.\r\n *\r\n * @event Phaser.Core.Events#FOCUS\r\n * @since 3.0.0\r\n */\r\nmodule.exports = 'focus';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Hidden Event.\r\n * \r\n * This event is dispatched by the Game Visibility Handler when the document in which the Game instance is embedded\r\n * enters a hidden state. Only browsers that support the Visibility API will cause this event to be emitted.\r\n * \r\n * In most modern browsers, when the document enters a hidden state, the Request Animation Frame and setTimeout, which\r\n * control the main game loop, will automatically pause. There is no way to stop this from happening. It is something\r\n * your game should account for in its own code, should the pause be an issue (i.e. for multiplayer games)\r\n *\r\n * @event Phaser.Core.Events#HIDDEN\r\n * @since 3.0.0\r\n */\r\nmodule.exports = 'hidden';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Pause Event.\r\n * \r\n * This event is dispatched when the Game loop enters a paused state, usually as a result of the Visibility Handler.\r\n *\r\n * @event Phaser.Core.Events#PAUSE\r\n * @since 3.0.0\r\n */\r\nmodule.exports = 'pause';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Post-Render Event.\r\n * \r\n * This event is dispatched right at the end of the render process.\r\n * \r\n * Every Scene will have rendered and been drawn to the canvas by the time this event is fired.\r\n * Use it for any last minute post-processing before the next game step begins.\r\n *\r\n * @event Phaser.Core.Events#POST_RENDER\r\n * @since 3.0.0\r\n * \r\n * @param {(Phaser.Renderer.Canvas.CanvasRenderer|Phaser.Renderer.WebGL.WebGLRenderer)} renderer - A reference to the current renderer being used by the Game instance.\r\n */\r\nmodule.exports = 'postrender';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Post-Step Event.\r\n * \r\n * This event is dispatched after the Scene Manager has updated.\r\n * Hook into it from plugins or systems that need to do things before the render starts.\r\n *\r\n * @event Phaser.Core.Events#POST_STEP\r\n * @since 3.0.0\r\n * \r\n * @param {number} time - The current time. Either a High Resolution Timer value if it comes from Request Animation Frame, or Date.now if using SetTimeout.\r\n * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\r\n */\r\nmodule.exports = 'poststep';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Pre-Render Event.\r\n * \r\n * This event is dispatched immediately before any of the Scenes have started to render.\r\n * \r\n * The renderer will already have been initialized this frame, clearing itself and preparing to receive the Scenes for rendering, but it won't have actually drawn anything yet.\r\n *\r\n * @event Phaser.Core.Events#PRE_RENDER\r\n * @since 3.0.0\r\n * \r\n * @param {(Phaser.Renderer.Canvas.CanvasRenderer|Phaser.Renderer.WebGL.WebGLRenderer)} renderer - A reference to the current renderer being used by the Game instance.\r\n */\r\nmodule.exports = 'prerender';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Pre-Step Event.\r\n * \r\n * This event is dispatched before the main Game Step starts. By this point in the game cycle none of the Scene updates have yet happened.\r\n * Hook into it from plugins or systems that need to update before the Scene Manager does.\r\n *\r\n * @event Phaser.Core.Events#PRE_STEP\r\n * @since 3.0.0\r\n * \r\n * @param {number} time - The current time. Either a High Resolution Timer value if it comes from Request Animation Frame, or Date.now if using SetTimeout.\r\n * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\r\n */\r\nmodule.exports = 'prestep';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Ready Event.\r\n * \r\n * This event is dispatched when the Phaser Game instance has finished booting, the Texture Manager is fully ready,\r\n * and all local systems are now able to start.\r\n *\r\n * @event Phaser.Core.Events#READY\r\n * @since 3.0.0\r\n */\r\nmodule.exports = 'ready';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Resume Event.\r\n * \r\n * This event is dispatched when the game loop leaves a paused state and resumes running.\r\n *\r\n * @event Phaser.Core.Events#RESUME\r\n * @since 3.0.0\r\n */\r\nmodule.exports = 'resume';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Step Event.\r\n * \r\n * This event is dispatched after the Game Pre-Step and before the Scene Manager steps.\r\n * Hook into it from plugins or systems that need to update before the Scene Manager does, but after the core Systems have.\r\n *\r\n * @event Phaser.Core.Events#STEP\r\n * @since 3.0.0\r\n * \r\n * @param {number} time - The current time. Either a High Resolution Timer value if it comes from Request Animation Frame, or Date.now if using SetTimeout.\r\n * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\r\n */\r\nmodule.exports = 'step';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Game Visible Event.\r\n * \r\n * This event is dispatched by the Game Visibility Handler when the document in which the Game instance is embedded\r\n * enters a visible state, previously having been hidden.\r\n * \r\n * Only browsers that support the Visibility API will cause this event to be emitted.\r\n *\r\n * @event Phaser.Core.Events#VISIBLE\r\n * @since 3.0.0\r\n */\r\nmodule.exports = 'visible';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Core.Events\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    BLUR: require('./BLUR_EVENT'),\r\n    BOOT: require('./BOOT_EVENT'),\r\n    CONTEXT_LOST: require('./CONTEXT_LOST_EVENT'),\r\n    CONTEXT_RESTORED: require('./CONTEXT_RESTORED_EVENT'),\r\n    DESTROY: require('./DESTROY_EVENT'),\r\n    FOCUS: require('./FOCUS_EVENT'),\r\n    HIDDEN: require('./HIDDEN_EVENT'),\r\n    PAUSE: require('./PAUSE_EVENT'),\r\n    POST_RENDER: require('./POST_RENDER_EVENT'),\r\n    POST_STEP: require('./POST_STEP_EVENT'),\r\n    PRE_RENDER: require('./PRE_RENDER_EVENT'),\r\n    PRE_STEP: require('./PRE_STEP_EVENT'),\r\n    READY: require('./READY_EVENT'),\r\n    RESUME: require('./RESUME_EVENT'),\r\n    STEP: require('./STEP_EVENT'),\r\n    VISIBLE: require('./VISIBLE_EVENT')\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar GameEvents = require('../../core/events');\r\nvar RenderEvents = require('../../renderer/events');\r\n\r\n/**\r\n * @classdesc\r\n * A Bitmap Mask combines the alpha (opacity) of a masked pixel with the alpha of another pixel.\r\n * Unlike the Geometry Mask, which is a clipping path, a Bitmap Mask behaves like an alpha mask,\r\n * not a clipping path. It is only available when using the WebGL Renderer.\r\n *\r\n * A Bitmap Mask can use any Game Object to determine the alpha of each pixel of the masked Game Object(s).\r\n * For any given point of a masked Game Object's texture, the pixel's alpha will be multiplied by the alpha\r\n * of the pixel at the same position in the Bitmap Mask's Game Object. The color of the pixel from the\r\n * Bitmap Mask doesn't matter.\r\n *\r\n * For example, if a pure blue pixel with an alpha of 0.95 is masked with a pure red pixel with an\r\n * alpha of 0.5, the resulting pixel will be pure blue with an alpha of 0.475. Naturally, this means\r\n * that a pixel in the mask with an alpha of 0 will hide the corresponding pixel in all masked Game Objects\r\n *  A pixel with an alpha of 1 in the masked Game Object will receive the same alpha as the\r\n * corresponding pixel in the mask.\r\n *\r\n * Note: You cannot combine Bitmap Masks and Blend Modes on the same Game Object. You can, however,\r\n * combine Geometry Masks and Blend Modes together.\r\n *\r\n * The Bitmap Mask's location matches the location of its Game Object, not the location of the\r\n * masked objects. Moving or transforming the underlying Game Object will change the mask\r\n * (and affect the visibility of any masked objects), whereas moving or transforming a masked object\r\n * will not affect the mask.\r\n *\r\n * The Bitmap Mask will not render its Game Object by itself. If the Game Object is not in a\r\n * Scene's display list, it will only be used for the mask and its full texture will not be directly\r\n * visible. Adding the underlying Game Object to a Scene will not cause any problems - it will\r\n * render as a normal Game Object and will also serve as a mask.\r\n *\r\n * @class BitmapMask\r\n * @memberof Phaser.Display.Masks\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene which this Bitmap Mask will be used in.\r\n * @param {Phaser.GameObjects.GameObject} renderable - A renderable Game Object that uses a texture, such as a Sprite.\r\n */\r\nvar BitmapMask = new Class({\r\n\r\n    initialize:\r\n\r\n    function BitmapMask (scene, renderable)\r\n    {\r\n        var renderer = scene.sys.renderer;\r\n\r\n        /**\r\n         * A reference to either the Canvas or WebGL Renderer that this Mask is using.\r\n         *\r\n         * @name Phaser.Display.Masks.BitmapMask#renderer\r\n         * @type {(Phaser.Renderer.Canvas.CanvasRenderer|Phaser.Renderer.WebGL.WebGLRenderer)}\r\n         * @since 3.11.0\r\n         */\r\n        this.renderer = renderer;\r\n\r\n        /**\r\n         * A renderable Game Object that uses a texture, such as a Sprite.\r\n         *\r\n         * @name Phaser.Display.Masks.BitmapMask#bitmapMask\r\n         * @type {Phaser.GameObjects.GameObject}\r\n         * @since 3.0.0\r\n         */\r\n        this.bitmapMask = renderable;\r\n\r\n        /**\r\n         * The texture used for the masks framebuffer.\r\n         *\r\n         * @name Phaser.Display.Masks.BitmapMask#maskTexture\r\n         * @type {WebGLTexture}\r\n         * @default null\r\n         * @since 3.0.0\r\n         */\r\n        this.maskTexture = null;\r\n\r\n        /**\r\n         * The texture used for the main framebuffer.\r\n         *\r\n         * @name Phaser.Display.Masks.BitmapMask#mainTexture\r\n         * @type {WebGLTexture}\r\n         * @default null\r\n         * @since 3.0.0\r\n         */\r\n        this.mainTexture = null;\r\n\r\n        /**\r\n         * Whether the Bitmap Mask is dirty and needs to be updated.\r\n         *\r\n         * @name Phaser.Display.Masks.BitmapMask#dirty\r\n         * @type {boolean}\r\n         * @default true\r\n         * @since 3.0.0\r\n         */\r\n        this.dirty = true;\r\n\r\n        /**\r\n         * The framebuffer to which a masked Game Object is rendered.\r\n         *\r\n         * @name Phaser.Display.Masks.BitmapMask#mainFramebuffer\r\n         * @type {WebGLFramebuffer}\r\n         * @since 3.0.0\r\n         */\r\n        this.mainFramebuffer = null;\r\n\r\n        /**\r\n         * The framebuffer to which the Bitmap Mask's masking Game Object is rendered.\r\n         *\r\n         * @name Phaser.Display.Masks.BitmapMask#maskFramebuffer\r\n         * @type {WebGLFramebuffer}\r\n         * @since 3.0.0\r\n         */\r\n        this.maskFramebuffer = null;\r\n\r\n        /**\r\n         * Whether to invert the masks alpha.\r\n         *\r\n         * If `true`, the alpha of the masking pixel will be inverted before it's multiplied with the masked pixel.\r\n         * Essentially, this means that a masked area will be visible only if the corresponding area in the mask is invisible.\r\n         *\r\n         * @name Phaser.Display.Masks.BitmapMask#invertAlpha\r\n         * @type {boolean}\r\n         * @since 3.1.2\r\n         */\r\n        this.invertAlpha = false;\r\n\r\n        /**\r\n         * Is this mask a stencil mask?\r\n         *\r\n         * @name Phaser.Display.Masks.BitmapMask#isStencil\r\n         * @type {boolean}\r\n         * @readonly\r\n         * @since 3.17.0\r\n         */\r\n        this.isStencil = false;\r\n\r\n        this.createMask();\r\n\r\n        scene.sys.game.events.on(GameEvents.CONTEXT_RESTORED, this.createMask, this);\r\n\r\n        if (renderer)\r\n        {\r\n            renderer.on(RenderEvents.RESIZE, this.createMask, this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Creates the WebGL Texture2D objects and Framebuffers required for this\r\n     * mask. If this mask has already been created, then `clearMask` is called first.\r\n     *\r\n     * @method Phaser.Display.Masks.BitmapMask#createMask\r\n     * @since 3.50.0\r\n     */\r\n    createMask: function ()\r\n    {\r\n        var renderer = this.renderer;\r\n\r\n        if (!renderer || !renderer.gl)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if (this.mainTexture)\r\n        {\r\n            this.clearMask();\r\n        }\r\n\r\n        var width = renderer.width;\r\n        var height = renderer.height;\r\n        var pot = ((width & (width - 1)) === 0 && (height & (height - 1)) === 0);\r\n        var gl = renderer.gl;\r\n        var wrap = pot ? gl.REPEAT : gl.CLAMP_TO_EDGE;\r\n        var filter = gl.LINEAR;\r\n\r\n        this.mainTexture = renderer.createTexture2D(0, filter, filter, wrap, wrap, gl.RGBA, null, width, height);\r\n        this.maskTexture = renderer.createTexture2D(0, filter, filter, wrap, wrap, gl.RGBA, null, width, height);\r\n        this.mainFramebuffer = renderer.createFramebuffer(width, height, this.mainTexture, true);\r\n        this.maskFramebuffer = renderer.createFramebuffer(width, height, this.maskTexture, true);\r\n    },\r\n\r\n    /**\r\n     * Deletes the `mainTexture` and `maskTexture` WebGL Textures and deletes\r\n     * the `mainFramebuffer` and `maskFramebuffer` too, nulling all references.\r\n     *\r\n     * This is called when this mask is destroyed, or if you try to creat a new\r\n     * mask from this object when one is already set.\r\n     *\r\n     * @method Phaser.Display.Masks.BitmapMask#clearMask\r\n     * @since 3.50.0\r\n     */\r\n    clearMask: function ()\r\n    {\r\n        var renderer = this.renderer;\r\n\r\n        if (!renderer || !renderer.gl || !this.mainTexture)\r\n        {\r\n            return;\r\n        }\r\n\r\n        renderer.deleteTexture(this.mainTexture);\r\n        renderer.deleteTexture(this.maskTexture);\r\n        renderer.deleteFramebuffer(this.mainFramebuffer);\r\n        renderer.deleteFramebuffer(this.maskFramebuffer);\r\n\r\n        this.mainTexture = null;\r\n        this.maskTexture = null;\r\n        this.mainFramebuffer = null;\r\n        this.maskFramebuffer = null;\r\n    },\r\n\r\n    /**\r\n     * Sets a new masking Game Object for the Bitmap Mask.\r\n     *\r\n     * @method Phaser.Display.Masks.BitmapMask#setBitmap\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.GameObject} renderable - A renderable Game Object that uses a texture, such as a Sprite.\r\n     */\r\n    setBitmap: function (renderable)\r\n    {\r\n        this.bitmapMask = renderable;\r\n    },\r\n\r\n    /**\r\n     * Prepares the WebGL Renderer to render a Game Object with this mask applied.\r\n     *\r\n     * This renders the masking Game Object to the mask framebuffer and switches to the main framebuffer so that the masked Game Object will be rendered to it instead of being rendered directly to the frame.\r\n     *\r\n     * @method Phaser.Display.Masks.BitmapMask#preRenderWebGL\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Renderer.Canvas.CanvasRenderer|Phaser.Renderer.WebGL.WebGLRenderer)} renderer - The WebGL Renderer to prepare.\r\n     * @param {Phaser.GameObjects.GameObject} maskedObject - The masked Game Object which will be drawn.\r\n     * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera to render to.\r\n     */\r\n    preRenderWebGL: function (renderer, maskedObject, camera)\r\n    {\r\n        renderer.pipelines.BITMAPMASK_PIPELINE.beginMask(this, maskedObject, camera);\r\n    },\r\n\r\n    /**\r\n     * Finalizes rendering of a masked Game Object.\r\n     *\r\n     * This resets the previously bound framebuffer and switches the WebGL Renderer to the Bitmap Mask Pipeline, which uses a special fragment shader to apply the masking effect.\r\n     *\r\n     * @method Phaser.Display.Masks.BitmapMask#postRenderWebGL\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Renderer.Canvas.CanvasRenderer|Phaser.Renderer.WebGL.WebGLRenderer)} renderer - The WebGL Renderer to clean up.\r\n     */\r\n    postRenderWebGL: function (renderer, camera)\r\n    {\r\n        renderer.pipelines.BITMAPMASK_PIPELINE.endMask(this, camera);\r\n    },\r\n\r\n    /**\r\n     * This is a NOOP method. Bitmap Masks are not supported by the Canvas Renderer.\r\n     *\r\n     * @method Phaser.Display.Masks.BitmapMask#preRenderCanvas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Renderer.Canvas.CanvasRenderer|Phaser.Renderer.WebGL.WebGLRenderer)} renderer - The Canvas Renderer which would be rendered to.\r\n     * @param {Phaser.GameObjects.GameObject} mask - The masked Game Object which would be rendered.\r\n     * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera to render to.\r\n     */\r\n    preRenderCanvas: function ()\r\n    {\r\n        // NOOP\r\n    },\r\n\r\n    /**\r\n     * This is a NOOP method. Bitmap Masks are not supported by the Canvas Renderer.\r\n     *\r\n     * @method Phaser.Display.Masks.BitmapMask#postRenderCanvas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Renderer.Canvas.CanvasRenderer|Phaser.Renderer.WebGL.WebGLRenderer)} renderer - The Canvas Renderer which would be rendered to.\r\n     */\r\n    postRenderCanvas: function ()\r\n    {\r\n        // NOOP\r\n    },\r\n\r\n    /**\r\n     * Destroys this BitmapMask and nulls any references it holds.\r\n     *\r\n     * Note that if a Game Object is currently using this mask it will _not_ automatically detect you have destroyed it,\r\n     * so be sure to call `clearMask` on any Game Object using it, before destroying it.\r\n     *\r\n     * @method Phaser.Display.Masks.BitmapMask#destroy\r\n     * @since 3.7.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.clearMask();\r\n\r\n        if (this.renderer)\r\n        {\r\n            this.renderer.off(RenderEvents.RESIZE, this.createMask, this);\r\n        }\r\n        \r\n        this.bitmapMask = null;\r\n        this.prevFramebuffer = null;\r\n        this.renderer = null;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = BitmapMask;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\n\r\n/**\r\n * @classdesc\r\n * A Geometry Mask can be applied to a Game Object to hide any pixels of it which don't intersect\r\n * a visible pixel from the geometry mask. The mask is essentially a clipping path which can only\r\n * make a masked pixel fully visible or fully invisible without changing its alpha (opacity).\r\n *\r\n * A Geometry Mask uses a Graphics Game Object to determine which pixels of the masked Game Object(s)\r\n * should be clipped. For any given point of a masked Game Object's texture, the pixel will only be displayed\r\n * if the Graphics Game Object of the Geometry Mask has a visible pixel at the same position. The color and\r\n * alpha of the pixel from the Geometry Mask do not matter.\r\n *\r\n * The Geometry Mask's location matches the location of its Graphics object, not the location of the masked objects.\r\n * Moving or transforming the underlying Graphics object will change the mask (and affect the visibility\r\n * of any masked objects), whereas moving or transforming a masked object will not affect the mask.\r\n * You can think of the Geometry Mask (or rather, of its Graphics object) as an invisible curtain placed\r\n * in front of all masked objects which has its own visual properties and, naturally, respects the camera's\r\n * visual properties, but isn't affected by and doesn't follow the masked objects by itself.\r\n *\r\n * @class GeometryMask\r\n * @memberof Phaser.Display.Masks\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - This parameter is not used.\r\n * @param {Phaser.GameObjects.Graphics} graphicsGeometry - The Graphics Game Object to use for the Geometry Mask. Doesn't have to be in the Display List.\r\n */\r\nvar GeometryMask = new Class({\r\n\r\n    initialize:\r\n\r\n    function GeometryMask (scene, graphicsGeometry)\r\n    {\r\n        /**\r\n         * The Graphics object which describes the Geometry Mask.\r\n         *\r\n         * @name Phaser.Display.Masks.GeometryMask#geometryMask\r\n         * @type {Phaser.GameObjects.Graphics}\r\n         * @since 3.0.0\r\n         */\r\n        this.geometryMask = graphicsGeometry;\r\n\r\n        /**\r\n         * Similar to the BitmapMasks invertAlpha setting this to true will then hide all pixels\r\n         * drawn to the Geometry Mask.\r\n         *\r\n         * This is a WebGL only feature.\r\n         *\r\n         * @name Phaser.Display.Masks.GeometryMask#invertAlpha\r\n         * @type {boolean}\r\n         * @since 3.16.0\r\n         */\r\n        this.invertAlpha = false;\r\n\r\n        /**\r\n         * Is this mask a stencil mask?\r\n         *\r\n         * @name Phaser.Display.Masks.GeometryMask#isStencil\r\n         * @type {boolean}\r\n         * @readonly\r\n         * @since 3.17.0\r\n         */\r\n        this.isStencil = true;\r\n\r\n        /**\r\n         * The current stencil level.\r\n         *\r\n         * @name Phaser.Display.Masks.GeometryMask#level\r\n         * @type {boolean}\r\n         * @private\r\n         * @since 3.17.0\r\n         */\r\n        this.level = 0;\r\n    },\r\n\r\n    /**\r\n     * Sets a new Graphics object for the Geometry Mask.\r\n     *\r\n     * @method Phaser.Display.Masks.GeometryMask#setShape\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.Graphics} graphicsGeometry - The Graphics object which will be used for the Geometry Mask.\r\n     *\r\n     * @return {this} This Geometry Mask\r\n     */\r\n    setShape: function (graphicsGeometry)\r\n    {\r\n        this.geometryMask = graphicsGeometry;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the `invertAlpha` property of this Geometry Mask.\r\n     *\r\n     * Inverting the alpha essentially flips the way the mask works.\r\n     *\r\n     * This is a WebGL only feature.\r\n     *\r\n     * @method Phaser.Display.Masks.GeometryMask#setInvertAlpha\r\n     * @since 3.17.0\r\n     *\r\n     * @param {boolean} [value=true] - Invert the alpha of this mask?\r\n     *\r\n     * @return {this} This Geometry Mask\r\n     */\r\n    setInvertAlpha: function (value)\r\n    {\r\n        if (value === undefined) { value = true; }\r\n\r\n        this.invertAlpha = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Renders the Geometry Mask's underlying Graphics object to the OpenGL stencil buffer and enables the stencil test, which clips rendered pixels according to the mask.\r\n     *\r\n     * @method Phaser.Display.Masks.GeometryMask#preRenderWebGL\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - The WebGL Renderer instance to draw to.\r\n     * @param {Phaser.GameObjects.GameObject} child - The Game Object being rendered.\r\n     * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera the Game Object is being rendered through.\r\n     */\r\n    preRenderWebGL: function (renderer, child, camera)\r\n    {\r\n        var gl = renderer.gl;\r\n\r\n        //  Force flushing before drawing to stencil buffer\r\n        renderer.flush();\r\n\r\n        if (renderer.maskStack.length === 0)\r\n        {\r\n            gl.enable(gl.STENCIL_TEST);\r\n            gl.clear(gl.STENCIL_BUFFER_BIT);\r\n\r\n            renderer.maskCount = 0;\r\n        }\r\n\r\n        if (renderer.currentCameraMask.mask !== this)\r\n        {\r\n            renderer.currentMask.mask = this;\r\n        }\r\n\r\n        renderer.maskStack.push({ mask: this, camera: camera });\r\n\r\n        this.applyStencil(renderer, camera, true);\r\n\r\n        renderer.maskCount++;\r\n    },\r\n\r\n    /**\r\n     * Applies the current stencil mask to the renderer.\r\n     *\r\n     * @method Phaser.Display.Masks.GeometryMask#applyStencil\r\n     * @since 3.17.0\r\n     *\r\n     * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - The WebGL Renderer instance to draw to.\r\n     * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera the Game Object is being rendered through.\r\n     * @param {boolean} inc - Is this an INCR stencil or a DECR stencil?\r\n     */\r\n    applyStencil: function (renderer, camera, inc)\r\n    {\r\n        var gl = renderer.gl;\r\n        var geometryMask = this.geometryMask;\r\n        var level = renderer.maskCount;\r\n\r\n        gl.colorMask(false, false, false, false);\r\n\r\n        if (inc)\r\n        {\r\n            gl.stencilFunc(gl.EQUAL, level, 0xFF);\r\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);\r\n        }\r\n        else\r\n        {\r\n            gl.stencilFunc(gl.EQUAL, level + 1, 0xFF);\r\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);\r\n        }\r\n\r\n        //  Write stencil buffer\r\n        geometryMask.renderWebGL(renderer, geometryMask, camera);\r\n\r\n        renderer.flush();\r\n\r\n        gl.colorMask(true, true, true, true);\r\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\r\n\r\n        if (inc)\r\n        {\r\n            if (this.invertAlpha)\r\n            {\r\n                gl.stencilFunc(gl.NOTEQUAL, level + 1, 0xFF);\r\n            }\r\n            else\r\n            {\r\n                gl.stencilFunc(gl.EQUAL, level + 1, 0xFF);\r\n            }\r\n        }\r\n        else if (this.invertAlpha)\r\n        {\r\n            gl.stencilFunc(gl.NOTEQUAL, level, 0xFF);\r\n        }\r\n        else\r\n        {\r\n            gl.stencilFunc(gl.EQUAL, level, 0xFF);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Flushes all rendered pixels and disables the stencil test of a WebGL context, thus disabling the mask for it.\r\n     *\r\n     * @method Phaser.Display.Masks.GeometryMask#postRenderWebGL\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - The WebGL Renderer instance to draw flush.\r\n     */\r\n    postRenderWebGL: function (renderer)\r\n    {\r\n        var gl = renderer.gl;\r\n\r\n        renderer.maskStack.pop();\r\n\r\n        renderer.maskCount--;\r\n\r\n        //  Force flush before disabling stencil test\r\n        renderer.flush();\r\n\r\n        var current = renderer.currentMask;\r\n\r\n        if (renderer.maskStack.length === 0)\r\n        {\r\n            //  If this is the only mask in the stack, flush and disable\r\n            current.mask = null;\r\n\r\n            gl.disable(gl.STENCIL_TEST);\r\n        }\r\n        else\r\n        {\r\n            var prev = renderer.maskStack[renderer.maskStack.length - 1];\r\n\r\n            prev.mask.applyStencil(renderer, prev.camera, false);\r\n\r\n            if (renderer.currentCameraMask.mask !== prev.mask)\r\n            {\r\n                current.mask = prev.mask;\r\n                current.camera = prev.camera;\r\n            }\r\n            else\r\n            {\r\n                current.mask = null;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets the clipping path of a 2D canvas context to the Geometry Mask's underlying Graphics object.\r\n     *\r\n     * @method Phaser.Display.Masks.GeometryMask#preRenderCanvas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - The Canvas Renderer instance to set the clipping path on.\r\n     * @param {Phaser.GameObjects.GameObject} mask - The Game Object being rendered.\r\n     * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera the Game Object is being rendered through.\r\n     */\r\n    preRenderCanvas: function (renderer, mask, camera)\r\n    {\r\n        var geometryMask = this.geometryMask;\r\n\r\n        renderer.currentContext.save();\r\n\r\n        geometryMask.renderCanvas(renderer, geometryMask, camera, null, null, true);\r\n\r\n        renderer.currentContext.clip();\r\n    },\r\n\r\n    /**\r\n     * Restore the canvas context's previous clipping path, thus turning off the mask for it.\r\n     *\r\n     * @method Phaser.Display.Masks.GeometryMask#postRenderCanvas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - The Canvas Renderer instance being restored.\r\n     */\r\n    postRenderCanvas: function (renderer)\r\n    {\r\n        renderer.currentContext.restore();\r\n    },\r\n\r\n    /**\r\n     * Destroys this GeometryMask and nulls any references it holds.\r\n     *\r\n     * Note that if a Game Object is currently using this mask it will _not_ automatically detect you have destroyed it,\r\n     * so be sure to call `clearMask` on any Game Object using it, before destroying it.\r\n     *\r\n     * @method Phaser.Display.Masks.GeometryMask#destroy\r\n     * @since 3.7.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.geometryMask = null;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = GeometryMask;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Clamp = require('../../math/Clamp');\r\n\r\n//  bitmask flag for GameObject.renderMask\r\nvar _FLAG = 2; // 0010\r\n\r\n/**\r\n * Provides methods used for setting the alpha properties of a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Alpha\r\n * @since 3.0.0\r\n */\r\n\r\nvar Alpha = {\r\n\r\n    /**\r\n     * Private internal value. Holds the global alpha value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#_alpha\r\n     * @type {number}\r\n     * @private\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    _alpha: 1,\r\n\r\n    /**\r\n     * Private internal value. Holds the top-left alpha value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#_alphaTL\r\n     * @type {number}\r\n     * @private\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    _alphaTL: 1,\r\n\r\n    /**\r\n     * Private internal value. Holds the top-right alpha value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#_alphaTR\r\n     * @type {number}\r\n     * @private\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    _alphaTR: 1,\r\n\r\n    /**\r\n     * Private internal value. Holds the bottom-left alpha value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#_alphaBL\r\n     * @type {number}\r\n     * @private\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    _alphaBL: 1,\r\n\r\n    /**\r\n     * Private internal value. Holds the bottom-right alpha value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#_alphaBR\r\n     * @type {number}\r\n     * @private\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    _alphaBR: 1,\r\n\r\n    /**\r\n     * Clears all alpha values associated with this Game Object.\r\n     *\r\n     * Immediately sets the alpha levels back to 1 (fully opaque).\r\n     *\r\n     * @method Phaser.GameObjects.Components.Alpha#clearAlpha\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    clearAlpha: function ()\r\n    {\r\n        return this.setAlpha(1);\r\n    },\r\n\r\n    /**\r\n     * Set the Alpha level of this Game Object. The alpha controls the opacity of the Game Object as it renders.\r\n     * Alpha values are provided as a float between 0, fully transparent, and 1, fully opaque.\r\n     *\r\n     * If your game is running under WebGL you can optionally specify four different alpha values, each of which\r\n     * correspond to the four corners of the Game Object. Under Canvas only the `topLeft` value given is used.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Alpha#setAlpha\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [topLeft=1] - The alpha value used for the top-left of the Game Object. If this is the only value given it's applied across the whole Game Object.\r\n     * @param {number} [topRight] - The alpha value used for the top-right of the Game Object. WebGL only.\r\n     * @param {number} [bottomLeft] - The alpha value used for the bottom-left of the Game Object. WebGL only.\r\n     * @param {number} [bottomRight] - The alpha value used for the bottom-right of the Game Object. WebGL only.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setAlpha: function (topLeft, topRight, bottomLeft, bottomRight)\r\n    {\r\n        if (topLeft === undefined) { topLeft = 1; }\r\n\r\n        //  Treat as if there is only one alpha value for the whole Game Object\r\n        if (topRight === undefined)\r\n        {\r\n            this.alpha = topLeft;\r\n        }\r\n        else\r\n        {\r\n            this._alphaTL = Clamp(topLeft, 0, 1);\r\n            this._alphaTR = Clamp(topRight, 0, 1);\r\n            this._alphaBL = Clamp(bottomLeft, 0, 1);\r\n            this._alphaBR = Clamp(bottomRight, 0, 1);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * The alpha value of the Game Object.\r\n     *\r\n     * This is a global value, impacting the entire Game Object, not just a region of it.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#alpha\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    alpha: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._alpha;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            var v = Clamp(value, 0, 1);\r\n\r\n            this._alpha = v;\r\n            this._alphaTL = v;\r\n            this._alphaTR = v;\r\n            this._alphaBL = v;\r\n            this._alphaBR = v;\r\n\r\n            if (v === 0)\r\n            {\r\n                this.renderFlags &= ~_FLAG;\r\n            }\r\n            else\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The alpha value starting from the top-left of the Game Object.\r\n     * This value is interpolated from the corner to the center of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#alphaTopLeft\r\n     * @type {number}\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     */\r\n    alphaTopLeft: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._alphaTL;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            var v = Clamp(value, 0, 1);\r\n\r\n            this._alphaTL = v;\r\n\r\n            if (v !== 0)\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The alpha value starting from the top-right of the Game Object.\r\n     * This value is interpolated from the corner to the center of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#alphaTopRight\r\n     * @type {number}\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     */\r\n    alphaTopRight: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._alphaTR;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            var v = Clamp(value, 0, 1);\r\n\r\n            this._alphaTR = v;\r\n\r\n            if (v !== 0)\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The alpha value starting from the bottom-left of the Game Object.\r\n     * This value is interpolated from the corner to the center of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#alphaBottomLeft\r\n     * @type {number}\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     */\r\n    alphaBottomLeft: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._alphaBL;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            var v = Clamp(value, 0, 1);\r\n\r\n            this._alphaBL = v;\r\n\r\n            if (v !== 0)\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The alpha value starting from the bottom-right of the Game Object.\r\n     * This value is interpolated from the corner to the center of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Alpha#alphaBottomRight\r\n     * @type {number}\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     */\r\n    alphaBottomRight: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._alphaBR;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            var v = Clamp(value, 0, 1);\r\n\r\n            this._alphaBR = v;\r\n\r\n            if (v !== 0)\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Alpha;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Clamp = require('../../math/Clamp');\r\n\r\n//  bitmask flag for GameObject.renderMask\r\nvar _FLAG = 2; // 0010\r\n\r\n/**\r\n * Provides methods used for setting the alpha property of a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.GameObjects.Components.AlphaSingle\r\n * @since 3.22.0\r\n */\r\n\r\nvar AlphaSingle = {\r\n\r\n    /**\r\n     * Private internal value. Holds the global alpha value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.AlphaSingle#_alpha\r\n     * @type {number}\r\n     * @private\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    _alpha: 1,\r\n\r\n    /**\r\n     * Clears all alpha values associated with this Game Object.\r\n     *\r\n     * Immediately sets the alpha levels back to 1 (fully opaque).\r\n     *\r\n     * @method Phaser.GameObjects.Components.AlphaSingle#clearAlpha\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    clearAlpha: function ()\r\n    {\r\n        return this.setAlpha(1);\r\n    },\r\n\r\n    /**\r\n     * Set the Alpha level of this Game Object. The alpha controls the opacity of the Game Object as it renders.\r\n     * Alpha values are provided as a float between 0, fully transparent, and 1, fully opaque.\r\n     *\r\n     * @method Phaser.GameObjects.Components.AlphaSingle#setAlpha\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [value=1] - The alpha value applied across the whole Game Object.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setAlpha: function (value)\r\n    {\r\n        if (value === undefined) { value = 1; }\r\n\r\n        this.alpha = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * The alpha value of the Game Object.\r\n     *\r\n     * This is a global value, impacting the entire Game Object, not just a region of it.\r\n     *\r\n     * @name Phaser.GameObjects.Components.AlphaSingle#alpha\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    alpha: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._alpha;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            var v = Clamp(value, 0, 1);\r\n\r\n            this._alpha = v;\r\n\r\n            if (v === 0)\r\n            {\r\n                this.renderFlags &= ~_FLAG;\r\n            }\r\n            else\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = AlphaSingle;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar BlendModes = require('../../renderer/BlendModes');\r\n\r\n/**\r\n * Provides methods used for setting the blend mode of a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.GameObjects.Components.BlendMode\r\n * @since 3.0.0\r\n */\r\n\r\nvar BlendMode = {\r\n\r\n    /**\r\n     * Private internal value. Holds the current blend mode.\r\n     * \r\n     * @name Phaser.GameObjects.Components.BlendMode#_blendMode\r\n     * @type {number}\r\n     * @private\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\r\n    _blendMode: BlendModes.NORMAL,\r\n\r\n    /**\r\n     * Sets the Blend Mode being used by this Game Object.\r\n     *\r\n     * This can be a const, such as `Phaser.BlendModes.SCREEN`, or an integer, such as 4 (for Overlay)\r\n     *\r\n     * Under WebGL only the following Blend Modes are available:\r\n     *\r\n     * * ADD\r\n     * * MULTIPLY\r\n     * * SCREEN\r\n     * * ERASE\r\n     *\r\n     * Canvas has more available depending on browser support.\r\n     *\r\n     * You can also create your own custom Blend Modes in WebGL.\r\n     *\r\n     * Blend modes have different effects under Canvas and WebGL, and from browser to browser, depending\r\n     * on support. Blend Modes also cause a WebGL batch flush should it encounter a new blend mode. For these\r\n     * reasons try to be careful about the construction of your Scene and the frequency of which blend modes\r\n     * are used.\r\n     *\r\n     * @name Phaser.GameObjects.Components.BlendMode#blendMode\r\n     * @type {(Phaser.BlendModes|string)}\r\n     * @since 3.0.0\r\n     */\r\n    blendMode: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._blendMode;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (typeof value === 'string')\r\n            {\r\n                value = BlendModes[value];\r\n            }\r\n\r\n            value |= 0;\r\n\r\n            if (value >= -1)\r\n            {\r\n                this._blendMode = value;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the Blend Mode being used by this Game Object.\r\n     *\r\n     * This can be a const, such as `Phaser.BlendModes.SCREEN`, or an integer, such as 4 (for Overlay)\r\n     *\r\n     * Under WebGL only the following Blend Modes are available:\r\n     *\r\n     * * ADD\r\n     * * MULTIPLY\r\n     * * SCREEN\r\n     * * ERASE (only works when rendering to a framebuffer, like a Render Texture)\r\n     *\r\n     * Canvas has more available depending on browser support.\r\n     *\r\n     * You can also create your own custom Blend Modes in WebGL.\r\n     *\r\n     * Blend modes have different effects under Canvas and WebGL, and from browser to browser, depending\r\n     * on support. Blend Modes also cause a WebGL batch flush should it encounter a new blend mode. For these\r\n     * reasons try to be careful about the construction of your Scene and the frequency in which blend modes\r\n     * are used.\r\n     *\r\n     * @method Phaser.GameObjects.Components.BlendMode#setBlendMode\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|Phaser.BlendModes)} value - The BlendMode value. Either a string or a CONST.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setBlendMode: function (value)\r\n    {\r\n        this.blendMode = value;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = BlendMode;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for calculating and setting the size of a non-Frame based Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n * \r\n * @namespace Phaser.GameObjects.Components.ComputedSize\r\n * @since 3.0.0\r\n */\r\n\r\nvar ComputedSize = {\r\n\r\n    /**\r\n     * The native (un-scaled) width of this Game Object.\r\n     * \r\n     * Changing this value will not change the size that the Game Object is rendered in-game.\r\n     * For that you need to either set the scale of the Game Object (`setScale`) or use\r\n     * the `displayWidth` property.\r\n     * \r\n     * @name Phaser.GameObjects.Components.ComputedSize#width\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    width: 0,\r\n\r\n    /**\r\n     * The native (un-scaled) height of this Game Object.\r\n     * \r\n     * Changing this value will not change the size that the Game Object is rendered in-game.\r\n     * For that you need to either set the scale of the Game Object (`setScale`) or use\r\n     * the `displayHeight` property.\r\n     * \r\n     * @name Phaser.GameObjects.Components.ComputedSize#height\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    height: 0,\r\n\r\n    /**\r\n     * The displayed width of this Game Object.\r\n     * \r\n     * This value takes into account the scale factor.\r\n     * \r\n     * Setting this value will adjust the Game Object's scale property.\r\n     * \r\n     * @name Phaser.GameObjects.Components.ComputedSize#displayWidth\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    displayWidth: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.scaleX * this.width;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.scaleX = value / this.width;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The displayed height of this Game Object.\r\n     * \r\n     * This value takes into account the scale factor.\r\n     * \r\n     * Setting this value will adjust the Game Object's scale property.\r\n     * \r\n     * @name Phaser.GameObjects.Components.ComputedSize#displayHeight\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    displayHeight: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.scaleY * this.height;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.scaleY = value / this.height;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the internal size of this Game Object, as used for frame or physics body creation.\r\n     * \r\n     * This will not change the size that the Game Object is rendered in-game.\r\n     * For that you need to either set the scale of the Game Object (`setScale`) or call the\r\n     * `setDisplaySize` method, which is the same thing as changing the scale but allows you\r\n     * to do so by giving pixel values.\r\n     * \r\n     * If you have enabled this Game Object for input, changing the size will _not_ change the\r\n     * size of the hit area. To do this you should adjust the `input.hitArea` object directly.\r\n     * \r\n     * @method Phaser.GameObjects.Components.ComputedSize#setSize\r\n     * @since 3.4.0\r\n     *\r\n     * @param {number} width - The width of this Game Object.\r\n     * @param {number} height - The height of this Game Object.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setSize: function (width, height)\r\n    {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the display size of this Game Object.\r\n     * \r\n     * Calling this will adjust the scale.\r\n     * \r\n     * @method Phaser.GameObjects.Components.ComputedSize#setDisplaySize\r\n     * @since 3.4.0\r\n     *\r\n     * @param {number} width - The width of this Game Object.\r\n     * @param {number} height - The height of this Game Object.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setDisplaySize: function (width, height)\r\n    {\r\n        this.displayWidth = width;\r\n        this.displayHeight = height;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = ComputedSize;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for getting and setting the texture of a Game Object.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Crop\r\n * @since 3.12.0\r\n */\r\n\r\nvar Crop = {\r\n\r\n    /**\r\n     * The Texture this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Crop#texture\r\n     * @type {Phaser.Textures.Texture|Phaser.Textures.CanvasTexture}\r\n     * @since 3.0.0\r\n     */\r\n    texture: null,\r\n\r\n    /**\r\n     * The Texture Frame this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Crop#frame\r\n     * @type {Phaser.Textures.Frame}\r\n     * @since 3.0.0\r\n     */\r\n    frame: null,\r\n\r\n    /**\r\n     * A boolean flag indicating if this Game Object is being cropped or not.\r\n     * You can toggle this at any time after `setCrop` has been called, to turn cropping on or off.\r\n     * Equally, calling `setCrop` with no arguments will reset the crop and disable it.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Crop#isCropped\r\n     * @type {boolean}\r\n     * @since 3.11.0\r\n     */\r\n    isCropped: false,\r\n\r\n    /**\r\n     * Applies a crop to a texture based Game Object, such as a Sprite or Image.\r\n     * \r\n     * The crop is a rectangle that limits the area of the texture frame that is visible during rendering.\r\n     * \r\n     * Cropping a Game Object does not change its size, dimensions, physics body or hit area, it just\r\n     * changes what is shown when rendered.\r\n     * \r\n     * The crop coordinates are relative to the texture frame, not the Game Object, meaning 0 x 0 is the top-left.\r\n     * \r\n     * Therefore, if you had a Game Object that had an 800x600 sized texture, and you wanted to show only the left\r\n     * half of it, you could call `setCrop(0, 0, 400, 600)`.\r\n     * \r\n     * It is also scaled to match the Game Object scale automatically. Therefore a crop rect of 100x50 would crop\r\n     * an area of 200x100 when applied to a Game Object that had a scale factor of 2.\r\n     * \r\n     * You can either pass in numeric values directly, or you can provide a single Rectangle object as the first argument.\r\n     * \r\n     * Call this method with no arguments at all to reset the crop, or toggle the property `isCropped` to `false`.\r\n     * \r\n     * You should do this if the crop rectangle becomes the same size as the frame itself, as it will allow\r\n     * the renderer to skip several internal calculations.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Crop#setCrop\r\n     * @since 3.11.0\r\n     *\r\n     * @param {(number|Phaser.Geom.Rectangle)} [x] - The x coordinate to start the crop from. Or a Phaser.Geom.Rectangle object, in which case the rest of the arguments are ignored.\r\n     * @param {number} [y] - The y coordinate to start the crop from.\r\n     * @param {number} [width] - The width of the crop rectangle in pixels.\r\n     * @param {number} [height] - The height of the crop rectangle in pixels.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setCrop: function (x, y, width, height)\r\n    {\r\n        if (x === undefined)\r\n        {\r\n            this.isCropped = false;\r\n        }\r\n        else if (this.frame)\r\n        {\r\n            if (typeof x === 'number')\r\n            {\r\n                this.frame.setCropUVs(this._crop, x, y, width, height, this.flipX, this.flipY);\r\n            }\r\n            else\r\n            {\r\n                var rect = x;\r\n\r\n                this.frame.setCropUVs(this._crop, rect.x, rect.y, rect.width, rect.height, this.flipX, this.flipY);\r\n            }\r\n\r\n            this.isCropped = true;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Internal method that returns a blank, well-formed crop object for use by a Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Crop#resetCropObject\r\n     * @private\r\n     * @since 3.12.0\r\n     * \r\n     * @return {object} The crop object.\r\n     */\r\n    resetCropObject: function ()\r\n    {\r\n        return { u0: 0, v0: 0, u1: 0, v1: 0, width: 0, height: 0, x: 0, y: 0, flipX: false, flipY: false, cx: 0, cy: 0, cw: 0, ch: 0 };\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Crop;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for setting the depth of a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Depth\r\n * @since 3.0.0\r\n */\r\n\r\nvar Depth = {\r\n\r\n    /**\r\n     * Private internal value. Holds the depth of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Depth#_depth\r\n     * @type {number}\r\n     * @private\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\r\n    _depth: 0,\r\n\r\n    /**\r\n     * The depth of this Game Object within the Scene.\r\n     *\r\n     * The depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\n     * of Game Objects, without actually moving their position in the display list.\r\n     *\r\n     * The default depth is zero. A Game Object with a higher depth\r\n     * value will always render in front of one with a lower value.\r\n     *\r\n     * Setting the depth will queue a depth sort event within the Scene.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Depth#depth\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    depth: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._depth;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (this.displayList)\r\n            {\r\n                this.displayList.queueDepthSort();\r\n            }\r\n\r\n            this._depth = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The depth of this Game Object within the Scene.\r\n     *\r\n     * The depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\n     * of Game Objects, without actually moving their position in the display list.\r\n     *\r\n     * The default depth is zero. A Game Object with a higher depth\r\n     * value will always render in front of one with a lower value.\r\n     *\r\n     * Setting the depth will queue a depth sort event within the Scene.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Depth#setDepth\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The depth of this Game Object.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setDepth: function (value)\r\n    {\r\n        if (value === undefined) { value = 0; }\r\n\r\n        this.depth = value;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Depth;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for visually flipping a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n * \r\n * @namespace Phaser.GameObjects.Components.Flip\r\n * @since 3.0.0\r\n */\r\n\r\nvar Flip = {\r\n\r\n    /**\r\n     * The horizontally flipped state of the Game Object.\r\n     * \r\n     * A Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\n     * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n     * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Flip#flipX\r\n     * @type {boolean}\r\n     * @default false\r\n     * @since 3.0.0\r\n     */\r\n    flipX: false,\r\n\r\n    /**\r\n     * The vertically flipped state of the Game Object.\r\n     * \r\n     * A Game Object that is flipped vertically will render inversed on the vertical axis (i.e. upside down)\r\n     * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n     * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Flip#flipY\r\n     * @type {boolean}\r\n     * @default false\r\n     * @since 3.0.0\r\n     */\r\n    flipY: false,\r\n\r\n    /**\r\n     * Toggles the horizontal flipped state of this Game Object.\r\n     * \r\n     * A Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\n     * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n     * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Flip#toggleFlipX\r\n     * @since 3.0.0\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    toggleFlipX: function ()\r\n    {\r\n        this.flipX = !this.flipX;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Toggles the vertical flipped state of this Game Object.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Flip#toggleFlipY\r\n     * @since 3.0.0\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    toggleFlipY: function ()\r\n    {\r\n        this.flipY = !this.flipY;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the horizontal flipped state of this Game Object.\r\n     * \r\n     * A Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\n     * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n     * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Flip#setFlipX\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} value - The flipped state. `false` for no flip, or `true` to be flipped.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFlipX: function (value)\r\n    {\r\n        this.flipX = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the vertical flipped state of this Game Object.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Flip#setFlipY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} value - The flipped state. `false` for no flip, or `true` to be flipped.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFlipY: function (value)\r\n    {\r\n        this.flipY = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the horizontal and vertical flipped state of this Game Object.\r\n     * \r\n     * A Game Object that is flipped will render inversed on the flipped axis.\r\n     * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n     * If this Game Object has a physics body, it will not change the body. This is a rendering toggle only.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Flip#setFlip\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} x - The horizontal flipped state. `false` for no flip, or `true` to be flipped.\r\n     * @param {boolean} y - The horizontal flipped state. `false` for no flip, or `true` to be flipped.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFlip: function (x, y)\r\n    {\r\n        this.flipX = x;\r\n        this.flipY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the horizontal and vertical flipped state of this Game Object back to their default un-flipped state.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Flip#resetFlip\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    resetFlip: function ()\r\n    {\r\n        this.flipX = false;\r\n        this.flipY = false;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Flip;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Rectangle = require('../../geom/rectangle/Rectangle');\r\nvar RotateAround = require('../../math/RotateAround');\r\nvar Vector2 = require('../../math/Vector2');\r\n\r\n/**\r\n * Provides methods used for obtaining the bounds of a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.GameObjects.Components.GetBounds\r\n * @since 3.0.0\r\n */\r\n\r\nvar GetBounds = {\r\n\r\n    /**\r\n     * Processes the bounds output vector before returning it.\r\n     *\r\n     * @method Phaser.GameObjects.Components.GetBounds#prepareBoundsOutput\r\n     * @private\r\n     * @since 3.18.0\r\n     *\r\n     * @generic {Phaser.Math.Vector2} O - [output,$return]\r\n     *\r\n     * @param {(Phaser.Math.Vector2|object)} output - An object to store the values in. If not provided a new Vector2 will be created.\r\n     * @param {boolean} [includeParent=false] - If this Game Object has a parent Container, include it (and all other ancestors) in the resulting vector?\r\n     *\r\n     * @return {(Phaser.Math.Vector2|object)} The values stored in the output object.\r\n     */\r\n    prepareBoundsOutput: function (output, includeParent)\r\n    {\r\n        if (includeParent === undefined) { includeParent = false; }\r\n\r\n        if (this.rotation !== 0)\r\n        {\r\n            RotateAround(output, this.x, this.y, this.rotation);\r\n        }\r\n\r\n        if (includeParent && this.parentContainer)\r\n        {\r\n            var parentMatrix = this.parentContainer.getBoundsTransformMatrix();\r\n\r\n            parentMatrix.transformPoint(output.x, output.y, output);\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    /**\r\n     * Gets the center coordinate of this Game Object, regardless of origin.\r\n     * The returned point is calculated in local space and does not factor in any parent containers\r\n     *\r\n     * @method Phaser.GameObjects.Components.GetBounds#getCenter\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Math.Vector2} O - [output,$return]\r\n     *\r\n     * @param {(Phaser.Math.Vector2|object)} [output] - An object to store the values in. If not provided a new Vector2 will be created.\r\n     *\r\n     * @return {(Phaser.Math.Vector2|object)} The values stored in the output object.\r\n     */\r\n    getCenter: function (output)\r\n    {\r\n        if (output === undefined) { output = new Vector2(); }\r\n\r\n        output.x = this.x - (this.displayWidth * this.originX) + (this.displayWidth / 2);\r\n        output.y = this.y - (this.displayHeight * this.originY) + (this.displayHeight / 2);\r\n\r\n        return output;\r\n    },\r\n\r\n    /**\r\n     * Gets the top-left corner coordinate of this Game Object, regardless of origin.\r\n     * The returned point is calculated in local space and does not factor in any parent containers\r\n     *\r\n     * @method Phaser.GameObjects.Components.GetBounds#getTopLeft\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Math.Vector2} O - [output,$return]\r\n     *\r\n     * @param {(Phaser.Math.Vector2|object)} [output] - An object to store the values in. If not provided a new Vector2 will be created.\r\n     * @param {boolean} [includeParent=false] - If this Game Object has a parent Container, include it (and all other ancestors) in the resulting vector?\r\n     *\r\n     * @return {(Phaser.Math.Vector2|object)} The values stored in the output object.\r\n     */\r\n    getTopLeft: function (output, includeParent)\r\n    {\r\n        if (!output) { output = new Vector2(); }\r\n\r\n        output.x = this.x - (this.displayWidth * this.originX);\r\n        output.y = this.y - (this.displayHeight * this.originY);\r\n\r\n        return this.prepareBoundsOutput(output, includeParent);\r\n    },\r\n\r\n    /**\r\n     * Gets the top-center coordinate of this Game Object, regardless of origin.\r\n     * The returned point is calculated in local space and does not factor in any parent containers\r\n     *\r\n     * @method Phaser.GameObjects.Components.GetBounds#getTopCenter\r\n     * @since 3.18.0\r\n     *\r\n     * @generic {Phaser.Math.Vector2} O - [output,$return]\r\n     *\r\n     * @param {(Phaser.Math.Vector2|object)} [output] - An object to store the values in. If not provided a new Vector2 will be created.\r\n     * @param {boolean} [includeParent=false] - If this Game Object has a parent Container, include it (and all other ancestors) in the resulting vector?\r\n     *\r\n     * @return {(Phaser.Math.Vector2|object)} The values stored in the output object.\r\n     */\r\n    getTopCenter: function (output, includeParent)\r\n    {\r\n        if (!output) { output = new Vector2(); }\r\n\r\n        output.x = (this.x - (this.displayWidth * this.originX)) + (this.displayWidth / 2);\r\n        output.y = this.y - (this.displayHeight * this.originY);\r\n\r\n        return this.prepareBoundsOutput(output, includeParent);\r\n    },\r\n\r\n    /**\r\n     * Gets the top-right corner coordinate of this Game Object, regardless of origin.\r\n     * The returned point is calculated in local space and does not factor in any parent containers\r\n     *\r\n     * @method Phaser.GameObjects.Components.GetBounds#getTopRight\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Math.Vector2} O - [output,$return]\r\n     *\r\n     * @param {(Phaser.Math.Vector2|object)} [output] - An object to store the values in. If not provided a new Vector2 will be created.\r\n     * @param {boolean} [includeParent=false] - If this Game Object has a parent Container, include it (and all other ancestors) in the resulting vector?\r\n     *\r\n     * @return {(Phaser.Math.Vector2|object)} The values stored in the output object.\r\n     */\r\n    getTopRight: function (output, includeParent)\r\n    {\r\n        if (!output) { output = new Vector2(); }\r\n\r\n        output.x = (this.x - (this.displayWidth * this.originX)) + this.displayWidth;\r\n        output.y = this.y - (this.displayHeight * this.originY);\r\n\r\n        return this.prepareBoundsOutput(output, includeParent);\r\n    },\r\n\r\n    /**\r\n     * Gets the left-center coordinate of this Game Object, regardless of origin.\r\n     * The returned point is calculated in local space and does not factor in any parent containers\r\n     *\r\n     * @method Phaser.GameObjects.Components.GetBounds#getLeftCenter\r\n     * @since 3.18.0\r\n     *\r\n     * @generic {Phaser.Math.Vector2} O - [output,$return]\r\n     *\r\n     * @param {(Phaser.Math.Vector2|object)} [output] - An object to store the values in. If not provided a new Vector2 will be created.\r\n     * @param {boolean} [includeParent=false] - If this Game Object has a parent Container, include it (and all other ancestors) in the resulting vector?\r\n     *\r\n     * @return {(Phaser.Math.Vector2|object)} The values stored in the output object.\r\n     */\r\n    getLeftCenter: function (output, includeParent)\r\n    {\r\n        if (!output) { output = new Vector2(); }\r\n\r\n        output.x = this.x - (this.displayWidth * this.originX);\r\n        output.y = (this.y - (this.displayHeight * this.originY)) + (this.displayHeight / 2);\r\n\r\n        return this.prepareBoundsOutput(output, includeParent);\r\n    },\r\n\r\n    /**\r\n     * Gets the right-center coordinate of this Game Object, regardless of origin.\r\n     * The returned point is calculated in local space and does not factor in any parent containers\r\n     *\r\n     * @method Phaser.GameObjects.Components.GetBounds#getRightCenter\r\n     * @since 3.18.0\r\n     *\r\n     * @generic {Phaser.Math.Vector2} O - [output,$return]\r\n     *\r\n     * @param {(Phaser.Math.Vector2|object)} [output] - An object to store the values in. If not provided a new Vector2 will be created.\r\n     * @param {boolean} [includeParent=false] - If this Game Object has a parent Container, include it (and all other ancestors) in the resulting vector?\r\n     *\r\n     * @return {(Phaser.Math.Vector2|object)} The values stored in the output object.\r\n     */\r\n    getRightCenter: function (output, includeParent)\r\n    {\r\n        if (!output) { output = new Vector2(); }\r\n\r\n        output.x = (this.x - (this.displayWidth * this.originX)) + this.displayWidth;\r\n        output.y = (this.y - (this.displayHeight * this.originY)) + (this.displayHeight / 2);\r\n\r\n        return this.prepareBoundsOutput(output, includeParent);\r\n    },\r\n\r\n    /**\r\n     * Gets the bottom-left corner coordinate of this Game Object, regardless of origin.\r\n     * The returned point is calculated in local space and does not factor in any parent containers\r\n     *\r\n     * @method Phaser.GameObjects.Components.GetBounds#getBottomLeft\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Math.Vector2} O - [output,$return]\r\n     *\r\n     * @param {(Phaser.Math.Vector2|object)} [output] - An object to store the values in. If not provided a new Vector2 will be created.\r\n     * @param {boolean} [includeParent=false] - If this Game Object has a parent Container, include it (and all other ancestors) in the resulting vector?\r\n     *\r\n     * @return {(Phaser.Math.Vector2|object)} The values stored in the output object.\r\n     */\r\n    getBottomLeft: function (output, includeParent)\r\n    {\r\n        if (!output) { output = new Vector2(); }\r\n\r\n        output.x = this.x - (this.displayWidth * this.originX);\r\n        output.y = (this.y - (this.displayHeight * this.originY)) + this.displayHeight;\r\n\r\n        return this.prepareBoundsOutput(output, includeParent);\r\n    },\r\n\r\n    /**\r\n     * Gets the bottom-center coordinate of this Game Object, regardless of origin.\r\n     * The returned point is calculated in local space and does not factor in any parent containers\r\n     *\r\n     * @method Phaser.GameObjects.Components.GetBounds#getBottomCenter\r\n     * @since 3.18.0\r\n     *\r\n     * @generic {Phaser.Math.Vector2} O - [output,$return]\r\n     *\r\n     * @param {(Phaser.Math.Vector2|object)} [output] - An object to store the values in. If not provided a new Vector2 will be created.\r\n     * @param {boolean} [includeParent=false] - If this Game Object has a parent Container, include it (and all other ancestors) in the resulting vector?\r\n     *\r\n     * @return {(Phaser.Math.Vector2|object)} The values stored in the output object.\r\n     */\r\n    getBottomCenter: function (output, includeParent)\r\n    {\r\n        if (!output) { output = new Vector2(); }\r\n\r\n        output.x = (this.x - (this.displayWidth * this.originX)) + (this.displayWidth / 2);\r\n        output.y = (this.y - (this.displayHeight * this.originY)) + this.displayHeight;\r\n\r\n        return this.prepareBoundsOutput(output, includeParent);\r\n    },\r\n\r\n    /**\r\n     * Gets the bottom-right corner coordinate of this Game Object, regardless of origin.\r\n     * The returned point is calculated in local space and does not factor in any parent containers\r\n     *\r\n     * @method Phaser.GameObjects.Components.GetBounds#getBottomRight\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Math.Vector2} O - [output,$return]\r\n     *\r\n     * @param {(Phaser.Math.Vector2|object)} [output] - An object to store the values in. If not provided a new Vector2 will be created.\r\n     * @param {boolean} [includeParent=false] - If this Game Object has a parent Container, include it (and all other ancestors) in the resulting vector?\r\n     *\r\n     * @return {(Phaser.Math.Vector2|object)} The values stored in the output object.\r\n     */\r\n    getBottomRight: function (output, includeParent)\r\n    {\r\n        if (!output) { output = new Vector2(); }\r\n\r\n        output.x = (this.x - (this.displayWidth * this.originX)) + this.displayWidth;\r\n        output.y = (this.y - (this.displayHeight * this.originY)) + this.displayHeight;\r\n\r\n        return this.prepareBoundsOutput(output, includeParent);\r\n    },\r\n\r\n    /**\r\n     * Gets the bounds of this Game Object, regardless of origin.\r\n     * The values are stored and returned in a Rectangle, or Rectangle-like, object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.GetBounds#getBounds\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Rectangle} O - [output,$return]\r\n     *\r\n     * @param {(Phaser.Geom.Rectangle|object)} [output] - An object to store the values in. If not provided a new Rectangle will be created.\r\n     *\r\n     * @return {(Phaser.Geom.Rectangle|object)} The values stored in the output object.\r\n     */\r\n    getBounds: function (output)\r\n    {\r\n        if (output === undefined) { output = new Rectangle(); }\r\n\r\n        //  We can use the output object to temporarily store the x/y coords in:\r\n\r\n        var TLx, TLy, TRx, TRy, BLx, BLy, BRx, BRy;\r\n\r\n        // Instead of doing a check if parent container is \r\n        // defined per corner we only do it once.\r\n        if (this.parentContainer)\r\n        {\r\n            var parentMatrix = this.parentContainer.getBoundsTransformMatrix();\r\n\r\n            this.getTopLeft(output);\r\n            parentMatrix.transformPoint(output.x, output.y, output);\r\n\r\n            TLx = output.x;\r\n            TLy = output.y;\r\n\r\n            this.getTopRight(output);\r\n            parentMatrix.transformPoint(output.x, output.y, output);\r\n\r\n            TRx = output.x;\r\n            TRy = output.y;\r\n\r\n            this.getBottomLeft(output);\r\n            parentMatrix.transformPoint(output.x, output.y, output);\r\n\r\n            BLx = output.x;\r\n            BLy = output.y;\r\n\r\n            this.getBottomRight(output);\r\n            parentMatrix.transformPoint(output.x, output.y, output);\r\n\r\n            BRx = output.x;\r\n            BRy = output.y;\r\n        }\r\n        else\r\n        {\r\n            this.getTopLeft(output);\r\n\r\n            TLx = output.x;\r\n            TLy = output.y;\r\n\r\n            this.getTopRight(output);\r\n\r\n            TRx = output.x;\r\n            TRy = output.y;\r\n\r\n            this.getBottomLeft(output);\r\n\r\n            BLx = output.x;\r\n            BLy = output.y;\r\n\r\n            this.getBottomRight(output);\r\n\r\n            BRx = output.x;\r\n            BRy = output.y;\r\n        }\r\n\r\n        output.x = Math.min(TLx, TRx, BLx, BRx);\r\n        output.y = Math.min(TLy, TRy, BLy, BRy);\r\n        output.width = Math.max(TLx, TRx, BLx, BRx) - output.x;\r\n        output.height = Math.max(TLy, TRy, BLy, BRy) - output.y;\r\n\r\n        return output;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = GetBounds;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar BitmapMask = require('../../display/mask/BitmapMask');\r\nvar GeometryMask = require('../../display/mask/GeometryMask');\r\n\r\n/**\r\n * Provides methods used for getting and setting the mask of a Game Object.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Mask\r\n * @since 3.0.0\r\n */\r\n\r\nvar Mask = {\r\n\r\n    /**\r\n     * The Mask this Game Object is using during render.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Mask#mask\r\n     * @type {Phaser.Display.Masks.BitmapMask|Phaser.Display.Masks.GeometryMask}\r\n     * @since 3.0.0\r\n     */\r\n    mask: null,\r\n\r\n    /**\r\n     * Sets the mask that this Game Object will use to render with.\r\n     *\r\n     * The mask must have been previously created and can be either a GeometryMask or a BitmapMask.\r\n     * Note: Bitmap Masks only work on WebGL. Geometry Masks work on both WebGL and Canvas.\r\n     *\r\n     * If a mask is already set on this Game Object it will be immediately replaced.\r\n     *\r\n     * Masks are positioned in global space and are not relative to the Game Object to which they\r\n     * are applied. The reason for this is that multiple Game Objects can all share the same mask.\r\n     *\r\n     * Masks have no impact on physics or input detection. They are purely a rendering component\r\n     * that allows you to limit what is visible during the render pass.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Mask#setMask\r\n     * @since 3.6.2\r\n     *\r\n     * @param {Phaser.Display.Masks.BitmapMask|Phaser.Display.Masks.GeometryMask} mask - The mask this Game Object will use when rendering.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setMask: function (mask)\r\n    {\r\n        this.mask = mask;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Clears the mask that this Game Object was using.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Mask#clearMask\r\n     * @since 3.6.2\r\n     *\r\n     * @param {boolean} [destroyMask=false] - Destroy the mask before clearing it?\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    clearMask: function (destroyMask)\r\n    {\r\n        if (destroyMask === undefined) { destroyMask = false; }\r\n\r\n        if (destroyMask && this.mask)\r\n        {\r\n            this.mask.destroy();\r\n        }\r\n\r\n        this.mask = null;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Creates and returns a Bitmap Mask. This mask can be used by any Game Object,\r\n     * including this one.\r\n     *\r\n     * Note: Bitmap Masks only work on WebGL. Geometry Masks work on both WebGL and Canvas.\r\n     *\r\n     * To create the mask you need to pass in a reference to a renderable Game Object.\r\n     * A renderable Game Object is one that uses a texture to render with, such as an\r\n     * Image, Sprite, Render Texture or BitmapText.\r\n     *\r\n     * If you do not provide a renderable object, and this Game Object has a texture,\r\n     * it will use itself as the object. This means you can call this method to create\r\n     * a Bitmap Mask from any renderable Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Mask#createBitmapMask\r\n     * @since 3.6.2\r\n     *\r\n     * @param {Phaser.GameObjects.GameObject} [renderable] - A renderable Game Object that uses a texture, such as a Sprite.\r\n     *\r\n     * @return {Phaser.Display.Masks.BitmapMask} This Bitmap Mask that was created.\r\n     */\r\n    createBitmapMask: function (renderable)\r\n    {\r\n        if (renderable === undefined && (this.texture || this.shader))\r\n        {\r\n            // eslint-disable-next-line consistent-this\r\n            renderable = this;\r\n        }\r\n\r\n        return new BitmapMask(this.scene, renderable);\r\n    },\r\n\r\n    /**\r\n     * Creates and returns a Geometry Mask. This mask can be used by any Game Object,\r\n     * including this one.\r\n     *\r\n     * To create the mask you need to pass in a reference to a Graphics Game Object.\r\n     *\r\n     * If you do not provide a graphics object, and this Game Object is an instance\r\n     * of a Graphics object, then it will use itself to create the mask.\r\n     *\r\n     * This means you can call this method to create a Geometry Mask from any Graphics Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Mask#createGeometryMask\r\n     * @since 3.6.2\r\n     *\r\n     * @param {Phaser.GameObjects.Graphics} [graphics] - A Graphics Game Object. The geometry within it will be used as the mask.\r\n     *\r\n     * @return {Phaser.Display.Masks.GeometryMask} This Geometry Mask that was created.\r\n     */\r\n    createGeometryMask: function (graphics)\r\n    {\r\n        if (graphics === undefined && this.type === 'Graphics')\r\n        {\r\n            // eslint-disable-next-line consistent-this\r\n            graphics = this;\r\n        }\r\n\r\n        return new GeometryMask(this.scene, graphics);\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Mask;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for getting and setting the origin of a Game Object.\r\n * Values are normalized, given in the range 0 to 1.\r\n * Display values contain the calculated pixel values.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Origin\r\n * @since 3.0.0\r\n */\r\n\r\nvar Origin = {\r\n\r\n    /**\r\n     * A property indicating that a Game Object has this component.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#_originComponent\r\n     * @type {boolean}\r\n     * @private\r\n     * @default true\r\n     * @since 3.2.0\r\n     */\r\n    _originComponent: true,\r\n\r\n    /**\r\n     * The horizontal origin of this Game Object.\r\n     * The origin maps the relationship between the size and position of the Game Object.\r\n     * The default value is 0.5, meaning all Game Objects are positioned based on their center.\r\n     * Setting the value to 0 means the position now relates to the left of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#originX\r\n     * @type {number}\r\n     * @default 0.5\r\n     * @since 3.0.0\r\n     */\r\n    originX: 0.5,\r\n\r\n    /**\r\n     * The vertical origin of this Game Object.\r\n     * The origin maps the relationship between the size and position of the Game Object.\r\n     * The default value is 0.5, meaning all Game Objects are positioned based on their center.\r\n     * Setting the value to 0 means the position now relates to the top of the Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#originY\r\n     * @type {number}\r\n     * @default 0.5\r\n     * @since 3.0.0\r\n     */\r\n    originY: 0.5,\r\n\r\n    //  private + read only\r\n    _displayOriginX: 0,\r\n    _displayOriginY: 0,\r\n\r\n    /**\r\n     * The horizontal display origin of this Game Object.\r\n     * The origin is a normalized value between 0 and 1.\r\n     * The displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#displayOriginX\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    displayOriginX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._displayOriginX;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._displayOriginX = value;\r\n            this.originX = value / this.width;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The vertical display origin of this Game Object.\r\n     * The origin is a normalized value between 0 and 1.\r\n     * The displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Origin#displayOriginY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    displayOriginY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._displayOriginY;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._displayOriginY = value;\r\n            this.originY = value / this.height;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the origin of this Game Object.\r\n     *\r\n     * The values are given in the range 0 to 1.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Origin#setOrigin\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [x=0.5] - The horizontal origin value.\r\n     * @param {number} [y=x] - The vertical origin value. If not defined it will be set to the value of `x`.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setOrigin: function (x, y)\r\n    {\r\n        if (x === undefined) { x = 0.5; }\r\n        if (y === undefined) { y = x; }\r\n\r\n        this.originX = x;\r\n        this.originY = y;\r\n\r\n        return this.updateDisplayOrigin();\r\n    },\r\n\r\n    /**\r\n     * Sets the origin of this Game Object based on the Pivot values in its Frame.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Origin#setOriginFromFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setOriginFromFrame: function ()\r\n    {\r\n        if (!this.frame || !this.frame.customPivot)\r\n        {\r\n            return this.setOrigin();\r\n        }\r\n        else\r\n        {\r\n            this.originX = this.frame.pivotX;\r\n            this.originY = this.frame.pivotY;\r\n        }\r\n\r\n        return this.updateDisplayOrigin();\r\n    },\r\n\r\n    /**\r\n     * Sets the display origin of this Game Object.\r\n     * The difference between this and setting the origin is that you can use pixel values for setting the display origin.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Origin#setDisplayOrigin\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [x=0] - The horizontal display origin value.\r\n     * @param {number} [y=x] - The vertical display origin value. If not defined it will be set to the value of `x`.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setDisplayOrigin: function (x, y)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = x; }\r\n\r\n        this.displayOriginX = x;\r\n        this.displayOriginY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Updates the Display Origin cached values internally stored on this Game Object.\r\n     * You don't usually call this directly, but it is exposed for edge-cases where you may.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Origin#updateDisplayOrigin\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    updateDisplayOrigin: function ()\r\n    {\r\n        this._displayOriginX = this.originX * this.width;\r\n        this._displayOriginY = this.originY * this.height;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Origin;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar DegToRad = require('../../math/DegToRad');\r\nvar GetBoolean = require('../../tweens/builders/GetBoolean');\r\nvar GetValue = require('../../utils/object/GetValue');\r\nvar TWEEN_CONST = require('../../tweens/tween/const');\r\nvar Vector2 = require('../../math/Vector2');\r\n\r\n/**\r\n * Provides methods used for managing a Game Object following a Path.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @namespace Phaser.GameObjects.Components.PathFollower\r\n * @since 3.17.0\r\n */\r\n\r\nvar PathFollower = {\r\n\r\n    /**\r\n     * The Path this PathFollower is following. It can only follow one Path at a time.\r\n     *\r\n     * @name Phaser.GameObjects.Components.PathFollower#path\r\n     * @type {Phaser.Curves.Path}\r\n     * @since 3.0.0\r\n     */\r\n    path: null,\r\n\r\n    /**\r\n     * Should the PathFollower automatically rotate to point in the direction of the Path?\r\n     *\r\n     * @name Phaser.GameObjects.Components.PathFollower#rotateToPath\r\n     * @type {boolean}\r\n     * @default false\r\n     * @since 3.0.0\r\n     */\r\n    rotateToPath: false,\r\n\r\n    /**\r\n     * If the PathFollower is rotating to match the Path (@see Phaser.GameObjects.PathFollower#rotateToPath)\r\n     * this value is added to the rotation value. This allows you to rotate objects to a path but control\r\n     * the angle of the rotation as well.\r\n     *\r\n     * @name Phaser.GameObjects.PathFollower#pathRotationOffset\r\n     * @type {number}\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\r\n    pathRotationOffset: 0,\r\n\r\n    /**\r\n     * An additional vector to add to the PathFollowers position, allowing you to offset it from the\r\n     * Path coordinates.\r\n     *\r\n     * @name Phaser.GameObjects.PathFollower#pathOffset\r\n     * @type {Phaser.Math.Vector2}\r\n     * @since 3.0.0\r\n     */\r\n    pathOffset: null,\r\n\r\n    /**\r\n     * A Vector2 that stores the current point of the path the follower is on.\r\n     *\r\n     * @name Phaser.GameObjects.PathFollower#pathVector\r\n     * @type {Phaser.Math.Vector2}\r\n     * @since 3.0.0\r\n     */\r\n    pathVector: null,\r\n\r\n    /**\r\n     * The distance the follower has traveled from the previous point to the current one, at the last update.\r\n     *\r\n     * @name Phaser.GameObjects.PathFollower#pathDelta\r\n     * @type {Phaser.Math.Vector2}\r\n     * @since 3.23.0\r\n     */\r\n    pathDelta: null,\r\n\r\n    /**\r\n     * The Tween used for following the Path.\r\n     *\r\n     * @name Phaser.GameObjects.PathFollower#pathTween\r\n     * @type {Phaser.Tweens.Tween}\r\n     * @since 3.0.0\r\n     */\r\n    pathTween: null,\r\n\r\n    /**\r\n     * Settings for the PathFollower.\r\n     *\r\n     * @name Phaser.GameObjects.PathFollower#pathConfig\r\n     * @type {?Phaser.Types.GameObjects.PathFollower.PathConfig}\r\n     * @default null\r\n     * @since 3.0.0\r\n     */\r\n    pathConfig: null,\r\n\r\n    /**\r\n     * Records the direction of the follower so it can change direction.\r\n     *\r\n     * @name Phaser.GameObjects.PathFollower#_prevDirection\r\n     * @type {number}\r\n     * @private\r\n     * @since 3.0.0\r\n     */\r\n    _prevDirection: TWEEN_CONST.PLAYING_FORWARD,\r\n\r\n    /**\r\n     * Set the Path that this PathFollower should follow.\r\n     *\r\n     * Optionally accepts {@link Phaser.Types.GameObjects.PathFollower.PathConfig} settings.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#setPath\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Curves.Path} path - The Path this PathFollower is following. It can only follow one Path at a time.\r\n     * @param {(number|Phaser.Types.GameObjects.PathFollower.PathConfig|Phaser.Types.Tweens.NumberTweenBuilderConfig)} [config] - Settings for the PathFollower.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setPath: function (path, config)\r\n    {\r\n        if (config === undefined) { config = this.pathConfig; }\r\n\r\n        var tween = this.pathTween;\r\n\r\n        if (tween && tween.isPlaying())\r\n        {\r\n            tween.stop();\r\n        }\r\n\r\n        this.path = path;\r\n\r\n        if (config)\r\n        {\r\n            this.startFollow(config);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set whether the PathFollower should automatically rotate to point in the direction of the Path.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#setRotateToPath\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} value - Whether the PathFollower should automatically rotate to point in the direction of the Path.\r\n     * @param {number} [offset=0] - Rotation offset in degrees.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    setRotateToPath: function (value, offset)\r\n    {\r\n        if (offset === undefined) { offset = 0; }\r\n\r\n        this.rotateToPath = value;\r\n\r\n        this.pathRotationOffset = offset;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Is this PathFollower actively following a Path or not?\r\n     *\r\n     * To be considered as `isFollowing` it must be currently moving on a Path, and not paused.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#isFollowing\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} `true` is this PathFollower is actively following a Path, otherwise `false`.\r\n     */\r\n    isFollowing: function ()\r\n    {\r\n        var tween = this.pathTween;\r\n\r\n        return (tween && tween.isPlaying());\r\n    },\r\n\r\n    /**\r\n     * Starts this PathFollower following its given Path.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#startFollow\r\n     * @since 3.3.0\r\n     *\r\n     * @param {(number|Phaser.Types.GameObjects.PathFollower.PathConfig|Phaser.Types.Tweens.NumberTweenBuilderConfig)} [config={}] - The duration of the follow, or a PathFollower config object.\r\n     * @param {number} [startAt=0] - Optional start position of the follow, between 0 and 1.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    startFollow: function (config, startAt)\r\n    {\r\n        if (config === undefined) { config = {}; }\r\n        if (startAt === undefined) { startAt = 0; }\r\n\r\n        var tween = this.pathTween;\r\n\r\n        if (tween && tween.isPlaying())\r\n        {\r\n            tween.stop();\r\n        }\r\n\r\n        if (typeof config === 'number')\r\n        {\r\n            config = { duration: config };\r\n        }\r\n\r\n        //  Override in case they've been specified in the config\r\n        config.from = GetValue(config, 'from', 0);\r\n        config.to = GetValue(config, 'to', 1);\r\n\r\n        var positionOnPath = GetBoolean(config, 'positionOnPath', false);\r\n\r\n        this.rotateToPath = GetBoolean(config, 'rotateToPath', false);\r\n        this.pathRotationOffset = GetValue(config, 'rotationOffset', 0);\r\n\r\n        //  This works, but it's not an ideal way of doing it as the follower jumps position\r\n        var seek = GetValue(config, 'startAt', startAt);\r\n\r\n        if (seek)\r\n        {\r\n            config.onStart = function (tween)\r\n            {\r\n                var tweenData = tween.data[0];\r\n                tweenData.progress = seek;\r\n                tweenData.elapsed = tweenData.duration * seek;\r\n                var v = tweenData.ease(tweenData.progress);\r\n                tweenData.current = tweenData.start + ((tweenData.end - tweenData.start) * v);\r\n                tweenData.target[tweenData.key] = tweenData.current;\r\n            };\r\n        }\r\n\r\n        if (!this.pathOffset)\r\n        {\r\n            this.pathOffset = new Vector2(this.x, this.y);\r\n        }\r\n\r\n        if (!this.pathVector)\r\n        {\r\n            this.pathVector = new Vector2();\r\n        }\r\n\r\n        if (!this.pathDelta)\r\n        {\r\n            this.pathDelta = new Vector2();\r\n        }\r\n\r\n        this.pathDelta.reset();\r\n\r\n        this.pathTween = this.scene.sys.tweens.addCounter(config);\r\n\r\n        //  The starting point of the path, relative to this follower\r\n        this.path.getStartPoint(this.pathOffset);\r\n\r\n        if (positionOnPath)\r\n        {\r\n            this.x = this.pathOffset.x;\r\n            this.y = this.pathOffset.y;\r\n        }\r\n\r\n        this.pathOffset.x = this.x - this.pathOffset.x;\r\n        this.pathOffset.y = this.y - this.pathOffset.y;\r\n\r\n        this._prevDirection = TWEEN_CONST.PLAYING_FORWARD;\r\n\r\n        if (this.rotateToPath)\r\n        {\r\n            //  Set the rotation now (in case the tween has a delay on it, etc)\r\n            var nextPoint = this.path.getPoint(0.1);\r\n\r\n            this.rotation = Math.atan2(nextPoint.y - this.y, nextPoint.x - this.x) + DegToRad(this.pathRotationOffset);\r\n        }\r\n\r\n        this.pathConfig = config;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Pauses this PathFollower. It will still continue to render, but it will remain motionless at the\r\n     * point on the Path at which you paused it.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#pauseFollow\r\n     * @since 3.3.0\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    pauseFollow: function ()\r\n    {\r\n        var tween = this.pathTween;\r\n\r\n        if (tween && tween.isPlaying())\r\n        {\r\n            tween.pause();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resumes a previously paused PathFollower.\r\n     *\r\n     * If the PathFollower was not paused this has no effect.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#resumeFollow\r\n     * @since 3.3.0\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    resumeFollow: function ()\r\n    {\r\n        var tween = this.pathTween;\r\n\r\n        if (tween && tween.isPaused())\r\n        {\r\n            tween.resume();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Stops this PathFollower from following the path any longer.\r\n     *\r\n     * This will invoke any 'stop' conditions that may exist on the Path, or for the follower.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#stopFollow\r\n     * @since 3.3.0\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    stopFollow: function ()\r\n    {\r\n        var tween = this.pathTween;\r\n\r\n        if (tween && tween.isPlaying())\r\n        {\r\n            tween.stop();\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Internal update handler that advances this PathFollower along the path.\r\n     *\r\n     * Called automatically by the Scene step, should not typically be called directly.\r\n     *\r\n     * @method Phaser.GameObjects.Components.PathFollower#pathUpdate\r\n     * @since 3.17.0\r\n     */\r\n    pathUpdate: function ()\r\n    {\r\n        var tween = this.pathTween;\r\n\r\n        if (tween)\r\n        {\r\n            var tweenData = tween.data[0];\r\n            var pathDelta = this.pathDelta;\r\n            var pathVector = this.pathVector;\r\n\r\n            pathDelta.copy(pathVector).negate();\r\n\r\n            if (tweenData.state === TWEEN_CONST.COMPLETE)\r\n            {\r\n                this.path.getPoint(1, pathVector);\r\n\r\n                pathDelta.add(pathVector);\r\n                pathVector.add(this.pathOffset);\r\n\r\n                this.setPosition(pathVector.x, pathVector.y);\r\n\r\n                return;\r\n            }\r\n            else if (tweenData.state !== TWEEN_CONST.PLAYING_FORWARD && tweenData.state !== TWEEN_CONST.PLAYING_BACKWARD)\r\n            {\r\n                //  If delayed, etc then bail out\r\n                return;\r\n            }\r\n\r\n            this.path.getPoint(tween.getValue(), pathVector);\r\n\r\n            pathDelta.add(pathVector);\r\n            pathVector.add(this.pathOffset);\r\n\r\n            var oldX = this.x;\r\n            var oldY = this.y;\r\n\r\n            this.setPosition(pathVector.x, pathVector.y);\r\n\r\n            var speedX = this.x - oldX;\r\n            var speedY = this.y - oldY;\r\n\r\n            if (speedX === 0 && speedY === 0)\r\n            {\r\n                //  Bail out early\r\n                return;\r\n            }\r\n\r\n            if (tweenData.state !== this._prevDirection)\r\n            {\r\n                //  We've changed direction, so don't do a rotate this frame\r\n                this._prevDirection = tweenData.state;\r\n\r\n                return;\r\n            }\r\n\r\n            if (this.rotateToPath)\r\n            {\r\n                this.rotation = Math.atan2(speedY, speedX) + DegToRad(this.pathRotationOffset);\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = PathFollower;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar DeepCopy = require('../../utils/object/DeepCopy');\r\nvar PIPELINE_CONST = require('../../renderer/webgl/pipelines/const');\r\nvar SpliceOne = require('../../utils/array/SpliceOne');\r\n\r\n/**\r\n * Provides methods used for setting the WebGL rendering pipeline of a Game Object.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Pipeline\r\n * @webglOnly\r\n * @since 3.0.0\r\n */\r\n\r\nvar Pipeline = {\r\n\r\n    /**\r\n     * The initial WebGL pipeline of this Game Object.\r\n     *\r\n     * If you call `resetPipeline` on this Game Object, the pipeline is reset to this default.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Pipeline#defaultPipeline\r\n     * @type {Phaser.Renderer.WebGL.WebGLPipeline}\r\n     * @default null\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     */\r\n    defaultPipeline: null,\r\n\r\n    /**\r\n     * The current WebGL pipeline of this Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Pipeline#pipeline\r\n     * @type {Phaser.Renderer.WebGL.WebGLPipeline}\r\n     * @default null\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     */\r\n    pipeline: null,\r\n\r\n    /**\r\n     * Does this Game Object have any Post Pipelines set?\r\n     *\r\n     * @name Phaser.GameObjects.Components.Pipeline#hasPostPipeline\r\n     * @type {boolean}\r\n     * @webglOnly\r\n     * @since 3.50.0\r\n     */\r\n    hasPostPipeline: false,\r\n\r\n    /**\r\n     * The WebGL Post FX Pipelines this Game Object uses for post-render effects.\r\n     *\r\n     * The pipelines are processed in the order in which they appear in this array.\r\n     *\r\n     * If you modify this array directly, be sure to set the\r\n     * `hasPostPipeline` property accordingly.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Pipeline#postPipelines\r\n     * @type {Phaser.Renderer.WebGL.Pipelines.PostFXPipeline[]}\r\n     * @webglOnly\r\n     * @since 3.50.0\r\n     */\r\n    postPipelines: null,\r\n\r\n    /**\r\n     * An object to store pipeline specific data in, to be read by the pipelines this Game Object uses.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Pipeline#pipelineData\r\n     * @type {object}\r\n     * @webglOnly\r\n     * @since 3.50.0\r\n     */\r\n    pipelineData: null,\r\n\r\n    /**\r\n     * Sets the initial WebGL Pipeline of this Game Object.\r\n     *\r\n     * This should only be called during the instantiation of the Game Object. After that, use `setPipeline`.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Pipeline#initPipeline\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|Phaser.Renderer.WebGL.WebGLPipeline)} pipeline - Either the string-based name of the pipeline, or a pipeline instance to set.\r\n     *\r\n     * @return {boolean} `true` if the pipeline was set successfully, otherwise `false`.\r\n     */\r\n    initPipeline: function (pipeline)\r\n    {\r\n        if (pipeline === undefined) { pipeline = PIPELINE_CONST.MULTI_PIPELINE; }\r\n\r\n        var renderer = this.scene.sys.renderer;\r\n\r\n        if (!renderer)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        var pipelines = renderer.pipelines;\r\n\r\n        this.postPipelines = [];\r\n        this.pipelineData = {};\r\n\r\n        if (pipelines)\r\n        {\r\n            var instance = pipelines.get(pipeline);\r\n\r\n            if (instance)\r\n            {\r\n                this.defaultPipeline = instance;\r\n                this.pipeline = instance;\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the main WebGL Pipeline of this Game Object.\r\n     *\r\n     * Also sets the `pipelineData` property, if the parameter is given.\r\n     *\r\n     * Both the pipeline and post pipelines share the same pipeline data object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Pipeline#setPipeline\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|Phaser.Renderer.WebGL.WebGLPipeline)} pipeline - Either the string-based name of the pipeline, or a pipeline instance to set.\r\n     * @param {object} [pipelineData] - Optional pipeline data object that is _deep copied_ into the `pipelineData` property of this Game Object.\r\n     * @param {boolean} [copyData=true] - Should the pipeline data object be _deep copied_ into the `pipelineData` property of this Game Object? If `false` it will be set by reference instead.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setPipeline: function (pipeline, pipelineData, copyData)\r\n    {\r\n        var renderer = this.scene.sys.renderer;\r\n\r\n        if (!renderer)\r\n        {\r\n            return this;\r\n        }\r\n\r\n        var pipelines = renderer.pipelines;\r\n\r\n        if (pipelines)\r\n        {\r\n            var instance = pipelines.get(pipeline);\r\n\r\n            if (instance)\r\n            {\r\n                this.pipeline = instance;\r\n            }\r\n\r\n            if (pipelineData)\r\n            {\r\n                this.pipelineData = (copyData) ? DeepCopy(pipelineData) : pipelineData;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets one, or more, Post Pipelines on this Game Object.\r\n     *\r\n     * Post Pipelines are invoked after this Game Object has rendered to its target and\r\n     * are commonly used for post-fx.\r\n     *\r\n     * The post pipelines are appended to the `postPipelines` array belonging to this\r\n     * Game Object. When the renderer processes this Game Object, it iterates through the post\r\n     * pipelines in the order in which they appear in the array. If you are stacking together\r\n     * multiple effects, be aware that the order is important.\r\n     *\r\n     * If you call this method multiple times, the new pipelines will be appended to any existing\r\n     * post pipelines already set. Use the `resetPostPipeline` method to clear them first, if required.\r\n     *\r\n     * You can optionally also sets the `pipelineData` property, if the parameter is given.\r\n     *\r\n     * Both the pipeline and post pipelines share the pipeline data object together.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Pipeline#setPostPipeline\r\n     * @webglOnly\r\n     * @since 3.50.0\r\n     *\r\n     * @param {(string|string[]|function|function[]|Phaser.Renderer.WebGL.Pipelines.PostFXPipeline|Phaser.Renderer.WebGL.Pipelines.PostFXPipeline[])} pipelines - Either the string-based name of the pipeline, or a pipeline instance, or class, or an array of them.\r\n     * @param {object} [pipelineData] - Optional pipeline data object that is _deep copied_ into the `pipelineData` property of this Game Object.\r\n     * @param {boolean} [copyData=true] - Should the pipeline data object be _deep copied_ into the `pipelineData` property of this Game Object? If `false` it will be set by reference instead.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setPostPipeline: function (pipelines, pipelineData, copyData)\r\n    {\r\n        var renderer = this.scene.sys.renderer;\r\n\r\n        if (!renderer)\r\n        {\r\n            return this;\r\n        }\r\n\r\n        var pipelineManager = renderer.pipelines;\r\n\r\n        if (pipelineManager)\r\n        {\r\n            if (!Array.isArray(pipelines))\r\n            {\r\n                pipelines = [ pipelines ];\r\n            }\r\n\r\n            for (var i = 0; i < pipelines.length; i++)\r\n            {\r\n                var instance = pipelineManager.getPostPipeline(pipelines[i], this);\r\n\r\n                if (instance)\r\n                {\r\n                    this.postPipelines.push(instance);\r\n                }\r\n            }\r\n\r\n            if (pipelineData)\r\n            {\r\n                this.pipelineData = (copyData) ? DeepCopy(pipelineData) : pipelineData;\r\n            }\r\n        }\r\n\r\n        this.hasPostPipeline = (this.postPipelines.length > 0);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Adds an entry to the `pipelineData` object belonging to this Game Object.\r\n     *\r\n     * If the 'key' already exists, its value is updated. If it doesn't exist, it is created.\r\n     *\r\n     * If `value` is undefined, and `key` exists, `key` is removed from the data object.\r\n     *\r\n     * Both the pipeline and post pipelines share the pipeline data object together.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Pipeline#setPipelineData\r\n     * @webglOnly\r\n     * @since 3.50.0\r\n     *\r\n     * @param {string} key - The key of the pipeline data to set, update, or delete.\r\n     * @param {any} [value] - The value to be set with the key. If `undefined` then `key` will be deleted from the object.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setPipelineData: function (key, value)\r\n    {\r\n        var data = this.pipelineData;\r\n\r\n        if (value === undefined)\r\n        {\r\n            delete data[key];\r\n        }\r\n        else\r\n        {\r\n            data[key] = value;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Gets a Post Pipeline instance from this Game Object, based on the given name, and returns it.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Pipeline#getPostPipeline\r\n     * @webglOnly\r\n     * @since 3.50.0\r\n     *\r\n     * @param {(string|function|Phaser.Renderer.WebGL.Pipelines.PostFXPipeline)} pipeline - The string-based name of the pipeline, or a pipeline class.\r\n     *\r\n     * @return {(Phaser.Renderer.WebGL.Pipelines.PostFXPipeline|Phaser.Renderer.WebGL.Pipelines.PostFXPipeline[])} The Post Pipeline/s matching the name, or undefined if no match. If more than one match they are returned in an array.\r\n     */\r\n    getPostPipeline: function (pipeline)\r\n    {\r\n        var pipelines = this.postPipelines;\r\n\r\n        var results = [];\r\n\r\n        for (var i = 0; i < pipelines.length; i++)\r\n        {\r\n            var instance = pipelines[i];\r\n\r\n            if ((typeof pipeline === 'string' && instance.name === pipeline) || instance instanceof pipeline)\r\n            {\r\n                results.push(instance);\r\n            }\r\n        }\r\n\r\n        return (results.length === 1) ? results[0] : results;\r\n    },\r\n\r\n    /**\r\n     * Resets the WebGL Pipeline of this Game Object back to the default it was created with.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Pipeline#resetPipeline\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} [resetPostPipelines=false] - Reset all of the post pipelines?\r\n     * @param {boolean} [resetData=false] - Reset the `pipelineData` object to being an empty object?\r\n     *\r\n     * @return {boolean} `true` if the pipeline was reset successfully, otherwise `false`.\r\n     */\r\n    resetPipeline: function (resetPostPipelines, resetData)\r\n    {\r\n        if (resetPostPipelines === undefined) { resetPostPipelines = false; }\r\n        if (resetData === undefined) { resetData = false; }\r\n\r\n        this.pipeline = this.defaultPipeline;\r\n\r\n        if (resetPostPipelines)\r\n        {\r\n            this.postPipelines = [];\r\n            this.hasPostPipeline = false;\r\n        }\r\n\r\n        if (resetData)\r\n        {\r\n            this.pipelineData = {};\r\n        }\r\n\r\n        return (this.pipeline !== null);\r\n    },\r\n\r\n    /**\r\n     * Resets the WebGL Post Pipelines of this Game Object. It does this by calling\r\n     * the `destroy` method on each post pipeline and then clearing the local array.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Pipeline#resetPostPipeline\r\n     * @webglOnly\r\n     * @since 3.50.0\r\n     *\r\n     * @param {boolean} [resetData=false] - Reset the `pipelineData` object to being an empty object?\r\n     */\r\n    resetPostPipeline: function (resetData)\r\n    {\r\n        if (resetData === undefined) { resetData = false; }\r\n\r\n        var pipelines = this.postPipelines;\r\n\r\n        for (var i = 0; i < pipelines.length; i++)\r\n        {\r\n            pipelines[i].destroy();\r\n        }\r\n\r\n        this.postPipelines = [];\r\n        this.hasPostPipeline = false;\r\n\r\n        if (resetData)\r\n        {\r\n            this.pipelineData = {};\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes a type of Post Pipeline instances from this Game Object, based on the given name, and destroys them.\r\n     *\r\n     * If you wish to remove all Post Pipelines use the `resetPostPipeline` method instead.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Pipeline#removePostPipeline\r\n     * @webglOnly\r\n     * @since 3.50.0\r\n     *\r\n     * @param {string|Phaser.Renderer.WebGL.Pipelines.PostFXPipeline} pipeline - The string-based name of the pipeline, or a pipeline class.\r\n     *\r\n     * @return {this} This Game Object.\r\n     */\r\n    removePostPipeline: function (pipeline)\r\n    {\r\n        var pipelines = this.postPipelines;\r\n\r\n        for (var i = pipelines.length - 1; i >= 0; i--)\r\n        {\r\n            var instance = pipelines[i];\r\n\r\n            if (\r\n                (typeof pipeline === 'string' && instance.name === pipeline) ||\r\n                (typeof pipeline !== 'string' && instance instanceof pipeline))\r\n            {\r\n                instance.destroy();\r\n\r\n                SpliceOne(pipelines, i);\r\n            }\r\n        }\r\n\r\n        this.hasPostPipeline = (this.postPipelines.length > 0);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Gets the name of the WebGL Pipeline this Game Object is currently using.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Pipeline#getPipelineName\r\n     * @webglOnly\r\n     * @since 3.0.0\r\n     *\r\n     * @return {string} The string-based name of the pipeline being used by this Game Object.\r\n     */\r\n    getPipelineName: function ()\r\n    {\r\n        return this.pipeline.name;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Pipeline;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for getting and setting the Scroll Factor of a Game Object.\r\n *\r\n * @namespace Phaser.GameObjects.Components.ScrollFactor\r\n * @since 3.0.0\r\n */\r\n\r\nvar ScrollFactor = {\r\n\r\n    /**\r\n     * The horizontal scroll factor of this Game Object.\r\n     *\r\n     * The scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n     *\r\n     * When a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\n     * It does not change the Game Objects actual position values.\r\n     *\r\n     * A value of 1 means it will move exactly in sync with a camera.\r\n     * A value of 0 means it will not move at all, even if the camera moves.\r\n     * Other values control the degree to which the camera movement is mapped to this Game Object.\r\n     * \r\n     * Please be aware that scroll factor values other than 1 are not taken in to consideration when\r\n     * calculating physics collisions. Bodies always collide based on their world position, but changing\r\n     * the scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\n     * them from physics bodies if not accounted for in your code.\r\n     *\r\n     * @name Phaser.GameObjects.Components.ScrollFactor#scrollFactorX\r\n     * @type {number}\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    scrollFactorX: 1,\r\n\r\n    /**\r\n     * The vertical scroll factor of this Game Object.\r\n     *\r\n     * The scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n     *\r\n     * When a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\n     * It does not change the Game Objects actual position values.\r\n     *\r\n     * A value of 1 means it will move exactly in sync with a camera.\r\n     * A value of 0 means it will not move at all, even if the camera moves.\r\n     * Other values control the degree to which the camera movement is mapped to this Game Object.\r\n     * \r\n     * Please be aware that scroll factor values other than 1 are not taken in to consideration when\r\n     * calculating physics collisions. Bodies always collide based on their world position, but changing\r\n     * the scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\n     * them from physics bodies if not accounted for in your code.\r\n     *\r\n     * @name Phaser.GameObjects.Components.ScrollFactor#scrollFactorY\r\n     * @type {number}\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    scrollFactorY: 1,\r\n\r\n    /**\r\n     * Sets the scroll factor of this Game Object.\r\n     *\r\n     * The scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n     *\r\n     * When a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\n     * It does not change the Game Objects actual position values.\r\n     *\r\n     * A value of 1 means it will move exactly in sync with a camera.\r\n     * A value of 0 means it will not move at all, even if the camera moves.\r\n     * Other values control the degree to which the camera movement is mapped to this Game Object.\r\n     * \r\n     * Please be aware that scroll factor values other than 1 are not taken in to consideration when\r\n     * calculating physics collisions. Bodies always collide based on their world position, but changing\r\n     * the scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\n     * them from physics bodies if not accounted for in your code.\r\n     *\r\n     * @method Phaser.GameObjects.Components.ScrollFactor#setScrollFactor\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal scroll factor of this Game Object.\r\n     * @param {number} [y=x] - The vertical scroll factor of this Game Object. If not set it will use the `x` value.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setScrollFactor: function (x, y)\r\n    {\r\n        if (y === undefined) { y = x; }\r\n\r\n        this.scrollFactorX = x;\r\n        this.scrollFactorY = y;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = ScrollFactor;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Provides methods used for getting and setting the size of a Game Object.\r\n * \r\n * @namespace Phaser.GameObjects.Components.Size\r\n * @since 3.0.0\r\n */\r\n\r\nvar Size = {\r\n\r\n    /**\r\n     * A property indicating that a Game Object has this component.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Size#_sizeComponent\r\n     * @type {boolean}\r\n     * @private\r\n     * @default true\r\n     * @since 3.2.0\r\n     */\r\n    _sizeComponent: true,\r\n\r\n    /**\r\n     * The native (un-scaled) width of this Game Object.\r\n     * \r\n     * Changing this value will not change the size that the Game Object is rendered in-game.\r\n     * For that you need to either set the scale of the Game Object (`setScale`) or use\r\n     * the `displayWidth` property.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Size#width\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    width: 0,\r\n\r\n    /**\r\n     * The native (un-scaled) height of this Game Object.\r\n     * \r\n     * Changing this value will not change the size that the Game Object is rendered in-game.\r\n     * For that you need to either set the scale of the Game Object (`setScale`) or use\r\n     * the `displayHeight` property.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Size#height\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    height: 0,\r\n\r\n    /**\r\n     * The displayed width of this Game Object.\r\n     * \r\n     * This value takes into account the scale factor.\r\n     * \r\n     * Setting this value will adjust the Game Object's scale property.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Size#displayWidth\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    displayWidth: {\r\n\r\n        get: function ()\r\n        {\r\n            return Math.abs(this.scaleX * this.frame.realWidth);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.scaleX = value / this.frame.realWidth;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The displayed height of this Game Object.\r\n     * \r\n     * This value takes into account the scale factor.\r\n     * \r\n     * Setting this value will adjust the Game Object's scale property.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Size#displayHeight\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    displayHeight: {\r\n\r\n        get: function ()\r\n        {\r\n            return Math.abs(this.scaleY * this.frame.realHeight);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.scaleY = value / this.frame.realHeight;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the size of this Game Object to be that of the given Frame.\r\n     * \r\n     * This will not change the size that the Game Object is rendered in-game.\r\n     * For that you need to either set the scale of the Game Object (`setScale`) or call the\r\n     * `setDisplaySize` method, which is the same thing as changing the scale but allows you\r\n     * to do so by giving pixel values.\r\n     * \r\n     * If you have enabled this Game Object for input, changing the size will _not_ change the\r\n     * size of the hit area. To do this you should adjust the `input.hitArea` object directly.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Size#setSizeToFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Textures.Frame} frame - The frame to base the size of this Game Object on.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setSizeToFrame: function (frame)\r\n    {\r\n        if (frame === undefined) { frame = this.frame; }\r\n\r\n        this.width = frame.realWidth;\r\n        this.height = frame.realHeight;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal size of this Game Object, as used for frame or physics body creation.\r\n     * \r\n     * This will not change the size that the Game Object is rendered in-game.\r\n     * For that you need to either set the scale of the Game Object (`setScale`) or call the\r\n     * `setDisplaySize` method, which is the same thing as changing the scale but allows you\r\n     * to do so by giving pixel values.\r\n     * \r\n     * If you have enabled this Game Object for input, changing the size will _not_ change the\r\n     * size of the hit area. To do this you should adjust the `input.hitArea` object directly.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Size#setSize\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} width - The width of this Game Object.\r\n     * @param {number} height - The height of this Game Object.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setSize: function (width, height)\r\n    {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the display size of this Game Object.\r\n     * \r\n     * Calling this will adjust the scale.\r\n     * \r\n     * @method Phaser.GameObjects.Components.Size#setDisplaySize\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} width - The width of this Game Object.\r\n     * @param {number} height - The height of this Game Object.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setDisplaySize: function (width, height)\r\n    {\r\n        this.displayWidth = width;\r\n        this.displayHeight = height;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Size;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  bitmask flag for GameObject.renderMask\r\nvar _FLAG = 8; // 1000\r\n\r\n/**\r\n * Provides methods used for getting and setting the texture of a Game Object.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Texture\r\n * @since 3.0.0\r\n */\r\n\r\nvar Texture = {\r\n\r\n    /**\r\n     * The Texture this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Texture#texture\r\n     * @type {Phaser.Textures.Texture|Phaser.Textures.CanvasTexture}\r\n     * @since 3.0.0\r\n     */\r\n    texture: null,\r\n\r\n    /**\r\n     * The Texture Frame this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Texture#frame\r\n     * @type {Phaser.Textures.Frame}\r\n     * @since 3.0.0\r\n     */\r\n    frame: null,\r\n\r\n    /**\r\n     * Internal flag. Not to be set by this Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Texture#isCropped\r\n     * @type {boolean}\r\n     * @private\r\n     * @since 3.11.0\r\n     */\r\n    isCropped: false,\r\n\r\n    /**\r\n     * Sets the texture and frame this Game Object will use to render with.\r\n     *\r\n     * Textures are referenced by their string-based keys, as stored in the Texture Manager.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Texture#setTexture\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|Phaser.Textures.Texture)} key - The key of the texture to be used, as stored in the Texture Manager, or a Texture instance.\r\n     * @param {(string|number)} [frame] - The name or index of the frame within the Texture.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setTexture: function (key, frame)\r\n    {\r\n        this.texture = this.scene.sys.textures.get(key);\r\n\r\n        return this.setFrame(frame);\r\n    },\r\n\r\n    /**\r\n     * Sets the frame this Game Object will use to render with.\r\n     *\r\n     * The Frame has to belong to the current Texture being used.\r\n     *\r\n     * It can be either a string or an index.\r\n     *\r\n     * Calling `setFrame` will modify the `width` and `height` properties of your Game Object.\r\n     * It will also change the `origin` if the Frame has a custom pivot point, as exported from packages like Texture Packer.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Texture#setFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|number)} frame - The name or index of the frame within the Texture.\r\n     * @param {boolean} [updateSize=true] - Should this call adjust the size of the Game Object?\r\n     * @param {boolean} [updateOrigin=true] - Should this call adjust the origin of the Game Object?\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFrame: function (frame, updateSize, updateOrigin)\r\n    {\r\n        if (updateSize === undefined) { updateSize = true; }\r\n        if (updateOrigin === undefined) { updateOrigin = true; }\r\n\r\n        this.frame = this.texture.get(frame);\r\n\r\n        if (!this.frame.cutWidth || !this.frame.cutHeight)\r\n        {\r\n            this.renderFlags &= ~_FLAG;\r\n        }\r\n        else\r\n        {\r\n            this.renderFlags |= _FLAG;\r\n        }\r\n\r\n        if (this._sizeComponent && updateSize)\r\n        {\r\n            this.setSizeToFrame();\r\n        }\r\n\r\n        if (this._originComponent && updateOrigin)\r\n        {\r\n            if (this.frame.customPivot)\r\n            {\r\n                this.setOrigin(this.frame.pivotX, this.frame.pivotY);\r\n            }\r\n            else\r\n            {\r\n                this.updateDisplayOrigin();\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Texture;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  bitmask flag for GameObject.renderMask\r\nvar _FLAG = 8; // 1000\r\n\r\n/**\r\n * Provides methods used for getting and setting the texture of a Game Object.\r\n *\r\n * @namespace Phaser.GameObjects.Components.TextureCrop\r\n * @since 3.0.0\r\n */\r\n\r\nvar TextureCrop = {\r\n\r\n    /**\r\n     * The Texture this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TextureCrop#texture\r\n     * @type {Phaser.Textures.Texture|Phaser.Textures.CanvasTexture}\r\n     * @since 3.0.0\r\n     */\r\n    texture: null,\r\n\r\n    /**\r\n     * The Texture Frame this Game Object is using to render with.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TextureCrop#frame\r\n     * @type {Phaser.Textures.Frame}\r\n     * @since 3.0.0\r\n     */\r\n    frame: null,\r\n\r\n    /**\r\n     * A boolean flag indicating if this Game Object is being cropped or not.\r\n     * You can toggle this at any time after `setCrop` has been called, to turn cropping on or off.\r\n     * Equally, calling `setCrop` with no arguments will reset the crop and disable it.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TextureCrop#isCropped\r\n     * @type {boolean}\r\n     * @since 3.11.0\r\n     */\r\n    isCropped: false,\r\n\r\n    /**\r\n     * Applies a crop to a texture based Game Object, such as a Sprite or Image.\r\n     *\r\n     * The crop is a rectangle that limits the area of the texture frame that is visible during rendering.\r\n     *\r\n     * Cropping a Game Object does not change its size, dimensions, physics body or hit area, it just\r\n     * changes what is shown when rendered.\r\n     *\r\n     * The crop coordinates are relative to the texture frame, not the Game Object, meaning 0 x 0 is the top-left.\r\n     *\r\n     * Therefore, if you had a Game Object that had an 800x600 sized texture, and you wanted to show only the left\r\n     * half of it, you could call `setCrop(0, 0, 400, 600)`.\r\n     *\r\n     * It is also scaled to match the Game Object scale automatically. Therefore a crop rect of 100x50 would crop\r\n     * an area of 200x100 when applied to a Game Object that had a scale factor of 2.\r\n     *\r\n     * You can either pass in numeric values directly, or you can provide a single Rectangle object as the first argument.\r\n     *\r\n     * Call this method with no arguments at all to reset the crop, or toggle the property `isCropped` to `false`.\r\n     *\r\n     * You should do this if the crop rectangle becomes the same size as the frame itself, as it will allow\r\n     * the renderer to skip several internal calculations.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TextureCrop#setCrop\r\n     * @since 3.11.0\r\n     *\r\n     * @param {(number|Phaser.Geom.Rectangle)} [x] - The x coordinate to start the crop from. Or a Phaser.Geom.Rectangle object, in which case the rest of the arguments are ignored.\r\n     * @param {number} [y] - The y coordinate to start the crop from.\r\n     * @param {number} [width] - The width of the crop rectangle in pixels.\r\n     * @param {number} [height] - The height of the crop rectangle in pixels.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setCrop: function (x, y, width, height)\r\n    {\r\n        if (x === undefined)\r\n        {\r\n            this.isCropped = false;\r\n        }\r\n        else if (this.frame)\r\n        {\r\n            if (typeof x === 'number')\r\n            {\r\n                this.frame.setCropUVs(this._crop, x, y, width, height, this.flipX, this.flipY);\r\n            }\r\n            else\r\n            {\r\n                var rect = x;\r\n\r\n                this.frame.setCropUVs(this._crop, rect.x, rect.y, rect.width, rect.height, this.flipX, this.flipY);\r\n            }\r\n\r\n            this.isCropped = true;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the texture and frame this Game Object will use to render with.\r\n     *\r\n     * Textures are referenced by their string-based keys, as stored in the Texture Manager.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TextureCrop#setTexture\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The key of the texture to be used, as stored in the Texture Manager.\r\n     * @param {(string|number)} [frame] - The name or index of the frame within the Texture.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setTexture: function (key, frame)\r\n    {\r\n        this.texture = this.scene.sys.textures.get(key);\r\n\r\n        return this.setFrame(frame);\r\n    },\r\n\r\n    /**\r\n     * Sets the frame this Game Object will use to render with.\r\n     *\r\n     * The Frame has to belong to the current Texture being used.\r\n     *\r\n     * It can be either a string or an index.\r\n     *\r\n     * Calling `setFrame` will modify the `width` and `height` properties of your Game Object.\r\n     * It will also change the `origin` if the Frame has a custom pivot point, as exported from packages like Texture Packer.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TextureCrop#setFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|number)} frame - The name or index of the frame within the Texture.\r\n     * @param {boolean} [updateSize=true] - Should this call adjust the size of the Game Object?\r\n     * @param {boolean} [updateOrigin=true] - Should this call adjust the origin of the Game Object?\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setFrame: function (frame, updateSize, updateOrigin)\r\n    {\r\n        if (updateSize === undefined) { updateSize = true; }\r\n        if (updateOrigin === undefined) { updateOrigin = true; }\r\n\r\n        this.frame = this.texture.get(frame);\r\n\r\n        if (!this.frame.cutWidth || !this.frame.cutHeight)\r\n        {\r\n            this.renderFlags &= ~_FLAG;\r\n        }\r\n        else\r\n        {\r\n            this.renderFlags |= _FLAG;\r\n        }\r\n\r\n        if (this._sizeComponent && updateSize)\r\n        {\r\n            this.setSizeToFrame();\r\n        }\r\n\r\n        if (this._originComponent && updateOrigin)\r\n        {\r\n            if (this.frame.customPivot)\r\n            {\r\n                this.setOrigin(this.frame.pivotX, this.frame.pivotY);\r\n            }\r\n            else\r\n            {\r\n                this.updateDisplayOrigin();\r\n            }\r\n        }\r\n\r\n        if (this.isCropped)\r\n        {\r\n            this.frame.updateCropUVs(this._crop, this.flipX, this.flipY);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Internal method that returns a blank, well-formed crop object for use by a Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TextureCrop#resetCropObject\r\n     * @private\r\n     * @since 3.12.0\r\n     *\r\n     * @return {object} The crop object.\r\n     */\r\n    resetCropObject: function ()\r\n    {\r\n        return { u0: 0, v0: 0, u1: 0, v1: 0, width: 0, height: 0, x: 0, y: 0, flipX: false, flipY: false, cx: 0, cy: 0, cw: 0, ch: 0 };\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = TextureCrop;\r\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Provides methods used for setting the tint of a Game Object.\n * Should be applied as a mixin and not used directly.\n *\n * @namespace Phaser.GameObjects.Components.Tint\n * @webglOnly\n * @since 3.0.0\n */\n\nvar Tint = {\n\n    /**\n     * The tint value being applied to the top-left vertice of the Game Object.\n     * This value is interpolated from the corner to the center of the Game Object.\n     * The value should be set as a hex number, i.e. 0xff0000 for red, or 0xff00ff for purple.\n     *\n     * @name Phaser.GameObjects.Components.Tint#tintTopLeft\n     * @type {number}\n     * @default 0xffffff\n     * @since 3.0.0\n     */\n    tintTopLeft: 0xffffff,\n\n    /**\n     * The tint value being applied to the top-right vertice of the Game Object.\n     * This value is interpolated from the corner to the center of the Game Object.\n     * The value should be set as a hex number, i.e. 0xff0000 for red, or 0xff00ff for purple.\n     *\n     * @name Phaser.GameObjects.Components.Tint#tintTopRight\n     * @type {number}\n     * @default 0xffffff\n     * @since 3.0.0\n     */\n    tintTopRight: 0xffffff,\n\n    /**\n     * The tint value being applied to the bottom-left vertice of the Game Object.\n     * This value is interpolated from the corner to the center of the Game Object.\n     * The value should be set as a hex number, i.e. 0xff0000 for red, or 0xff00ff for purple.\n     *\n     * @name Phaser.GameObjects.Components.Tint#tintBottomLeft\n     * @type {number}\n     * @default 0xffffff\n     * @since 3.0.0\n     */\n    tintBottomLeft: 0xffffff,\n\n    /**\n     * The tint value being applied to the bottom-right vertice of the Game Object.\n     * This value is interpolated from the corner to the center of the Game Object.\n     * The value should be set as a hex number, i.e. 0xff0000 for red, or 0xff00ff for purple.\n     *\n     * @name Phaser.GameObjects.Components.Tint#tintBottomRight\n     * @type {number}\n     * @default 0xffffff\n     * @since 3.0.0\n     */\n    tintBottomRight: 0xffffff,\n\n    /**\n     * The tint fill mode.\n     *\n     * `false` = An additive tint (the default), where vertices colors are blended with the texture.\n     * `true` = A fill tint, where the vertices colors replace the texture, but respects texture alpha.\n     *\n     * @name Phaser.GameObjects.Components.Tint#tintFill\n     * @type {boolean}\n     * @default false\n     * @since 3.11.0\n     */\n    tintFill: false,\n\n    /**\n     * Clears all tint values associated with this Game Object.\n     *\n     * Immediately sets the color values back to 0xffffff and the tint type to 'additive',\n     * which results in no visible change to the texture.\n     *\n     * @method Phaser.GameObjects.Components.Tint#clearTint\n     * @webglOnly\n     * @since 3.0.0\n     *\n     * @return {this} This Game Object instance.\n     */\n    clearTint: function ()\n    {\n        this.setTint(0xffffff);\n\n        return this;\n    },\n\n    /**\n     * Sets an additive tint on this Game Object.\n     *\n     * The tint works by taking the pixel color values from the Game Objects texture, and then\n     * multiplying it by the color value of the tint. You can provide either one color value,\n     * in which case the whole Game Object will be tinted in that color. Or you can provide a color\n     * per corner. The colors are blended together across the extent of the Game Object.\n     *\n     * To modify the tint color once set, either call this method again with new values or use the\n     * `tint` property to set all colors at once. Or, use the properties `tintTopLeft`, `tintTopRight,\n     * `tintBottomLeft` and `tintBottomRight` to set the corner color values independently.\n     *\n     * To remove a tint call `clearTint`.\n     *\n     * To swap this from being an additive tint to a fill based tint set the property `tintFill` to `true`.\n     *\n     * @method Phaser.GameObjects.Components.Tint#setTint\n     * @webglOnly\n     * @since 3.0.0\n     *\n     * @param {number} [topLeft=0xffffff] - The tint being applied to the top-left of the Game Object. If no other values are given this value is applied evenly, tinting the whole Game Object.\n     * @param {number} [topRight] - The tint being applied to the top-right of the Game Object.\n     * @param {number} [bottomLeft] - The tint being applied to the bottom-left of the Game Object.\n     * @param {number} [bottomRight] - The tint being applied to the bottom-right of the Game Object.\n     *\n     * @return {this} This Game Object instance.\n     */\n    setTint: function (topLeft, topRight, bottomLeft, bottomRight)\n    {\n        if (topLeft === undefined) { topLeft = 0xffffff; }\n\n        if (topRight === undefined)\n        {\n            topRight = topLeft;\n            bottomLeft = topLeft;\n            bottomRight = topLeft;\n        }\n\n        this.tintTopLeft = topLeft;\n        this.tintTopRight = topRight;\n        this.tintBottomLeft = bottomLeft;\n        this.tintBottomRight = bottomRight;\n\n        this.tintFill = false;\n\n        return this;\n    },\n\n    /**\n     * Sets a fill-based tint on this Game Object.\n     *\n     * Unlike an additive tint, a fill-tint literally replaces the pixel colors from the texture\n     * with those in the tint. You can use this for effects such as making a player flash 'white'\n     * if hit by something. You can provide either one color value, in which case the whole\n     * Game Object will be rendered in that color. Or you can provide a color per corner. The colors\n     * are blended together across the extent of the Game Object.\n     *\n     * To modify the tint color once set, either call this method again with new values or use the\n     * `tint` property to set all colors at once. Or, use the properties `tintTopLeft`, `tintTopRight,\n     * `tintBottomLeft` and `tintBottomRight` to set the corner color values independently.\n     *\n     * To remove a tint call `clearTint`.\n     *\n     * To swap this from being a fill-tint to an additive tint set the property `tintFill` to `false`.\n     *\n     * @method Phaser.GameObjects.Components.Tint#setTintFill\n     * @webglOnly\n     * @since 3.11.0\n     *\n     * @param {number} [topLeft=0xffffff] - The tint being applied to the top-left of the Game Object. If not other values are given this value is applied evenly, tinting the whole Game Object.\n     * @param {number} [topRight] - The tint being applied to the top-right of the Game Object.\n     * @param {number} [bottomLeft] - The tint being applied to the bottom-left of the Game Object.\n     * @param {number} [bottomRight] - The tint being applied to the bottom-right of the Game Object.\n     *\n     * @return {this} This Game Object instance.\n     */\n    setTintFill: function (topLeft, topRight, bottomLeft, bottomRight)\n    {\n        this.setTint(topLeft, topRight, bottomLeft, bottomRight);\n\n        this.tintFill = true;\n\n        return this;\n    },\n\n    /**\n     * The tint value being applied to the whole of the Game Object.\n     * This property is a setter-only. Use the properties `tintTopLeft` etc to read the current tint value.\n     *\n     * @name Phaser.GameObjects.Components.Tint#tint\n     * @type {number}\n     * @webglOnly\n     * @since 3.0.0\n     */\n    tint: {\n\n        set: function (value)\n        {\n            this.setTint(value, value, value, value);\n        }\n    },\n\n    /**\n     * Does this Game Object have a tint applied?\n     *\n     * It checks to see if the 4 tint properties are set to the value 0xffffff\n     * and that the `tintFill` property is `false`. This indicates that a Game Object isn't tinted.\n     *\n     * @name Phaser.GameObjects.Components.Tint#isTinted\n     * @type {boolean}\n     * @webglOnly\n     * @readonly\n     * @since 3.11.0\n     */\n    isTinted: {\n\n        get: function ()\n        {\n            var white = 0xffffff;\n\n            return (\n                this.tintFill ||\n                this.tintTopLeft !== white ||\n                this.tintTopRight !== white ||\n                this.tintBottomLeft !== white ||\n                this.tintBottomRight !== white\n            );\n        }\n\n    }\n\n};\n\nmodule.exports = Tint;\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Build a JSON representation of the given Game Object.\r\n *\r\n * This is typically extended further by Game Object specific implementations.\r\n *\r\n * @method Phaser.GameObjects.Components.ToJSON\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.GameObject} gameObject - The Game Object to export as JSON.\r\n *\r\n * @return {Phaser.Types.GameObjects.JSONGameObject} A JSON representation of the Game Object.\r\n */\r\nvar ToJSON = function (gameObject)\r\n{\r\n    var out = {\r\n        name: gameObject.name,\r\n        type: gameObject.type,\r\n        x: gameObject.x,\r\n        y: gameObject.y,\r\n        depth: gameObject.depth,\r\n        scale: {\r\n            x: gameObject.scaleX,\r\n            y: gameObject.scaleY\r\n        },\r\n        origin: {\r\n            x: gameObject.originX,\r\n            y: gameObject.originY\r\n        },\r\n        flipX: gameObject.flipX,\r\n        flipY: gameObject.flipY,\r\n        rotation: gameObject.rotation,\r\n        alpha: gameObject.alpha,\r\n        visible: gameObject.visible,\r\n        blendMode: gameObject.blendMode,\r\n        textureKey: '',\r\n        frameKey: '',\r\n        data: {}\r\n    };\r\n\r\n    if (gameObject.texture)\r\n    {\r\n        out.textureKey = gameObject.texture.key;\r\n        out.frameKey = gameObject.frame.name;\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = ToJSON;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MATH_CONST = require('../../math/const');\r\nvar TransformMatrix = require('./TransformMatrix');\r\nvar TransformXY = require('../../math/TransformXY');\r\nvar WrapAngle = require('../../math/angle/Wrap');\r\nvar WrapAngleDegrees = require('../../math/angle/WrapDegrees');\r\nvar Vector2 = require('../../math/Vector2');\r\n\r\n//  global bitmask flag for GameObject.renderMask (used by Scale)\r\nvar _FLAG = 4; // 0100\r\n\r\n/**\r\n * Provides methods used for getting and setting the position, scale and rotation of a Game Object.\r\n *\r\n * @namespace Phaser.GameObjects.Components.Transform\r\n * @since 3.0.0\r\n */\r\n\r\nvar Transform = {\r\n\r\n    /**\r\n     * Private internal value. Holds the horizontal scale value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Transform#_scaleX\r\n     * @type {number}\r\n     * @private\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    _scaleX: 1,\r\n\r\n    /**\r\n     * Private internal value. Holds the vertical scale value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Transform#_scaleY\r\n     * @type {number}\r\n     * @private\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    _scaleY: 1,\r\n\r\n    /**\r\n     * Private internal value. Holds the rotation value in radians.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Transform#_rotation\r\n     * @type {number}\r\n     * @private\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\r\n    _rotation: 0,\r\n\r\n    /**\r\n     * The x position of this Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Transform#x\r\n     * @type {number}\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\r\n    x: 0,\r\n\r\n    /**\r\n     * The y position of this Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Transform#y\r\n     * @type {number}\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\r\n    y: 0,\r\n\r\n    /**\r\n     * The z position of this Game Object.\r\n     *\r\n     * Note: The z position does not control the rendering order of 2D Game Objects. Use\r\n     * {@link Phaser.GameObjects.Components.Depth#depth} instead.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Transform#z\r\n     * @type {number}\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\r\n    z: 0,\r\n\r\n    /**\r\n     * The w position of this Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Transform#w\r\n     * @type {number}\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\r\n    w: 0,\r\n\r\n    /**\r\n     * This is a special setter that allows you to set both the horizontal and vertical scale of this Game Object\r\n     * to the same value, at the same time. When reading this value the result returned is `(scaleX + scaleY) / 2`.\r\n     *\r\n     * Use of this property implies you wish the horizontal and vertical scales to be equal to each other. If this\r\n     * isn't the case, use the `scaleX` or `scaleY` properties instead.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Transform#scale\r\n     * @type {number}\r\n     * @default 1\r\n     * @since 3.18.0\r\n     */\r\n    scale: {\r\n\r\n        get: function ()\r\n        {\r\n            return (this._scaleX + this._scaleY) / 2;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._scaleX = value;\r\n            this._scaleY = value;\r\n\r\n            if (value === 0)\r\n            {\r\n                this.renderFlags &= ~_FLAG;\r\n            }\r\n            else\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The horizontal scale of this Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Transform#scaleX\r\n     * @type {number}\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    scaleX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._scaleX;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._scaleX = value;\r\n\r\n            if (value === 0)\r\n            {\r\n                this.renderFlags &= ~_FLAG;\r\n            }\r\n            else\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The vertical scale of this Game Object.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Transform#scaleY\r\n     * @type {number}\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    scaleY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._scaleY;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this._scaleY = value;\r\n\r\n            if (value === 0)\r\n            {\r\n                this.renderFlags &= ~_FLAG;\r\n            }\r\n            else\r\n            {\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The angle of this Game Object as expressed in degrees.\r\n     *\r\n     * Phaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\n     * and -90 is up.\r\n     *\r\n     * If you prefer to work in radians, see the `rotation` property instead.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Transform#angle\r\n     * @type {number}\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\r\n    angle: {\r\n\r\n        get: function ()\r\n        {\r\n            return WrapAngleDegrees(this._rotation * MATH_CONST.RAD_TO_DEG);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            //  value is in degrees\r\n            this.rotation = WrapAngleDegrees(value) * MATH_CONST.DEG_TO_RAD;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The angle of this Game Object in radians.\r\n     *\r\n     * Phaser uses a right-hand clockwise rotation system, where 0 is right, PI/2 is down, +-PI is left\r\n     * and -PI/2 is up.\r\n     *\r\n     * If you prefer to work in degrees, see the `angle` property instead.\r\n     *\r\n     * @name Phaser.GameObjects.Components.Transform#rotation\r\n     * @type {number}\r\n     * @default 1\r\n     * @since 3.0.0\r\n     */\r\n    rotation: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._rotation;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            //  value is in radians\r\n            this._rotation = WrapAngle(value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets the position of this Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#setPosition\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [x=0] - The x position of this Game Object.\r\n     * @param {number} [y=x] - The y position of this Game Object. If not set it will use the `x` value.\r\n     * @param {number} [z=0] - The z position of this Game Object.\r\n     * @param {number} [w=0] - The w position of this Game Object.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setPosition: function (x, y, z, w)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = x; }\r\n        if (z === undefined) { z = 0; }\r\n        if (w === undefined) { w = 0; }\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Copies an object's coordinates to this Game Object's position.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#copyPosition\r\n     * @since 3.50.0\r\n     *\r\n     * @param {(Phaser.Types.Math.Vector2Like|Phaser.Types.Math.Vector3Like|Phaser.Types.Math.Vector4Like)} source - An object with numeric 'x', 'y', 'z', or 'w' properties. Undefined values are not copied.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    copyPosition: function (source)\r\n    {\r\n        if (source.x !== undefined) { this.x = source.x; }\r\n        if (source.y !== undefined) { this.y = source.y; }\r\n        if (source.z !== undefined) { this.z = source.z; }\r\n        if (source.w !== undefined) { this.w = source.w; }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the position of this Game Object to be a random position within the confines of\r\n     * the given area.\r\n     *\r\n     * If no area is specified a random position between 0 x 0 and the game width x height is used instead.\r\n     *\r\n     * The position does not factor in the size of this Game Object, meaning that only the origin is\r\n     * guaranteed to be within the area.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#setRandomPosition\r\n     * @since 3.8.0\r\n     *\r\n     * @param {number} [x=0] - The x position of the top-left of the random area.\r\n     * @param {number} [y=0] - The y position of the top-left of the random area.\r\n     * @param {number} [width] - The width of the random area.\r\n     * @param {number} [height] - The height of the random area.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setRandomPosition: function (x, y, width, height)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n        if (width === undefined) { width = this.scene.sys.scale.width; }\r\n        if (height === undefined) { height = this.scene.sys.scale.height; }\r\n\r\n        this.x = x + (Math.random() * width);\r\n        this.y = y + (Math.random() * height);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the rotation of this Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#setRotation\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [radians=0] - The rotation of this Game Object, in radians.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setRotation: function (radians)\r\n    {\r\n        if (radians === undefined) { radians = 0; }\r\n\r\n        this.rotation = radians;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the angle of this Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#setAngle\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [degrees=0] - The rotation of this Game Object, in degrees.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setAngle: function (degrees)\r\n    {\r\n        if (degrees === undefined) { degrees = 0; }\r\n\r\n        this.angle = degrees;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the scale of this Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#setScale\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal scale of this Game Object.\r\n     * @param {number} [y=x] - The vertical scale of this Game Object. If not set it will use the `x` value.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setScale: function (x, y)\r\n    {\r\n        if (x === undefined) { x = 1; }\r\n        if (y === undefined) { y = x; }\r\n\r\n        this.scaleX = x;\r\n        this.scaleY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the x position of this Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#setX\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [value=0] - The x position of this Game Object.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setX: function (value)\r\n    {\r\n        if (value === undefined) { value = 0; }\r\n\r\n        this.x = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the y position of this Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#setY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [value=0] - The y position of this Game Object.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setY: function (value)\r\n    {\r\n        if (value === undefined) { value = 0; }\r\n\r\n        this.y = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the z position of this Game Object.\r\n     *\r\n     * Note: The z position does not control the rendering order of 2D Game Objects. Use\r\n     * {@link Phaser.GameObjects.Components.Depth#setDepth} instead.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#setZ\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [value=0] - The z position of this Game Object.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setZ: function (value)\r\n    {\r\n        if (value === undefined) { value = 0; }\r\n\r\n        this.z = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the w position of this Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#setW\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [value=0] - The w position of this Game Object.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setW: function (value)\r\n    {\r\n        if (value === undefined) { value = 0; }\r\n\r\n        this.w = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Gets the local transform matrix for this Game Object.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#getLocalTransformMatrix\r\n     * @since 3.4.0\r\n     *\r\n     * @param {Phaser.GameObjects.Components.TransformMatrix} [tempMatrix] - The matrix to populate with the values from this Game Object.\r\n     *\r\n     * @return {Phaser.GameObjects.Components.TransformMatrix} The populated Transform Matrix.\r\n     */\r\n    getLocalTransformMatrix: function (tempMatrix)\r\n    {\r\n        if (tempMatrix === undefined) { tempMatrix = new TransformMatrix(); }\r\n\r\n        return tempMatrix.applyITRS(this.x, this.y, this._rotation, this._scaleX, this._scaleY);\r\n    },\r\n\r\n    /**\r\n     * Gets the world transform matrix for this Game Object, factoring in any parent Containers.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#getWorldTransformMatrix\r\n     * @since 3.4.0\r\n     *\r\n     * @param {Phaser.GameObjects.Components.TransformMatrix} [tempMatrix] - The matrix to populate with the values from this Game Object.\r\n     * @param {Phaser.GameObjects.Components.TransformMatrix} [parentMatrix] - A temporary matrix to hold parent values during the calculations.\r\n     *\r\n     * @return {Phaser.GameObjects.Components.TransformMatrix} The populated Transform Matrix.\r\n     */\r\n    getWorldTransformMatrix: function (tempMatrix, parentMatrix)\r\n    {\r\n        if (tempMatrix === undefined) { tempMatrix = new TransformMatrix(); }\r\n        if (parentMatrix === undefined) { parentMatrix = new TransformMatrix(); }\r\n\r\n        var parent = this.parentContainer;\r\n\r\n        if (!parent)\r\n        {\r\n            return this.getLocalTransformMatrix(tempMatrix);\r\n        }\r\n\r\n        tempMatrix.applyITRS(this.x, this.y, this._rotation, this._scaleX, this._scaleY);\r\n\r\n        while (parent)\r\n        {\r\n            parentMatrix.applyITRS(parent.x, parent.y, parent._rotation, parent._scaleX, parent._scaleY);\r\n\r\n            parentMatrix.multiply(tempMatrix, tempMatrix);\r\n\r\n            parent = parent.parentContainer;\r\n        }\r\n\r\n        return tempMatrix;\r\n    },\r\n\r\n    /**\r\n     * Takes the given `x` and `y` coordinates and converts them into local space for this\r\n     * Game Object, taking into account parent and local transforms, and the Display Origin.\r\n     *\r\n     * The returned Vector2 contains the translated point in its properties.\r\n     *\r\n     * A Camera needs to be provided in order to handle modified scroll factors. If no\r\n     * camera is specified, it will use the `main` camera from the Scene to which this\r\n     * Game Object belongs.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#getLocalPoint\r\n     * @since 3.50.0\r\n     *\r\n     * @param {number} x - The x position to translate.\r\n     * @param {number} y - The y position to translate.\r\n     * @param {Phaser.Math.Vector2} [point] - A Vector2, or point-like object, to store the results in.\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera] - The Camera which is being tested against. If not given will use the Scene default camera.\r\n     *\r\n     * @return {Phaser.Math.Vector2} The translated point.\r\n     */\r\n    getLocalPoint: function (x, y, point, camera)\r\n    {\r\n        if (!point) { point = new Vector2(); }\r\n        if (!camera) { camera = this.scene.sys.cameras.main; }\r\n\r\n        var csx = camera.scrollX;\r\n        var csy = camera.scrollY;\r\n\r\n        var px = x + (csx * this.scrollFactorX) - csx;\r\n        var py = y + (csy * this.scrollFactorY) - csy;\r\n\r\n        if (this.parentContainer)\r\n        {\r\n            this.getWorldTransformMatrix().applyInverse(px, py, point);\r\n        }\r\n        else\r\n        {\r\n            TransformXY(px, py, this.x, this.y, this.rotation, this.scaleX, this.scaleY, point);\r\n        }\r\n\r\n        //  Normalize origin\r\n        if (this._originComponent)\r\n        {\r\n            point.x += this._displayOriginX;\r\n            point.y += this._displayOriginY;\r\n        }\r\n\r\n        return point;\r\n    },\r\n\r\n    /**\r\n     * Gets the sum total rotation of all of this Game Objects parent Containers.\r\n     *\r\n     * The returned value is in radians and will be zero if this Game Object has no parent container.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Transform#getParentRotation\r\n     * @since 3.18.0\r\n     *\r\n     * @return {number} The sum total rotation, in radians, of all parent containers of this Game Object.\r\n     */\r\n    getParentRotation: function ()\r\n    {\r\n        var rotation = 0;\r\n\r\n        var parent = this.parentContainer;\r\n\r\n        while (parent)\r\n        {\r\n            rotation += parent.rotation;\r\n\r\n            parent = parent.parentContainer;\r\n        }\r\n\r\n        return rotation;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Transform;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar MATH_CONST = require('../../math/const');\r\nvar Vector2 = require('../../math/Vector2');\r\n\r\n/**\r\n * @classdesc\r\n * A Matrix used for display transformations for rendering.\r\n *\r\n * It is represented like so:\r\n *\r\n * ```\r\n * | a | c | tx |\r\n * | b | d | ty |\r\n * | 0 | 0 | 1  |\r\n * ```\r\n *\r\n * @class TransformMatrix\r\n * @memberof Phaser.GameObjects.Components\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {number} [a=1] - The Scale X value.\r\n * @param {number} [b=0] - The Skew Y value.\r\n * @param {number} [c=0] - The Skew X value.\r\n * @param {number} [d=1] - The Scale Y value.\r\n * @param {number} [tx=0] - The Translate X value.\r\n * @param {number} [ty=0] - The Translate Y value.\r\n */\r\nvar TransformMatrix = new Class({\r\n\r\n    initialize:\r\n\r\n    function TransformMatrix (a, b, c, d, tx, ty)\r\n    {\r\n        if (a === undefined) { a = 1; }\r\n        if (b === undefined) { b = 0; }\r\n        if (c === undefined) { c = 0; }\r\n        if (d === undefined) { d = 1; }\r\n        if (tx === undefined) { tx = 0; }\r\n        if (ty === undefined) { ty = 0; }\r\n\r\n        /**\r\n         * The matrix values.\r\n         *\r\n         * @name Phaser.GameObjects.Components.TransformMatrix#matrix\r\n         * @type {Float32Array}\r\n         * @since 3.0.0\r\n         */\r\n        this.matrix = new Float32Array([ a, b, c, d, tx, ty, 0, 0, 1 ]);\r\n\r\n        /**\r\n         * The decomposed matrix.\r\n         *\r\n         * @name Phaser.GameObjects.Components.TransformMatrix#decomposedMatrix\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.decomposedMatrix = {\r\n            translateX: 0,\r\n            translateY: 0,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            rotation: 0\r\n        };\r\n    },\r\n\r\n    /**\r\n     * The Scale X value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TransformMatrix#a\r\n     * @type {number}\r\n     * @since 3.4.0\r\n     */\r\n    a: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.matrix[0];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.matrix[0] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The Skew Y value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TransformMatrix#b\r\n     * @type {number}\r\n     * @since 3.4.0\r\n     */\r\n    b: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.matrix[1];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.matrix[1] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The Skew X value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TransformMatrix#c\r\n     * @type {number}\r\n     * @since 3.4.0\r\n     */\r\n    c: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.matrix[2];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.matrix[2] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The Scale Y value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TransformMatrix#d\r\n     * @type {number}\r\n     * @since 3.4.0\r\n     */\r\n    d: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.matrix[3];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.matrix[3] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The Translate X value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TransformMatrix#e\r\n     * @type {number}\r\n     * @since 3.11.0\r\n     */\r\n    e: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.matrix[4];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.matrix[4] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The Translate Y value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TransformMatrix#f\r\n     * @type {number}\r\n     * @since 3.11.0\r\n     */\r\n    f: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.matrix[5];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.matrix[5] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The Translate X value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TransformMatrix#tx\r\n     * @type {number}\r\n     * @since 3.4.0\r\n     */\r\n    tx: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.matrix[4];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.matrix[4] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The Translate Y value.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TransformMatrix#ty\r\n     * @type {number}\r\n     * @since 3.4.0\r\n     */\r\n    ty: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.matrix[5];\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.matrix[5] = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The rotation of the Matrix. Value is in radians.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TransformMatrix#rotation\r\n     * @type {number}\r\n     * @readonly\r\n     * @since 3.4.0\r\n     */\r\n    rotation: {\r\n\r\n        get: function ()\r\n        {\r\n            return Math.acos(this.a / this.scaleX) * ((Math.atan(-this.c / this.a) < 0) ? -1 : 1);\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The rotation of the Matrix, normalized to be within the Phaser right-handed\r\n     * clockwise rotation space. Value is in radians.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TransformMatrix#rotationNormalized\r\n     * @type {number}\r\n     * @readonly\r\n     * @since 3.19.0\r\n     */\r\n    rotationNormalized: {\r\n\r\n        get: function ()\r\n        {\r\n            var matrix = this.matrix;\r\n\r\n            var a = matrix[0];\r\n            var b = matrix[1];\r\n            var c = matrix[2];\r\n            var d = matrix[3];\r\n\r\n            if (a || b)\r\n            {\r\n                // var r = Math.sqrt(a * a + b * b);\r\n\r\n                return (b > 0) ? Math.acos(a / this.scaleX) : -Math.acos(a / this.scaleX);\r\n            }\r\n            else if (c || d)\r\n            {\r\n                // var s = Math.sqrt(c * c + d * d);\r\n\r\n                return MATH_CONST.TAU - ((d > 0) ? Math.acos(-c / this.scaleY) : -Math.acos(c / this.scaleY));\r\n            }\r\n            else\r\n            {\r\n                return 0;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The decomposed horizontal scale of the Matrix. This value is always positive.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TransformMatrix#scaleX\r\n     * @type {number}\r\n     * @readonly\r\n     * @since 3.4.0\r\n     */\r\n    scaleX: {\r\n\r\n        get: function ()\r\n        {\r\n            return Math.sqrt((this.a * this.a) + (this.b * this.b));\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The decomposed vertical scale of the Matrix. This value is always positive.\r\n     *\r\n     * @name Phaser.GameObjects.Components.TransformMatrix#scaleY\r\n     * @type {number}\r\n     * @readonly\r\n     * @since 3.4.0\r\n     */\r\n    scaleY: {\r\n\r\n        get: function ()\r\n        {\r\n            return Math.sqrt((this.c * this.c) + (this.d * this.d));\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Reset the Matrix to an identity matrix.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#loadIdentity\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This TransformMatrix.\r\n     */\r\n    loadIdentity: function ()\r\n    {\r\n        var matrix = this.matrix;\r\n\r\n        matrix[0] = 1;\r\n        matrix[1] = 0;\r\n        matrix[2] = 0;\r\n        matrix[3] = 1;\r\n        matrix[4] = 0;\r\n        matrix[5] = 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Translate the Matrix.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#translate\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal translation value.\r\n     * @param {number} y - The vertical translation value.\r\n     *\r\n     * @return {this} This TransformMatrix.\r\n     */\r\n    translate: function (x, y)\r\n    {\r\n        var matrix = this.matrix;\r\n\r\n        matrix[4] = matrix[0] * x + matrix[2] * y + matrix[4];\r\n        matrix[5] = matrix[1] * x + matrix[3] * y + matrix[5];\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Scale the Matrix.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#scale\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal scale value.\r\n     * @param {number} y - The vertical scale value.\r\n     *\r\n     * @return {this} This TransformMatrix.\r\n     */\r\n    scale: function (x, y)\r\n    {\r\n        var matrix = this.matrix;\r\n\r\n        matrix[0] *= x;\r\n        matrix[1] *= x;\r\n        matrix[2] *= y;\r\n        matrix[3] *= y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Rotate the Matrix.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#rotate\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} angle - The angle of rotation in radians.\r\n     *\r\n     * @return {this} This TransformMatrix.\r\n     */\r\n    rotate: function (angle)\r\n    {\r\n        var sin = Math.sin(angle);\r\n        var cos = Math.cos(angle);\r\n\r\n        var matrix = this.matrix;\r\n\r\n        var a = matrix[0];\r\n        var b = matrix[1];\r\n        var c = matrix[2];\r\n        var d = matrix[3];\r\n\r\n        matrix[0] = a * cos + c * sin;\r\n        matrix[1] = b * cos + d * sin;\r\n        matrix[2] = a * -sin + c * cos;\r\n        matrix[3] = b * -sin + d * cos;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Multiply this Matrix by the given Matrix.\r\n     *\r\n     * If an `out` Matrix is given then the results will be stored in it.\r\n     * If it is not given, this matrix will be updated in place instead.\r\n     * Use an `out` Matrix if you do not wish to mutate this matrix.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#multiply\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.Components.TransformMatrix} rhs - The Matrix to multiply by.\r\n     * @param {Phaser.GameObjects.Components.TransformMatrix} [out] - An optional Matrix to store the results in.\r\n     *\r\n     * @return {(this|Phaser.GameObjects.Components.TransformMatrix)} Either this TransformMatrix, or the `out` Matrix, if given in the arguments.\r\n     */\r\n    multiply: function (rhs, out)\r\n    {\r\n        var matrix = this.matrix;\r\n        var source = rhs.matrix;\r\n\r\n        var localA = matrix[0];\r\n        var localB = matrix[1];\r\n        var localC = matrix[2];\r\n        var localD = matrix[3];\r\n        var localE = matrix[4];\r\n        var localF = matrix[5];\r\n\r\n        var sourceA = source[0];\r\n        var sourceB = source[1];\r\n        var sourceC = source[2];\r\n        var sourceD = source[3];\r\n        var sourceE = source[4];\r\n        var sourceF = source[5];\r\n\r\n        var destinationMatrix = (out === undefined) ? this : out;\r\n\r\n        destinationMatrix.a = (sourceA * localA) + (sourceB * localC);\r\n        destinationMatrix.b = (sourceA * localB) + (sourceB * localD);\r\n        destinationMatrix.c = (sourceC * localA) + (sourceD * localC);\r\n        destinationMatrix.d = (sourceC * localB) + (sourceD * localD);\r\n        destinationMatrix.e = (sourceE * localA) + (sourceF * localC) + localE;\r\n        destinationMatrix.f = (sourceE * localB) + (sourceF * localD) + localF;\r\n\r\n        return destinationMatrix;\r\n    },\r\n\r\n    /**\r\n     * Multiply this Matrix by the matrix given, including the offset.\r\n     *\r\n     * The offsetX is added to the tx value: `offsetX * a + offsetY * c + tx`.\r\n     * The offsetY is added to the ty value: `offsetY * b + offsetY * d + ty`.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#multiplyWithOffset\r\n     * @since 3.11.0\r\n     *\r\n     * @param {Phaser.GameObjects.Components.TransformMatrix} src - The source Matrix to copy from.\r\n     * @param {number} offsetX - Horizontal offset to factor in to the multiplication.\r\n     * @param {number} offsetY - Vertical offset to factor in to the multiplication.\r\n     *\r\n     * @return {this} This TransformMatrix.\r\n     */\r\n    multiplyWithOffset: function (src, offsetX, offsetY)\r\n    {\r\n        var matrix = this.matrix;\r\n        var otherMatrix = src.matrix;\r\n\r\n        var a0 = matrix[0];\r\n        var b0 = matrix[1];\r\n        var c0 = matrix[2];\r\n        var d0 = matrix[3];\r\n        var tx0 = matrix[4];\r\n        var ty0 = matrix[5];\r\n\r\n        var pse = offsetX * a0 + offsetY * c0 + tx0;\r\n        var psf = offsetX * b0 + offsetY * d0 + ty0;\r\n\r\n        var a1 = otherMatrix[0];\r\n        var b1 = otherMatrix[1];\r\n        var c1 = otherMatrix[2];\r\n        var d1 = otherMatrix[3];\r\n        var tx1 = otherMatrix[4];\r\n        var ty1 = otherMatrix[5];\r\n\r\n        matrix[0] = a1 * a0 + b1 * c0;\r\n        matrix[1] = a1 * b0 + b1 * d0;\r\n        matrix[2] = c1 * a0 + d1 * c0;\r\n        matrix[3] = c1 * b0 + d1 * d0;\r\n        matrix[4] = tx1 * a0 + ty1 * c0 + pse;\r\n        matrix[5] = tx1 * b0 + ty1 * d0 + psf;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Transform the Matrix.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#transform\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} a - The Scale X value.\r\n     * @param {number} b - The Shear Y value.\r\n     * @param {number} c - The Shear X value.\r\n     * @param {number} d - The Scale Y value.\r\n     * @param {number} tx - The Translate X value.\r\n     * @param {number} ty - The Translate Y value.\r\n     *\r\n     * @return {this} This TransformMatrix.\r\n     */\r\n    transform: function (a, b, c, d, tx, ty)\r\n    {\r\n        var matrix = this.matrix;\r\n\r\n        var a0 = matrix[0];\r\n        var b0 = matrix[1];\r\n        var c0 = matrix[2];\r\n        var d0 = matrix[3];\r\n        var tx0 = matrix[4];\r\n        var ty0 = matrix[5];\r\n\r\n        matrix[0] = a * a0 + b * c0;\r\n        matrix[1] = a * b0 + b * d0;\r\n        matrix[2] = c * a0 + d * c0;\r\n        matrix[3] = c * b0 + d * d0;\r\n        matrix[4] = tx * a0 + ty * c0 + tx0;\r\n        matrix[5] = tx * b0 + ty * d0 + ty0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Transform a point using this Matrix.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#transformPoint\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The x coordinate of the point to transform.\r\n     * @param {number} y - The y coordinate of the point to transform.\r\n     * @param {(Phaser.Geom.Point|Phaser.Math.Vector2|object)} point - The Point object to store the transformed coordinates.\r\n     *\r\n     * @return {(Phaser.Geom.Point|Phaser.Math.Vector2|object)} The Point containing the transformed coordinates.\r\n     */\r\n    transformPoint: function (x, y, point)\r\n    {\r\n        if (point === undefined) { point = { x: 0, y: 0 }; }\r\n\r\n        var matrix = this.matrix;\r\n\r\n        var a = matrix[0];\r\n        var b = matrix[1];\r\n        var c = matrix[2];\r\n        var d = matrix[3];\r\n        var tx = matrix[4];\r\n        var ty = matrix[5];\r\n\r\n        point.x = x * a + y * c + tx;\r\n        point.y = x * b + y * d + ty;\r\n\r\n        return point;\r\n    },\r\n\r\n    /**\r\n     * Invert the Matrix.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#invert\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This TransformMatrix.\r\n     */\r\n    invert: function ()\r\n    {\r\n        var matrix = this.matrix;\r\n\r\n        var a = matrix[0];\r\n        var b = matrix[1];\r\n        var c = matrix[2];\r\n        var d = matrix[3];\r\n        var tx = matrix[4];\r\n        var ty = matrix[5];\r\n\r\n        var n = a * d - b * c;\r\n\r\n        matrix[0] = d / n;\r\n        matrix[1] = -b / n;\r\n        matrix[2] = -c / n;\r\n        matrix[3] = a / n;\r\n        matrix[4] = (c * ty - d * tx) / n;\r\n        matrix[5] = -(a * ty - b * tx) / n;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the values of this Matrix to copy those of the matrix given.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#copyFrom\r\n     * @since 3.11.0\r\n     *\r\n     * @param {Phaser.GameObjects.Components.TransformMatrix} src - The source Matrix to copy from.\r\n     *\r\n     * @return {this} This TransformMatrix.\r\n     */\r\n    copyFrom: function (src)\r\n    {\r\n        var matrix = this.matrix;\r\n\r\n        matrix[0] = src.a;\r\n        matrix[1] = src.b;\r\n        matrix[2] = src.c;\r\n        matrix[3] = src.d;\r\n        matrix[4] = src.e;\r\n        matrix[5] = src.f;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the values of this Matrix to copy those of the array given.\r\n     * Where array indexes 0, 1, 2, 3, 4 and 5 are mapped to a, b, c, d, e and f.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#copyFromArray\r\n     * @since 3.11.0\r\n     *\r\n     * @param {array} src - The array of values to set into this matrix.\r\n     *\r\n     * @return {this} This TransformMatrix.\r\n     */\r\n    copyFromArray: function (src)\r\n    {\r\n        var matrix = this.matrix;\r\n\r\n        matrix[0] = src[0];\r\n        matrix[1] = src[1];\r\n        matrix[2] = src[2];\r\n        matrix[3] = src[3];\r\n        matrix[4] = src[4];\r\n        matrix[5] = src[5];\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Copy the values from this Matrix to the given Canvas Rendering Context.\r\n     * This will use the Context.transform method.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#copyToContext\r\n     * @since 3.12.0\r\n     *\r\n     * @param {CanvasRenderingContext2D} ctx - The Canvas Rendering Context to copy the matrix values to.\r\n     *\r\n     * @return {CanvasRenderingContext2D} The Canvas Rendering Context.\r\n     */\r\n    copyToContext: function (ctx)\r\n    {\r\n        var matrix = this.matrix;\r\n\r\n        ctx.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\r\n\r\n        return ctx;\r\n    },\r\n\r\n    /**\r\n     * Copy the values from this Matrix to the given Canvas Rendering Context.\r\n     * This will use the Context.setTransform method.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#setToContext\r\n     * @since 3.12.0\r\n     *\r\n     * @param {CanvasRenderingContext2D} ctx - The Canvas Rendering Context to copy the matrix values to.\r\n     *\r\n     * @return {CanvasRenderingContext2D} The Canvas Rendering Context.\r\n     */\r\n    setToContext: function (ctx)\r\n    {\r\n        var matrix = this.matrix;\r\n\r\n        ctx.setTransform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\r\n\r\n        return ctx;\r\n    },\r\n\r\n    /**\r\n     * Copy the values in this Matrix to the array given.\r\n     *\r\n     * Where array indexes 0, 1, 2, 3, 4 and 5 are mapped to a, b, c, d, e and f.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#copyToArray\r\n     * @since 3.12.0\r\n     *\r\n     * @param {array} [out] - The array to copy the matrix values in to.\r\n     *\r\n     * @return {array} An array where elements 0 to 5 contain the values from this matrix.\r\n     */\r\n    copyToArray: function (out)\r\n    {\r\n        var matrix = this.matrix;\r\n\r\n        if (out === undefined)\r\n        {\r\n            out = [ matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5] ];\r\n        }\r\n        else\r\n        {\r\n            out[0] = matrix[0];\r\n            out[1] = matrix[1];\r\n            out[2] = matrix[2];\r\n            out[3] = matrix[3];\r\n            out[4] = matrix[4];\r\n            out[5] = matrix[5];\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Set the values of this Matrix.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#setTransform\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} a - The Scale X value.\r\n     * @param {number} b - The Shear Y value.\r\n     * @param {number} c - The Shear X value.\r\n     * @param {number} d - The Scale Y value.\r\n     * @param {number} tx - The Translate X value.\r\n     * @param {number} ty - The Translate Y value.\r\n     *\r\n     * @return {this} This TransformMatrix.\r\n     */\r\n    setTransform: function (a, b, c, d, tx, ty)\r\n    {\r\n        var matrix = this.matrix;\r\n\r\n        matrix[0] = a;\r\n        matrix[1] = b;\r\n        matrix[2] = c;\r\n        matrix[3] = d;\r\n        matrix[4] = tx;\r\n        matrix[5] = ty;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Decompose this Matrix into its translation, scale and rotation values using QR decomposition.\r\n     *\r\n     * The result must be applied in the following order to reproduce the current matrix:\r\n     *\r\n     * translate -> rotate -> scale\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#decomposeMatrix\r\n     * @since 3.0.0\r\n     *\r\n     * @return {object} The decomposed Matrix.\r\n     */\r\n    decomposeMatrix: function ()\r\n    {\r\n        var decomposedMatrix = this.decomposedMatrix;\r\n\r\n        var matrix = this.matrix;\r\n\r\n        //  a = scale X (1)\r\n        //  b = shear Y (0)\r\n        //  c = shear X (0)\r\n        //  d = scale Y (1)\r\n\r\n        var a = matrix[0];\r\n        var b = matrix[1];\r\n        var c = matrix[2];\r\n        var d = matrix[3];\r\n\r\n        var determ = a * d - b * c;\r\n\r\n        decomposedMatrix.translateX = matrix[4];\r\n        decomposedMatrix.translateY = matrix[5];\r\n\r\n        if (a || b)\r\n        {\r\n            var r = Math.sqrt(a * a + b * b);\r\n\r\n            decomposedMatrix.rotation = (b > 0) ? Math.acos(a / r) : -Math.acos(a / r);\r\n            decomposedMatrix.scaleX = r;\r\n            decomposedMatrix.scaleY = determ / r;\r\n        }\r\n        else if (c || d)\r\n        {\r\n            var s = Math.sqrt(c * c + d * d);\r\n\r\n            decomposedMatrix.rotation = Math.PI * 0.5 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\r\n            decomposedMatrix.scaleX = determ / s;\r\n            decomposedMatrix.scaleY = s;\r\n        }\r\n        else\r\n        {\r\n            decomposedMatrix.rotation = 0;\r\n            decomposedMatrix.scaleX = 0;\r\n            decomposedMatrix.scaleY = 0;\r\n        }\r\n\r\n        return decomposedMatrix;\r\n    },\r\n\r\n    /**\r\n     * Apply the identity, translate, rotate and scale operations on the Matrix.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#applyITRS\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal translation.\r\n     * @param {number} y - The vertical translation.\r\n     * @param {number} rotation - The angle of rotation in radians.\r\n     * @param {number} scaleX - The horizontal scale.\r\n     * @param {number} scaleY - The vertical scale.\r\n     *\r\n     * @return {this} This TransformMatrix.\r\n     */\r\n    applyITRS: function (x, y, rotation, scaleX, scaleY)\r\n    {\r\n        var matrix = this.matrix;\r\n\r\n        var radianSin = Math.sin(rotation);\r\n        var radianCos = Math.cos(rotation);\r\n\r\n        // Translate\r\n        matrix[4] = x;\r\n        matrix[5] = y;\r\n\r\n        // Rotate and Scale\r\n        matrix[0] = radianCos * scaleX;\r\n        matrix[1] = radianSin * scaleX;\r\n        matrix[2] = -radianSin * scaleY;\r\n        matrix[3] = radianCos * scaleY;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Takes the `x` and `y` values and returns a new position in the `output` vector that is the inverse of\r\n     * the current matrix with its transformation applied.\r\n     *\r\n     * Can be used to translate points from world to local space.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#applyInverse\r\n     * @since 3.12.0\r\n     *\r\n     * @param {number} x - The x position to translate.\r\n     * @param {number} y - The y position to translate.\r\n     * @param {Phaser.Math.Vector2} [output] - A Vector2, or point-like object, to store the results in.\r\n     *\r\n     * @return {Phaser.Math.Vector2} The coordinates, inverse-transformed through this matrix.\r\n     */\r\n    applyInverse: function (x, y, output)\r\n    {\r\n        if (output === undefined) { output = new Vector2(); }\r\n\r\n        var matrix = this.matrix;\r\n\r\n        var a = matrix[0];\r\n        var b = matrix[1];\r\n        var c = matrix[2];\r\n        var d = matrix[3];\r\n        var tx = matrix[4];\r\n        var ty = matrix[5];\r\n\r\n        var id = 1 / ((a * d) + (c * -b));\r\n\r\n        output.x = (d * id * x) + (-c * id * y) + (((ty * c) - (tx * d)) * id);\r\n        output.y = (a * id * y) + (-b * id * x) + (((-ty * a) + (tx * b)) * id);\r\n\r\n        return output;\r\n    },\r\n\r\n    /**\r\n     * Returns the X component of this matrix multiplied by the given values.\r\n     * This is the same as `x * a + y * c + e`.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#getX\r\n     * @since 3.12.0\r\n     *\r\n     * @param {number} x - The x value.\r\n     * @param {number} y - The y value.\r\n     *\r\n     * @return {number} The calculated x value.\r\n     */\r\n    getX: function (x, y)\r\n    {\r\n        return x * this.a + y * this.c + this.e;\r\n    },\r\n\r\n    /**\r\n     * Returns the Y component of this matrix multiplied by the given values.\r\n     * This is the same as `x * b + y * d + f`.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#getY\r\n     * @since 3.12.0\r\n     *\r\n     * @param {number} x - The x value.\r\n     * @param {number} y - The y value.\r\n     *\r\n     * @return {number} The calculated y value.\r\n     */\r\n    getY: function (x, y)\r\n    {\r\n        return x * this.b + y * this.d + this.f;\r\n    },\r\n\r\n    /**\r\n     * Returns the X component of this matrix multiplied by the given values.\r\n     *\r\n     * This is the same as `x * a + y * c + e`, optionally passing via `Math.round`.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#getXRound\r\n     * @since 3.50.0\r\n     *\r\n     * @param {number} x - The x value.\r\n     * @param {number} y - The y value.\r\n     * @param {boolean} [round=false] - Math.round the resulting value?\r\n     *\r\n     * @return {number} The calculated x value.\r\n     */\r\n    getXRound: function (x, y, round)\r\n    {\r\n        var v = this.getX(x, y);\r\n\r\n        if (round)\r\n        {\r\n            v = Math.round(v);\r\n        }\r\n\r\n        return v;\r\n    },\r\n\r\n    /**\r\n     * Returns the Y component of this matrix multiplied by the given values.\r\n     *\r\n     * This is the same as `x * b + y * d + f`, optionally passing via `Math.round`.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#getYRound\r\n     * @since 3.50.0\r\n     *\r\n     * @param {number} x - The x value.\r\n     * @param {number} y - The y value.\r\n     * @param {boolean} [round=false] - Math.round the resulting value?\r\n     *\r\n     * @return {number} The calculated y value.\r\n     */\r\n    getYRound: function (x, y, round)\r\n    {\r\n        var v = this.getY(x, y);\r\n\r\n        if (round)\r\n        {\r\n            v = Math.round(v);\r\n        }\r\n\r\n        return v;\r\n    },\r\n\r\n    /**\r\n     * Returns a string that can be used in a CSS Transform call as a `matrix` property.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#getCSSMatrix\r\n     * @since 3.12.0\r\n     *\r\n     * @return {string} A string containing the CSS Transform matrix values.\r\n     */\r\n    getCSSMatrix: function ()\r\n    {\r\n        var m = this.matrix;\r\n\r\n        return 'matrix(' + m[0] + ',' + m[1] + ',' + m[2] + ',' + m[3] + ',' + m[4] + ',' + m[5] + ')';\r\n    },\r\n\r\n    /**\r\n     * Destroys this Transform Matrix.\r\n     *\r\n     * @method Phaser.GameObjects.Components.TransformMatrix#destroy\r\n     * @since 3.4.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.matrix = null;\r\n        this.decomposedMatrix = null;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = TransformMatrix;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  bitmask flag for GameObject.renderMask\r\nvar _FLAG = 1; // 0001\r\n\r\n/**\r\n * Provides methods used for setting the visibility of a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n * \r\n * @namespace Phaser.GameObjects.Components.Visible\r\n * @since 3.0.0\r\n */\r\n\r\nvar Visible = {\r\n\r\n    /**\r\n     * Private internal value. Holds the visible value.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Visible#_visible\r\n     * @type {boolean}\r\n     * @private\r\n     * @default true\r\n     * @since 3.0.0\r\n     */\r\n    _visible: true,\r\n\r\n    /**\r\n     * The visible state of the Game Object.\r\n     * \r\n     * An invisible Game Object will skip rendering, but will still process update logic.\r\n     * \r\n     * @name Phaser.GameObjects.Components.Visible#visible\r\n     * @type {boolean}\r\n     * @since 3.0.0\r\n     */\r\n    visible: {\r\n\r\n        get: function ()\r\n        {\r\n            return this._visible;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (value)\r\n            {\r\n                this._visible = true;\r\n                this.renderFlags |= _FLAG;\r\n            }\r\n            else\r\n            {\r\n                this._visible = false;\r\n                this.renderFlags &= ~_FLAG;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the visibility of this Game Object.\r\n     * \r\n     * An invisible Game Object will skip rendering, but will still process update logic.\r\n     *\r\n     * @method Phaser.GameObjects.Components.Visible#setVisible\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} value - The visible state of the Game Object.\r\n     * \r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setVisible: function (value)\r\n    {\r\n        this.visible = value;\r\n\r\n        return this;\r\n    }\r\n};\r\n\r\nmodule.exports = Visible;\r\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * @namespace Phaser.GameObjects.Components\n */\n\nmodule.exports = {\n\n    Alpha: require('./Alpha'),\n    AlphaSingle: require('./AlphaSingle'),\n    BlendMode: require('./BlendMode'),\n    ComputedSize: require('./ComputedSize'),\n    Crop: require('./Crop'),\n    Depth: require('./Depth'),\n    Flip: require('./Flip'),\n    GetBounds: require('./GetBounds'),\n    Mask: require('./Mask'),\n    Origin: require('./Origin'),\n    PathFollower: require('./PathFollower'),\n    Pipeline: require('./Pipeline'),\n    ScrollFactor: require('./ScrollFactor'),\n    Size: require('./Size'),\n    Texture: require('./Texture'),\n    TextureCrop: require('./TextureCrop'),\n    Tint: require('./Tint'),\n    ToJSON: require('./ToJSON'),\n    Transform: require('./Transform'),\n    TransformMatrix: require('./TransformMatrix'),\n    Visible: require('./Visible')\n\n};\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GEOM_CONST = {\r\n\r\n    /**\r\n     * A Circle Geometry object type.\r\n     * \r\n     * @name Phaser.Geom.CIRCLE\r\n     * @type {number}\r\n     * @since 3.19.0\r\n     */\r\n    CIRCLE: 0,\r\n\r\n    /**\r\n     * An Ellipse Geometry object type.\r\n     * \r\n     * @name Phaser.Geom.ELLIPSE\r\n     * @type {number}\r\n     * @since 3.19.0\r\n     */\r\n    ELLIPSE: 1,\r\n\r\n    /**\r\n     * A Line Geometry object type.\r\n     * \r\n     * @name Phaser.Geom.LINE\r\n     * @type {number}\r\n     * @since 3.19.0\r\n     */\r\n    LINE: 2,\r\n\r\n    /**\r\n     * A Point Geometry object type.\r\n     * \r\n     * @name Phaser.Geom.POINT\r\n     * @type {number}\r\n     * @since 3.19.0\r\n     */\r\n    POINT: 3,\r\n\r\n    /**\r\n     * A Polygon Geometry object type.\r\n     * \r\n     * @name Phaser.Geom.POLYGON\r\n     * @type {number}\r\n     * @since 3.19.0\r\n     */\r\n    POLYGON: 4,\r\n\r\n    /**\r\n     * A Rectangle Geometry object type.\r\n     * \r\n     * @name Phaser.Geom.RECTANGLE\r\n     * @type {number}\r\n     * @since 3.19.0\r\n     */\r\n    RECTANGLE: 5,\r\n\r\n    /**\r\n     * A Triangle Geometry object type.\r\n     * \r\n     * @name Phaser.Geom.TRIANGLE\r\n     * @type {number}\r\n     * @since 3.19.0\r\n     */\r\n    TRIANGLE: 6\r\n\r\n};\r\n\r\nmodule.exports = GEOM_CONST;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Get a point on a line that's a given percentage along its length.\r\n *\r\n * @function Phaser.Geom.Line.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line.\r\n * @param {number} position - A value between 0 and 1, where 0 is the start, 0.5 is the middle and 1 is the end of the line.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An optional point, or point-like object, to store the coordinates of the point on the line.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} The point on the line.\r\n */\r\nvar GetPoint = function (line, position, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    out.x = line.x1 + (line.x2 - line.x1) * position;\r\n    out.y = line.y1 + (line.y2 - line.y1) * position;\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetPoint;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Length = require('./Length');\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Get a number of points along a line's length.\r\n *\r\n * Provide a `quantity` to get an exact number of points along the line.\r\n *\r\n * Provide a `stepRate` to ensure a specific distance between each point on the line. Set `quantity` to `0` when\r\n * providing a `stepRate`.\r\n *\r\n * @function Phaser.Geom.Line.GetPoints\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point[]} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line.\r\n * @param {number} quantity - The number of points to place on the line. Set to `0` to use `stepRate` instead.\r\n * @param {number} [stepRate] - The distance between each point on the line. When set, `quantity` is implied and should be set to `0`.\r\n * @param {(array|Phaser.Geom.Point[])} [out] - An optional array of Points, or point-like objects, to store the coordinates of the points on the line.\r\n *\r\n * @return {(array|Phaser.Geom.Point[])} An array of Points, or point-like objects, containing the coordinates of the points on the line.\r\n */\r\nvar GetPoints = function (line, quantity, stepRate, out)\r\n{\r\n    if (out === undefined) { out = []; }\r\n\r\n    //  If quantity is a falsey value (false, null, 0, undefined, etc) then we calculate it based on the stepRate instead.\r\n    if (!quantity && stepRate > 0)\r\n    {\r\n        quantity = Length(line) / stepRate;\r\n    }\r\n\r\n    var x1 = line.x1;\r\n    var y1 = line.y1;\r\n\r\n    var x2 = line.x2;\r\n    var y2 = line.y2;\r\n\r\n    for (var i = 0; i < quantity; i++)\r\n    {\r\n        var position = i / quantity;\r\n\r\n        var x = x1 + (x2 - x1) * position;\r\n        var y = y1 + (y2 - y1) * position;\r\n\r\n        out.push(new Point(x, y));\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetPoints;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the length of the given line.\r\n *\r\n * @function Phaser.Geom.Line.Length\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to calculate the length of.\r\n *\r\n * @return {number} The length of the line.\r\n */\r\nvar Length = function (line)\r\n{\r\n    return Math.sqrt((line.x2 - line.x1) * (line.x2 - line.x1) + (line.y2 - line.y1) * (line.y2 - line.y1));\r\n};\r\n\r\nmodule.exports = Length;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar GetPoint = require('./GetPoint');\r\nvar GetPoints = require('./GetPoints');\r\nvar GEOM_CONST = require('../const');\r\nvar Random = require('./Random');\r\nvar Vector2 = require('../../math/Vector2');\r\n\r\n/**\r\n * @classdesc\r\n * Defines a Line segment, a part of a line between two endpoints.\r\n *\r\n * @class Line\r\n * @memberof Phaser.Geom\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {number} [x1=0] - The x coordinate of the lines starting point.\r\n * @param {number} [y1=0] - The y coordinate of the lines starting point.\r\n * @param {number} [x2=0] - The x coordinate of the lines ending point.\r\n * @param {number} [y2=0] - The y coordinate of the lines ending point.\r\n */\r\nvar Line = new Class({\r\n\r\n    initialize:\r\n\r\n    function Line (x1, y1, x2, y2)\r\n    {\r\n        if (x1 === undefined) { x1 = 0; }\r\n        if (y1 === undefined) { y1 = 0; }\r\n        if (x2 === undefined) { x2 = 0; }\r\n        if (y2 === undefined) { y2 = 0; }\r\n\r\n        /**\r\n         * The geometry constant type of this object: `GEOM_CONST.LINE`.\r\n         * Used for fast type comparisons.\r\n         *\r\n         * @name Phaser.Geom.Line#type\r\n         * @type {number}\r\n         * @readonly\r\n         * @since 3.19.0\r\n         */\r\n        this.type = GEOM_CONST.LINE;\r\n\r\n        /**\r\n         * The x coordinate of the lines starting point.\r\n         *\r\n         * @name Phaser.Geom.Line#x1\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.x1 = x1;\r\n\r\n        /**\r\n         * The y coordinate of the lines starting point.\r\n         *\r\n         * @name Phaser.Geom.Line#y1\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.y1 = y1;\r\n\r\n        /**\r\n         * The x coordinate of the lines ending point.\r\n         *\r\n         * @name Phaser.Geom.Line#x2\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.x2 = x2;\r\n\r\n        /**\r\n         * The y coordinate of the lines ending point.\r\n         *\r\n         * @name Phaser.Geom.Line#y2\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.y2 = y2;\r\n    },\r\n\r\n    /**\r\n     * Get a point on a line that's a given percentage along its length.\r\n     *\r\n     * @method Phaser.Geom.Line#getPoint\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Point} O - [output,$return]\r\n     *\r\n     * @param {number} position - A value between 0 and 1, where 0 is the start, 0.5 is the middle and 1 is the end of the line.\r\n     * @param {(Phaser.Geom.Point|object)} [output] - An optional point, or point-like object, to store the coordinates of the point on the line.\r\n     *\r\n     * @return {(Phaser.Geom.Point|object)} A Point, or point-like object, containing the coordinates of the point on the line.\r\n     */\r\n    getPoint: function (position, output)\r\n    {\r\n        return GetPoint(this, position, output);\r\n    },\r\n\r\n    /**\r\n     * Get a number of points along a line's length.\r\n     *\r\n     * Provide a `quantity` to get an exact number of points along the line.\r\n     *\r\n     * Provide a `stepRate` to ensure a specific distance between each point on the line. Set `quantity` to `0` when\r\n     * providing a `stepRate`.\r\n     *\r\n     * @method Phaser.Geom.Line#getPoints\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Point[]} O - [output,$return]\r\n     *\r\n     * @param {number} quantity - The number of points to place on the line. Set to `0` to use `stepRate` instead.\r\n     * @param {number} [stepRate] - The distance between each point on the line. When set, `quantity` is implied and should be set to `0`.\r\n     * @param {(array|Phaser.Geom.Point[])} [output] - An optional array of Points, or point-like objects, to store the coordinates of the points on the line.\r\n     *\r\n     * @return {(array|Phaser.Geom.Point[])} An array of Points, or point-like objects, containing the coordinates of the points on the line.\r\n     */\r\n    getPoints: function (quantity, stepRate, output)\r\n    {\r\n        return GetPoints(this, quantity, stepRate, output);\r\n    },\r\n\r\n    /**\r\n     * Get a random Point on the Line.\r\n     *\r\n     * @method Phaser.Geom.Line#getRandomPoint\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Point} O - [point,$return]\r\n     *\r\n     * @param {(Phaser.Geom.Point|object)} [point] - An instance of a Point to be modified.\r\n     *\r\n     * @return {Phaser.Geom.Point} A random Point on the Line.\r\n     */\r\n    getRandomPoint: function (point)\r\n    {\r\n        return Random(this, point);\r\n    },\r\n\r\n    /**\r\n     * Set new coordinates for the line endpoints.\r\n     *\r\n     * @method Phaser.Geom.Line#setTo\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [x1=0] - The x coordinate of the lines starting point.\r\n     * @param {number} [y1=0] - The y coordinate of the lines starting point.\r\n     * @param {number} [x2=0] - The x coordinate of the lines ending point.\r\n     * @param {number} [y2=0] - The y coordinate of the lines ending point.\r\n     *\r\n     * @return {this} This Line object.\r\n     */\r\n    setTo: function (x1, y1, x2, y2)\r\n    {\r\n        if (x1 === undefined) { x1 = 0; }\r\n        if (y1 === undefined) { y1 = 0; }\r\n        if (x2 === undefined) { x2 = 0; }\r\n        if (y2 === undefined) { y2 = 0; }\r\n\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Returns a Vector2 object that corresponds to the start of this Line.\r\n     *\r\n     * @method Phaser.Geom.Line#getPointA\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Math.Vector2} O - [vec2,$return]\r\n     *\r\n     * @param {Phaser.Math.Vector2} [vec2] - A Vector2 object to set the results in. If `undefined` a new Vector2 will be created.\r\n     *\r\n     * @return {Phaser.Math.Vector2} A Vector2 object that corresponds to the start of this Line.\r\n     */\r\n    getPointA: function (vec2)\r\n    {\r\n        if (vec2 === undefined) { vec2 = new Vector2(); }\r\n\r\n        vec2.set(this.x1, this.y1);\r\n\r\n        return vec2;\r\n    },\r\n\r\n    /**\r\n     * Returns a Vector2 object that corresponds to the end of this Line.\r\n     *\r\n     * @method Phaser.Geom.Line#getPointB\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Math.Vector2} O - [vec2,$return]\r\n     *\r\n     * @param {Phaser.Math.Vector2} [vec2] - A Vector2 object to set the results in. If `undefined` a new Vector2 will be created.\r\n     *\r\n     * @return {Phaser.Math.Vector2} A Vector2 object that corresponds to the end of this Line.\r\n     */\r\n    getPointB: function (vec2)\r\n    {\r\n        if (vec2 === undefined) { vec2 = new Vector2(); }\r\n\r\n        vec2.set(this.x2, this.y2);\r\n\r\n        return vec2;\r\n    },\r\n\r\n    /**\r\n     * The left position of the Line.\r\n     *\r\n     * @name Phaser.Geom.Line#left\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    left: {\r\n\r\n        get: function ()\r\n        {\r\n            return Math.min(this.x1, this.x2);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (this.x1 <= this.x2)\r\n            {\r\n                this.x1 = value;\r\n            }\r\n            else\r\n            {\r\n                this.x2 = value;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The right position of the Line.\r\n     *\r\n     * @name Phaser.Geom.Line#right\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    right: {\r\n\r\n        get: function ()\r\n        {\r\n            return Math.max(this.x1, this.x2);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (this.x1 > this.x2)\r\n            {\r\n                this.x1 = value;\r\n            }\r\n            else\r\n            {\r\n                this.x2 = value;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The top position of the Line.\r\n     *\r\n     * @name Phaser.Geom.Line#top\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    top: {\r\n\r\n        get: function ()\r\n        {\r\n            return Math.min(this.y1, this.y2);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (this.y1 <= this.y2)\r\n            {\r\n                this.y1 = value;\r\n            }\r\n            else\r\n            {\r\n                this.y2 = value;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The bottom position of the Line.\r\n     *\r\n     * @name Phaser.Geom.Line#bottom\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottom: {\r\n\r\n        get: function ()\r\n        {\r\n            return Math.max(this.y1, this.y2);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (this.y1 > this.y2)\r\n            {\r\n                this.y1 = value;\r\n            }\r\n            else\r\n            {\r\n                this.y2 = value;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Line;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Returns a random point on a given Line.\r\n *\r\n * @function Phaser.Geom.Line.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The Line to calculate the random Point on.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An instance of a Point to be modified.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A random Point on the Line.\r\n */\r\nvar Random = function (line, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    var t = Math.random();\r\n\r\n    out.x = line.x1 + t * (line.x2 - line.x1);\r\n    out.y = line.y1 + t * (line.y2 - line.y1);\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = Random;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar GEOM_CONST = require('../const');\r\n\r\n/**\r\n * @classdesc\r\n * Defines a Point in 2D space, with an x and y component.\r\n *\r\n * @class Point\r\n * @memberof Phaser.Geom\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {number} [x=0] - The x coordinate of this Point.\r\n * @param {number} [y=x] - The y coordinate of this Point.\r\n */\r\nvar Point = new Class({\r\n\r\n    initialize:\r\n\r\n    function Point (x, y)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = x; }\r\n\r\n        /**\r\n         * The geometry constant type of this object: `GEOM_CONST.POINT`.\r\n         * Used for fast type comparisons.\r\n         *\r\n         * @name Phaser.Geom.Point#type\r\n         * @type {number}\r\n         * @readonly\r\n         * @since 3.19.0\r\n         */\r\n        this.type = GEOM_CONST.POINT;\r\n\r\n        /**\r\n         * The x coordinate of this Point.\r\n         *\r\n         * @name Phaser.Geom.Point#x\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.x = x;\r\n\r\n        /**\r\n         * The y coordinate of this Point.\r\n         *\r\n         * @name Phaser.Geom.Point#y\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.y = y;\r\n    },\r\n\r\n    /**\r\n     * Set the x and y coordinates of the point to the given values.\r\n     *\r\n     * @method Phaser.Geom.Point#setTo\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} [x=0] - The x coordinate of this Point.\r\n     * @param {number} [y=x] - The y coordinate of this Point.\r\n     *\r\n     * @return {this} This Point object.\r\n     */\r\n    setTo: function (x, y)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = x; }\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        return this;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Point;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Checks if a given point is inside a Rectangle's bounds.\r\n *\r\n * @function Phaser.Geom.Rectangle.Contains\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to check.\r\n * @param {number} x - The X coordinate of the point to check.\r\n * @param {number} y - The Y coordinate of the point to check.\r\n *\r\n * @return {boolean} `true` if the point is within the Rectangle's bounds, otherwise `false`.\r\n */\r\nvar Contains = function (rect, x, y)\r\n{\r\n    if (rect.width <= 0 || rect.height <= 0)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return (rect.x <= x && rect.x + rect.width >= x && rect.y <= y && rect.y + rect.height >= y);\r\n};\r\n\r\nmodule.exports = Contains;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Perimeter = require('./Perimeter');\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Calculates the coordinates of a point at a certain `position` on the Rectangle's perimeter.\r\n * \r\n * The `position` is a fraction between 0 and 1 which defines how far into the perimeter the point is.\r\n * \r\n * A value of 0 or 1 returns the point at the top left corner of the rectangle, while a value of 0.5 returns the point at the bottom right corner of the rectangle. Values between 0 and 0.5 are on the top or the right side and values between 0.5 and 1 are on the bottom or the left side.\r\n *\r\n * @function Phaser.Geom.Rectangle.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectangle - The Rectangle to get the perimeter point from.\r\n * @param {number} position - The normalized distance into the Rectangle's perimeter to return.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An object to update with the `x` and `y` coordinates of the point.\r\n *\r\n * @return {Phaser.Geom.Point} The updated `output` object, or a new Point if no `output` object was given.\r\n */\r\nvar GetPoint = function (rectangle, position, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    if (position <= 0 || position >= 1)\r\n    {\r\n        out.x = rectangle.x;\r\n        out.y = rectangle.y;\r\n\r\n        return out;\r\n    }\r\n\r\n    var p = Perimeter(rectangle) * position;\r\n\r\n    if (position > 0.5)\r\n    {\r\n        p -= (rectangle.width + rectangle.height);\r\n\r\n        if (p <= rectangle.width)\r\n        {\r\n            //  Face 3\r\n            out.x = rectangle.right - p;\r\n            out.y = rectangle.bottom;\r\n        }\r\n        else\r\n        {\r\n            //  Face 4\r\n            out.x = rectangle.x;\r\n            out.y = rectangle.bottom - (p - rectangle.width);\r\n        }\r\n    }\r\n    else if (p <= rectangle.width)\r\n    {\r\n        //  Face 1\r\n        out.x = rectangle.x + p;\r\n        out.y = rectangle.y;\r\n    }\r\n    else\r\n    {\r\n        //  Face 2\r\n        out.x = rectangle.right;\r\n        out.y = rectangle.y + (p - rectangle.width);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetPoint;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GetPoint = require('./GetPoint');\r\nvar Perimeter = require('./Perimeter');\r\n\r\n//  Return an array of points from the perimeter of the rectangle\r\n//  each spaced out based on the quantity or step required\r\n\r\n/**\r\n * Return an array of points from the perimeter of the rectangle, each spaced out based on the quantity or step required.\r\n *\r\n * @function Phaser.Geom.Rectangle.GetPoints\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point[]} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectangle - The Rectangle object to get the points from.\r\n * @param {number} step - Step between points. Used to calculate the number of points to return when quantity is falsey. Ignored if quantity is positive.\r\n * @param {number} quantity - The number of evenly spaced points from the rectangles perimeter to return. If falsey, step param will be used to calculate the number of points.\r\n * @param {(array|Phaser.Geom.Point[])} [out] - An optional array to store the points in.\r\n *\r\n * @return {(array|Phaser.Geom.Point[])} An array of Points from the perimeter of the rectangle.\r\n */\r\nvar GetPoints = function (rectangle, quantity, stepRate, out)\r\n{\r\n    if (out === undefined) { out = []; }\r\n\r\n    //  If quantity is a falsey value (false, null, 0, undefined, etc) then we calculate it based on the stepRate instead.\r\n    if (!quantity && stepRate > 0)\r\n    {\r\n        quantity = Perimeter(rectangle) / stepRate;\r\n    }\r\n\r\n    for (var i = 0; i < quantity; i++)\r\n    {\r\n        var position = i / quantity;\r\n\r\n        out.push(GetPoint(rectangle, position));\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetPoints;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculates the perimeter of a Rectangle.\r\n *\r\n * @function Phaser.Geom.Rectangle.Perimeter\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to use.\r\n *\r\n * @return {number} The perimeter of the Rectangle, equal to `(width * 2) + (height * 2)`.\r\n */\r\nvar Perimeter = function (rect)\r\n{\r\n    return 2 * (rect.width + rect.height);\r\n};\r\n\r\nmodule.exports = Perimeter;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Returns a random point within a Rectangle.\r\n *\r\n * @function Phaser.Geom.Rectangle.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to return a point from.\r\n * @param {Phaser.Geom.Point} out - The object to update with the point's coordinates.\r\n *\r\n * @return {Phaser.Geom.Point} The modified `out` object, or a new Point if none was provided.\r\n */\r\nvar Random = function (rect, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    out.x = rect.x + (Math.random() * rect.width);\r\n    out.y = rect.y + (Math.random() * rect.height);\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = Random;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Contains = require('./Contains');\r\nvar GetPoint = require('./GetPoint');\r\nvar GetPoints = require('./GetPoints');\r\nvar GEOM_CONST = require('../const');\r\nvar Line = require('../line/Line');\r\nvar Random = require('./Random');\r\n\r\n/**\r\n * @classdesc\r\n * Encapsulates a 2D rectangle defined by its corner point in the top-left and its extends in x (width) and y (height)\r\n *\r\n * @class Rectangle\r\n * @memberof Phaser.Geom\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {number} [x=0] - The X coordinate of the top left corner of the Rectangle.\r\n * @param {number} [y=0] - The Y coordinate of the top left corner of the Rectangle.\r\n * @param {number} [width=0] - The width of the Rectangle.\r\n * @param {number} [height=0] - The height of the Rectangle.\r\n */\r\nvar Rectangle = new Class({\r\n\r\n    initialize:\r\n\r\n    function Rectangle (x, y, width, height)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n        if (width === undefined) { width = 0; }\r\n        if (height === undefined) { height = 0; }\r\n\r\n        /**\r\n         * The geometry constant type of this object: `GEOM_CONST.RECTANGLE`.\r\n         * Used for fast type comparisons.\r\n         *\r\n         * @name Phaser.Geom.Rectangle#type\r\n         * @type {number}\r\n         * @readonly\r\n         * @since 3.19.0\r\n         */\r\n        this.type = GEOM_CONST.RECTANGLE;\r\n\r\n        /**\r\n         * The X coordinate of the top left corner of the Rectangle.\r\n         *\r\n         * @name Phaser.Geom.Rectangle#x\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.x = x;\r\n\r\n        /**\r\n         * The Y coordinate of the top left corner of the Rectangle.\r\n         *\r\n         * @name Phaser.Geom.Rectangle#y\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.y = y;\r\n\r\n        /**\r\n         * The width of the Rectangle, i.e. the distance between its left side (defined by `x`) and its right side.\r\n         *\r\n         * @name Phaser.Geom.Rectangle#width\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.width = width;\r\n\r\n        /**\r\n         * The height of the Rectangle, i.e. the distance between its top side (defined by `y`) and its bottom side.\r\n         *\r\n         * @name Phaser.Geom.Rectangle#height\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.height = height;\r\n    },\r\n\r\n    /**\r\n     * Checks if the given point is inside the Rectangle's bounds.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#contains\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The X coordinate of the point to check.\r\n     * @param {number} y - The Y coordinate of the point to check.\r\n     *\r\n     * @return {boolean} `true` if the point is within the Rectangle's bounds, otherwise `false`.\r\n     */\r\n    contains: function (x, y)\r\n    {\r\n        return Contains(this, x, y);\r\n    },\r\n\r\n    /**\r\n     * Calculates the coordinates of a point at a certain `position` on the Rectangle's perimeter.\r\n     * \r\n     * The `position` is a fraction between 0 and 1 which defines how far into the perimeter the point is.\r\n     * \r\n     * A value of 0 or 1 returns the point at the top left corner of the rectangle, while a value of 0.5 returns the point at the bottom right corner of the rectangle. Values between 0 and 0.5 are on the top or the right side and values between 0.5 and 1 are on the bottom or the left side.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getPoint\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Point} O - [output,$return]\r\n     *\r\n     * @param {number} position - The normalized distance into the Rectangle's perimeter to return.\r\n     * @param {(Phaser.Geom.Point|object)} [output] - An object to update with the `x` and `y` coordinates of the point.\r\n     *\r\n     * @return {(Phaser.Geom.Point|object)} The updated `output` object, or a new Point if no `output` object was given.\r\n     */\r\n    getPoint: function (position, output)\r\n    {\r\n        return GetPoint(this, position, output);\r\n    },\r\n\r\n    /**\r\n     * Returns an array of points from the perimeter of the Rectangle, each spaced out based on the quantity or step required.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getPoints\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Point[]} O - [output,$return]\r\n     *\r\n     * @param {number} quantity - The number of points to return. Set to `false` or 0 to return an arbitrary number of points (`perimeter / stepRate`) evenly spaced around the Rectangle based on the `stepRate`.\r\n     * @param {number} [stepRate] - If `quantity` is 0, determines the normalized distance between each returned point.\r\n     * @param {(array|Phaser.Geom.Point[])} [output] - An array to which to append the points.\r\n     *\r\n     * @return {(array|Phaser.Geom.Point[])} The modified `output` array, or a new array if none was provided.\r\n     */\r\n    getPoints: function (quantity, stepRate, output)\r\n    {\r\n        return GetPoints(this, quantity, stepRate, output);\r\n    },\r\n\r\n    /**\r\n     * Returns a random point within the Rectangle's bounds.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getRandomPoint\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Point} O - [point,$return]\r\n     *\r\n     * @param {Phaser.Geom.Point} [point] - The object in which to store the `x` and `y` coordinates of the point.\r\n     *\r\n     * @return {Phaser.Geom.Point} The updated `point`, or a new Point if none was provided.\r\n     */\r\n    getRandomPoint: function (point)\r\n    {\r\n        return Random(this, point);\r\n    },\r\n\r\n    /**\r\n     * Sets the position, width, and height of the Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#setTo\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The X coordinate of the top left corner of the Rectangle.\r\n     * @param {number} y - The Y coordinate of the top left corner of the Rectangle.\r\n     * @param {number} width - The width of the Rectangle.\r\n     * @param {number} height - The height of the Rectangle.\r\n     *\r\n     * @return {this} This Rectangle object.\r\n     */\r\n    setTo: function (x, y, width, height)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Resets the position, width, and height of the Rectangle to 0.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#setEmpty\r\n     * @since 3.0.0\r\n     *\r\n     * @return {this} This Rectangle object.\r\n     */\r\n    setEmpty: function ()\r\n    {\r\n        return this.setTo(0, 0, 0, 0);\r\n    },\r\n\r\n    /**\r\n     * Sets the position of the Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#setPosition\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The X coordinate of the top left corner of the Rectangle.\r\n     * @param {number} [y=x] - The Y coordinate of the top left corner of the Rectangle.\r\n     *\r\n     * @return {this} This Rectangle object.\r\n     */\r\n    setPosition: function (x, y)\r\n    {\r\n        if (y === undefined) { y = x; }\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the width and height of the Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#setSize\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} width - The width to set the Rectangle to.\r\n     * @param {number} [height=width] - The height to set the Rectangle to.\r\n     *\r\n     * @return {this} This Rectangle object.\r\n     */\r\n    setSize: function (width, height)\r\n    {\r\n        if (height === undefined) { height = width; }\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Determines if the Rectangle is empty. A Rectangle is empty if its width or height is less than or equal to 0.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#isEmpty\r\n     * @since 3.0.0\r\n     *\r\n     * @return {boolean} `true` if the Rectangle is empty. A Rectangle object is empty if its width or height is less than or equal to 0.\r\n     */\r\n    isEmpty: function ()\r\n    {\r\n        return (this.width <= 0 || this.height <= 0);\r\n    },\r\n\r\n    /**\r\n     * Returns a Line object that corresponds to the top of this Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getLineA\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Line} O - [line,$return]\r\n     *\r\n     * @param {Phaser.Geom.Line} [line] - A Line object to set the results in. If `undefined` a new Line will be created.\r\n     *\r\n     * @return {Phaser.Geom.Line} A Line object that corresponds to the top of this Rectangle.\r\n     */\r\n    getLineA: function (line)\r\n    {\r\n        if (line === undefined) { line = new Line(); }\r\n\r\n        line.setTo(this.x, this.y, this.right, this.y);\r\n\r\n        return line;\r\n    },\r\n\r\n    /**\r\n     * Returns a Line object that corresponds to the right of this Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getLineB\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Line} O - [line,$return]\r\n     *\r\n     * @param {Phaser.Geom.Line} [line] - A Line object to set the results in. If `undefined` a new Line will be created.\r\n     *\r\n     * @return {Phaser.Geom.Line} A Line object that corresponds to the right of this Rectangle.\r\n     */\r\n    getLineB: function (line)\r\n    {\r\n        if (line === undefined) { line = new Line(); }\r\n\r\n        line.setTo(this.right, this.y, this.right, this.bottom);\r\n\r\n        return line;\r\n    },\r\n\r\n    /**\r\n     * Returns a Line object that corresponds to the bottom of this Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getLineC\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Line} O - [line,$return]\r\n     *\r\n     * @param {Phaser.Geom.Line} [line] - A Line object to set the results in. If `undefined` a new Line will be created.\r\n     *\r\n     * @return {Phaser.Geom.Line} A Line object that corresponds to the bottom of this Rectangle.\r\n     */\r\n    getLineC: function (line)\r\n    {\r\n        if (line === undefined) { line = new Line(); }\r\n\r\n        line.setTo(this.right, this.bottom, this.x, this.bottom);\r\n\r\n        return line;\r\n    },\r\n\r\n    /**\r\n     * Returns a Line object that corresponds to the left of this Rectangle.\r\n     *\r\n     * @method Phaser.Geom.Rectangle#getLineD\r\n     * @since 3.0.0\r\n     *\r\n     * @generic {Phaser.Geom.Line} O - [line,$return]\r\n     *\r\n     * @param {Phaser.Geom.Line} [line] - A Line object to set the results in. If `undefined` a new Line will be created.\r\n     *\r\n     * @return {Phaser.Geom.Line} A Line object that corresponds to the left of this Rectangle.\r\n     */\r\n    getLineD: function (line)\r\n    {\r\n        if (line === undefined) { line = new Line(); }\r\n\r\n        line.setTo(this.x, this.bottom, this.x, this.y);\r\n\r\n        return line;\r\n    },\r\n\r\n    /**\r\n     * The x coordinate of the left of the Rectangle.\r\n     * Changing the left property of a Rectangle object has no effect on the y and height properties. However it does affect the width property, whereas changing the x value does not affect the width property.\r\n     *\r\n     * @name Phaser.Geom.Rectangle#left\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    left: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (value >= this.right)\r\n            {\r\n                this.width = 0;\r\n            }\r\n            else\r\n            {\r\n                this.width = this.right - value;\r\n            }\r\n\r\n            this.x = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The sum of the x and width properties.\r\n     * Changing the right property of a Rectangle object has no effect on the x, y and height properties, however it does affect the width property.\r\n     *\r\n     * @name Phaser.Geom.Rectangle#right\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    right: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x + this.width;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (value <= this.x)\r\n            {\r\n                this.width = 0;\r\n            }\r\n            else\r\n            {\r\n                this.width = value - this.x;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The y coordinate of the top of the Rectangle. Changing the top property of a Rectangle object has no effect on the x and width properties.\r\n     * However it does affect the height property, whereas changing the y value does not affect the height property.\r\n     *\r\n     * @name Phaser.Geom.Rectangle#top\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    top: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (value >= this.bottom)\r\n            {\r\n                this.height = 0;\r\n            }\r\n            else\r\n            {\r\n                this.height = (this.bottom - value);\r\n            }\r\n\r\n            this.y = value;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The sum of the y and height properties.\r\n     * Changing the bottom property of a Rectangle object has no effect on the x, y and width properties, but does change the height property.\r\n     *\r\n     * @name Phaser.Geom.Rectangle#bottom\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    bottom: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y + this.height;\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            if (value <= this.y)\r\n            {\r\n                this.height = 0;\r\n            }\r\n            else\r\n            {\r\n                this.height = value - this.y;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The x coordinate of the center of the Rectangle.\r\n     *\r\n     * @name Phaser.Geom.Rectangle#centerX\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    centerX: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.x + (this.width / 2);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.x = value - (this.width / 2);\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * The y coordinate of the center of the Rectangle.\r\n     *\r\n     * @name Phaser.Geom.Rectangle#centerY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    centerY: {\r\n\r\n        get: function ()\r\n        {\r\n            return this.y + (this.height / 2);\r\n        },\r\n\r\n        set: function (value)\r\n        {\r\n            this.y = value - (this.height / 2);\r\n        }\r\n\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Rectangle;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Force a value within the boundaries by clamping it to the range `min`, `max`.\r\n *\r\n * @function Phaser.Math.Clamp\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to be clamped.\r\n * @param {number} min - The minimum bounds.\r\n * @param {number} max - The maximum bounds.\r\n *\r\n * @return {number} The clamped value.\r\n */\r\nvar Clamp = function (value, min, max)\r\n{\r\n    return Math.max(min, Math.min(max, value));\r\n};\r\n\r\nmodule.exports = Clamp;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar CONST = require('./const');\r\n\r\n/**\r\n * Convert the given angle from degrees, to the equivalent angle in radians.\r\n *\r\n * @function Phaser.Math.DegToRad\r\n * @since 3.0.0\r\n *\r\n * @param {number} degrees - The angle (in degrees) to convert to radians.\r\n *\r\n * @return {number} The given angle converted to radians.\r\n */\r\nvar DegToRad = function (degrees)\r\n{\r\n    return degrees * CONST.DEG_TO_RAD;\r\n};\r\n\r\nmodule.exports = DegToRad;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Rotate a `point` around `x` and `y` to the given `angle`, at the same distance.\r\n *\r\n * In polar notation, this maps a point from (r, t) to (r, angle), vs. the origin (x, y).\r\n *\r\n * @function Phaser.Math.RotateAround\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Types.Math.Vector2Like} T - [point,$return]\r\n *\r\n * @param {(Phaser.Geom.Point|object)} point - The point to be rotated.\r\n * @param {number} x - The horizontal coordinate to rotate around.\r\n * @param {number} y - The vertical coordinate to rotate around.\r\n * @param {number} angle - The angle of rotation in radians.\r\n *\r\n * @return {Phaser.Types.Math.Vector2Like} The given point.\r\n */\r\nvar RotateAround = function (point, x, y, angle)\r\n{\r\n    var c = Math.cos(angle);\r\n    var s = Math.sin(angle);\r\n\r\n    var tx = point.x - x;\r\n    var ty = point.y - y;\r\n\r\n    point.x = tx * c - ty * s + x;\r\n    point.y = tx * s + ty * c + y;\r\n\r\n    return point;\r\n};\r\n\r\nmodule.exports = RotateAround;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Vector2 = require('./Vector2');\r\n\r\n/**\r\n * Takes the `x` and `y` coordinates and transforms them into the same space as\r\n * defined by the position, rotation and scale values.\r\n *\r\n * @function Phaser.Math.TransformXY\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The x coordinate to be transformed.\r\n * @param {number} y - The y coordinate to be transformed.\r\n * @param {number} positionX - Horizontal position of the transform point.\r\n * @param {number} positionY - Vertical position of the transform point.\r\n * @param {number} rotation - Rotation of the transform point, in radians.\r\n * @param {number} scaleX - Horizontal scale of the transform point.\r\n * @param {number} scaleY - Vertical scale of the transform point.\r\n * @param {(Phaser.Math.Vector2|Phaser.Geom.Point|object)} [output] - The output vector, point or object for the translated coordinates.\r\n *\r\n * @return {(Phaser.Math.Vector2|Phaser.Geom.Point|object)} The translated point.\r\n */\r\nvar TransformXY = function (x, y, positionX, positionY, rotation, scaleX, scaleY, output)\r\n{\r\n    if (output === undefined) { output = new Vector2(); }\r\n\r\n    var radianSin = Math.sin(rotation);\r\n    var radianCos = Math.cos(rotation);\r\n\r\n    // Rotate and Scale\r\n    var a = radianCos * scaleX;\r\n    var b = radianSin * scaleX;\r\n    var c = -radianSin * scaleY;\r\n    var d = radianCos * scaleY;\r\n\r\n    //  Invert\r\n    var id = 1 / ((a * d) + (c * -b));\r\n\r\n    output.x = (d * id * x) + (-c * id * y) + (((positionY * c) - (positionX * d)) * id);\r\n    output.y = (a * id * y) + (-b * id * x) + (((-positionY * a) + (positionX * b)) * id);\r\n\r\n    return output;\r\n};\r\n\r\nmodule.exports = TransformXY;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  Adapted from [gl-matrix](https://github.com/toji/gl-matrix) by toji\r\n//  and [vecmath](https://github.com/mattdesl/vecmath) by mattdesl\r\n\r\nvar Class = require('../utils/Class');\r\nvar FuzzyEqual = require('../math/fuzzy/Equal');\r\n\r\n/**\r\n * @classdesc\r\n * A representation of a vector in 2D space.\r\n *\r\n * A two-component vector.\r\n *\r\n * @class Vector2\r\n * @memberof Phaser.Math\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {number|Phaser.Types.Math.Vector2Like} [x] - The x component, or an object with `x` and `y` properties.\r\n * @param {number} [y] - The y component.\r\n */\r\nvar Vector2 = new Class({\r\n\r\n    initialize:\r\n\r\n    function Vector2 (x, y)\r\n    {\r\n        /**\r\n         * The x component of this Vector.\r\n         *\r\n         * @name Phaser.Math.Vector2#x\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.x = 0;\r\n\r\n        /**\r\n         * The y component of this Vector.\r\n         *\r\n         * @name Phaser.Math.Vector2#y\r\n         * @type {number}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.y = 0;\r\n\r\n        if (typeof x === 'object')\r\n        {\r\n            this.x = x.x || 0;\r\n            this.y = x.y || 0;\r\n        }\r\n        else\r\n        {\r\n            if (y === undefined) { y = x; }\r\n\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Make a clone of this Vector2.\r\n     *\r\n     * @method Phaser.Math.Vector2#clone\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Vector2} A clone of this Vector2.\r\n     */\r\n    clone: function ()\r\n    {\r\n        return new Vector2(this.x, this.y);\r\n    },\r\n\r\n    /**\r\n     * Copy the components of a given Vector into this Vector.\r\n     *\r\n     * @method Phaser.Math.Vector2#copy\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Math.Vector2Like} src - The Vector to copy the components from.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    copy: function (src)\r\n    {\r\n        this.x = src.x || 0;\r\n        this.y = src.y || 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the component values of this Vector from a given Vector2Like object.\r\n     *\r\n     * @method Phaser.Math.Vector2#setFromObject\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Math.Vector2Like} obj - The object containing the component values to set for this Vector.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    setFromObject: function (obj)\r\n    {\r\n        this.x = obj.x || 0;\r\n        this.y = obj.y || 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the `x` and `y` components of the this Vector to the given `x` and `y` values.\r\n     *\r\n     * @method Phaser.Math.Vector2#set\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The x value to set for this Vector.\r\n     * @param {number} [y=x] - The y value to set for this Vector.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    set: function (x, y)\r\n    {\r\n        if (y === undefined) { y = x; }\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * This method is an alias for `Vector2.set`.\r\n     *\r\n     * @method Phaser.Math.Vector2#setTo\r\n     * @since 3.4.0\r\n     *\r\n     * @param {number} x - The x value to set for this Vector.\r\n     * @param {number} [y=x] - The y value to set for this Vector.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    setTo: function (x, y)\r\n    {\r\n        return this.set(x, y);\r\n    },\r\n\r\n    /**\r\n     * Sets the `x` and `y` values of this object from a given polar coordinate.\r\n     *\r\n     * @method Phaser.Math.Vector2#setToPolar\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} azimuth - The angular coordinate, in radians.\r\n     * @param {number} [radius=1] - The radial coordinate (length).\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    setToPolar: function (azimuth, radius)\r\n    {\r\n        if (radius == null) { radius = 1; }\r\n\r\n        this.x = Math.cos(azimuth) * radius;\r\n        this.y = Math.sin(azimuth) * radius;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Check whether this Vector is equal to a given Vector.\r\n     *\r\n     * Performs a strict equality check against each Vector's components.\r\n     *\r\n     * @method Phaser.Math.Vector2#equals\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Math.Vector2Like} v - The vector to compare with this Vector.\r\n     *\r\n     * @return {boolean} Whether the given Vector is equal to this Vector.\r\n     */\r\n    equals: function (v)\r\n    {\r\n        return ((this.x === v.x) && (this.y === v.y));\r\n    },\r\n\r\n    /**\r\n     * Check whether this Vector is approximately equal to a given Vector.\r\n     *\r\n     * @method Phaser.Math.Vector2#fuzzyEquals\r\n     * @since 3.23.0\r\n     *\r\n     * @param {Phaser.Types.Math.Vector2Like} v - The vector to compare with this Vector.\r\n     * @param {number} [epsilon=0.0001] - The tolerance value.\r\n     *\r\n     * @return {boolean} Whether both absolute differences of the x and y components are smaller than `epsilon`.\r\n     */\r\n    fuzzyEquals: function (v, epsilon)\r\n    {\r\n        return (FuzzyEqual(this.x, v.x, epsilon) && FuzzyEqual(this.y, v.y, epsilon));\r\n    },\r\n\r\n    /**\r\n     * Calculate the angle between this Vector and the positive x-axis, in radians.\r\n     *\r\n     * @method Phaser.Math.Vector2#angle\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The angle between this Vector, and the positive x-axis, given in radians.\r\n     */\r\n    angle: function ()\r\n    {\r\n        // computes the angle in radians with respect to the positive x-axis\r\n\r\n        var angle = Math.atan2(this.y, this.x);\r\n\r\n        if (angle < 0)\r\n        {\r\n            angle += 2 * Math.PI;\r\n        }\r\n\r\n        return angle;\r\n    },\r\n\r\n    /**\r\n     * Set the angle of this Vector.\r\n     *\r\n     * @method Phaser.Math.Vector2#setAngle\r\n     * @since 3.23.0\r\n     *\r\n     * @param {number} angle - The angle, in radians.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    setAngle: function (angle)\r\n    {\r\n        return this.setToPolar(angle, this.length());\r\n    },\r\n\r\n    /**\r\n     * Add a given Vector to this Vector. Addition is component-wise.\r\n     *\r\n     * @method Phaser.Math.Vector2#add\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Math.Vector2Like} src - The Vector to add to this Vector.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    add: function (src)\r\n    {\r\n        this.x += src.x;\r\n        this.y += src.y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Subtract the given Vector from this Vector. Subtraction is component-wise.\r\n     *\r\n     * @method Phaser.Math.Vector2#subtract\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Math.Vector2Like} src - The Vector to subtract from this Vector.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    subtract: function (src)\r\n    {\r\n        this.x -= src.x;\r\n        this.y -= src.y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Perform a component-wise multiplication between this Vector and the given Vector.\r\n     *\r\n     * Multiplies this Vector by the given Vector.\r\n     *\r\n     * @method Phaser.Math.Vector2#multiply\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Math.Vector2Like} src - The Vector to multiply this Vector by.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    multiply: function (src)\r\n    {\r\n        this.x *= src.x;\r\n        this.y *= src.y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Scale this Vector by the given value.\r\n     *\r\n     * @method Phaser.Math.Vector2#scale\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - The value to scale this Vector by.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    scale: function (value)\r\n    {\r\n        if (isFinite(value))\r\n        {\r\n            this.x *= value;\r\n            this.y *= value;\r\n        }\r\n        else\r\n        {\r\n            this.x = 0;\r\n            this.y = 0;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Perform a component-wise division between this Vector and the given Vector.\r\n     *\r\n     * Divides this Vector by the given Vector.\r\n     *\r\n     * @method Phaser.Math.Vector2#divide\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Math.Vector2Like} src - The Vector to divide this Vector by.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    divide: function (src)\r\n    {\r\n        this.x /= src.x;\r\n        this.y /= src.y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Negate the `x` and `y` components of this Vector.\r\n     *\r\n     * @method Phaser.Math.Vector2#negate\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    negate: function ()\r\n    {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Calculate the distance between this Vector and the given Vector.\r\n     *\r\n     * @method Phaser.Math.Vector2#distance\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Math.Vector2Like} src - The Vector to calculate the distance to.\r\n     *\r\n     * @return {number} The distance from this Vector to the given Vector.\r\n     */\r\n    distance: function (src)\r\n    {\r\n        var dx = src.x - this.x;\r\n        var dy = src.y - this.y;\r\n\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    },\r\n\r\n    /**\r\n     * Calculate the distance between this Vector and the given Vector, squared.\r\n     *\r\n     * @method Phaser.Math.Vector2#distanceSq\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Math.Vector2Like} src - The Vector to calculate the distance to.\r\n     *\r\n     * @return {number} The distance from this Vector to the given Vector, squared.\r\n     */\r\n    distanceSq: function (src)\r\n    {\r\n        var dx = src.x - this.x;\r\n        var dy = src.y - this.y;\r\n\r\n        return dx * dx + dy * dy;\r\n    },\r\n\r\n    /**\r\n     * Calculate the length (or magnitude) of this Vector.\r\n     *\r\n     * @method Phaser.Math.Vector2#length\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The length of this Vector.\r\n     */\r\n    length: function ()\r\n    {\r\n        var x = this.x;\r\n        var y = this.y;\r\n\r\n        return Math.sqrt(x * x + y * y);\r\n    },\r\n\r\n    /**\r\n     * Set the length (or magnitude) of this Vector.\r\n     *\r\n     * @method Phaser.Math.Vector2#setLength\r\n     * @since 3.23.0\r\n     *\r\n     * @param {number} length\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    setLength: function (length)\r\n    {\r\n        return this.normalize().scale(length);\r\n    },\r\n\r\n    /**\r\n     * Calculate the length of this Vector squared.\r\n     *\r\n     * @method Phaser.Math.Vector2#lengthSq\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The length of this Vector, squared.\r\n     */\r\n    lengthSq: function ()\r\n    {\r\n        var x = this.x;\r\n        var y = this.y;\r\n\r\n        return x * x + y * y;\r\n    },\r\n\r\n    /**\r\n     * Normalize this Vector.\r\n     *\r\n     * Makes the vector a unit length vector (magnitude of 1) in the same direction.\r\n     *\r\n     * @method Phaser.Math.Vector2#normalize\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    normalize: function ()\r\n    {\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var len = x * x + y * y;\r\n\r\n        if (len > 0)\r\n        {\r\n            len = 1 / Math.sqrt(len);\r\n\r\n            this.x = x * len;\r\n            this.y = y * len;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Rotate this Vector to its perpendicular, in the positive direction.\r\n     *\r\n     * @method Phaser.Math.Vector2#normalizeRightHand\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    normalizeRightHand: function ()\r\n    {\r\n        var x = this.x;\r\n\r\n        this.x = this.y * -1;\r\n        this.y = x;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Rotate this Vector to its perpendicular, in the negative direction.\r\n     *\r\n     * @method Phaser.Math.Vector2#normalizeLeftHand\r\n     * @since 3.23.0\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    normalizeLeftHand: function ()\r\n    {\r\n        var x = this.x;\r\n\r\n        this.x = this.y;\r\n        this.y = x * -1;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Calculate the dot product of this Vector and the given Vector.\r\n     *\r\n     * @method Phaser.Math.Vector2#dot\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Math.Vector2Like} src - The Vector2 to dot product with this Vector2.\r\n     *\r\n     * @return {number} The dot product of this Vector and the given Vector.\r\n     */\r\n    dot: function (src)\r\n    {\r\n        return this.x * src.x + this.y * src.y;\r\n    },\r\n\r\n    /**\r\n     * Calculate the cross product of this Vector and the given Vector.\r\n     *\r\n     * @method Phaser.Math.Vector2#cross\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Math.Vector2Like} src - The Vector2 to cross with this Vector2.\r\n     *\r\n     * @return {number} The cross product of this Vector and the given Vector.\r\n     */\r\n    cross: function (src)\r\n    {\r\n        return this.x * src.y - this.y * src.x;\r\n    },\r\n\r\n    /**\r\n     * Linearly interpolate between this Vector and the given Vector.\r\n     *\r\n     * Interpolates this Vector towards the given Vector.\r\n     *\r\n     * @method Phaser.Math.Vector2#lerp\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Types.Math.Vector2Like} src - The Vector2 to interpolate towards.\r\n     * @param {number} [t=0] - The interpolation percentage, between 0 and 1.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    lerp: function (src, t)\r\n    {\r\n        if (t === undefined) { t = 0; }\r\n\r\n        var ax = this.x;\r\n        var ay = this.y;\r\n\r\n        this.x = ax + t * (src.x - ax);\r\n        this.y = ay + t * (src.y - ay);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Transform this Vector with the given Matrix.\r\n     *\r\n     * @method Phaser.Math.Vector2#transformMat3\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Matrix3} mat - The Matrix3 to transform this Vector2 with.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    transformMat3: function (mat)\r\n    {\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var m = mat.val;\r\n\r\n        this.x = m[0] * x + m[3] * y + m[6];\r\n        this.y = m[1] * x + m[4] * y + m[7];\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Transform this Vector with the given Matrix.\r\n     *\r\n     * @method Phaser.Math.Vector2#transformMat4\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Math.Matrix4} mat - The Matrix4 to transform this Vector2 with.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    transformMat4: function (mat)\r\n    {\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var m = mat.val;\r\n\r\n        this.x = m[0] * x + m[4] * y + m[12];\r\n        this.y = m[1] * x + m[5] * y + m[13];\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Make this Vector the zero vector (0, 0).\r\n     *\r\n     * @method Phaser.Math.Vector2#reset\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    reset: function ()\r\n    {\r\n        this.x = 0;\r\n        this.y = 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Limit the length (or magnitude) of this Vector.\r\n     *\r\n     * @method Phaser.Math.Vector2#limit\r\n     * @since 3.23.0\r\n     *\r\n     * @param {number} max - The maximum length.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    limit: function (max)\r\n    {\r\n        var len = this.length();\r\n\r\n        if (len && len > max)\r\n        {\r\n            this.scale(max / len);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Reflect this Vector off a line defined by a normal.\r\n     *\r\n     * @method Phaser.Math.Vector2#reflect\r\n     * @since 3.23.0\r\n     *\r\n     * @param {Phaser.Math.Vector2} normal - A vector perpendicular to the line.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    reflect: function (normal)\r\n    {\r\n        normal = normal.clone().normalize();\r\n\r\n        return this.subtract(normal.scale(2 * this.dot(normal)));\r\n    },\r\n\r\n    /**\r\n     * Reflect this Vector across another.\r\n     *\r\n     * @method Phaser.Math.Vector2#mirror\r\n     * @since 3.23.0\r\n     *\r\n     * @param {Phaser.Math.Vector2} axis - A vector to reflect across.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    mirror: function (axis)\r\n    {\r\n        return this.reflect(axis).negate();\r\n    },\r\n\r\n    /**\r\n     * Rotate this Vector by an angle amount.\r\n     *\r\n     * @method Phaser.Math.Vector2#rotate\r\n     * @since 3.23.0\r\n     *\r\n     * @param {number} delta - The angle to rotate by, in radians.\r\n     *\r\n     * @return {Phaser.Math.Vector2} This Vector2.\r\n     */\r\n    rotate: function (delta)\r\n    {\r\n        var cos = Math.cos(delta);\r\n        var sin = Math.sin(delta);\r\n\r\n        return this.set(cos * this.x - sin * this.y, sin * this.x + cos * this.y);\r\n    }\r\n\r\n});\r\n\r\n/**\r\n * A static zero Vector2 for use by reference.\r\n *\r\n * This constant is meant for comparison operations and should not be modified directly.\r\n *\r\n * @constant\r\n * @name Phaser.Math.Vector2.ZERO\r\n * @type {Phaser.Math.Vector2}\r\n * @since 3.1.0\r\n */\r\nVector2.ZERO = new Vector2();\r\n\r\n/**\r\n * A static right Vector2 for use by reference.\r\n *\r\n * This constant is meant for comparison operations and should not be modified directly.\r\n *\r\n * @constant\r\n * @name Phaser.Math.Vector2.RIGHT\r\n * @type {Phaser.Math.Vector2}\r\n * @since 3.16.0\r\n */\r\nVector2.RIGHT = new Vector2(1, 0);\r\n\r\n/**\r\n * A static left Vector2 for use by reference.\r\n *\r\n * This constant is meant for comparison operations and should not be modified directly.\r\n *\r\n * @constant\r\n * @name Phaser.Math.Vector2.LEFT\r\n * @type {Phaser.Math.Vector2}\r\n * @since 3.16.0\r\n */\r\nVector2.LEFT = new Vector2(-1, 0);\r\n\r\n/**\r\n * A static up Vector2 for use by reference.\r\n *\r\n * This constant is meant for comparison operations and should not be modified directly.\r\n *\r\n * @constant\r\n * @name Phaser.Math.Vector2.UP\r\n * @type {Phaser.Math.Vector2}\r\n * @since 3.16.0\r\n */\r\nVector2.UP = new Vector2(0, -1);\r\n\r\n/**\r\n * A static down Vector2 for use by reference.\r\n *\r\n * This constant is meant for comparison operations and should not be modified directly.\r\n *\r\n * @constant\r\n * @name Phaser.Math.Vector2.DOWN\r\n * @type {Phaser.Math.Vector2}\r\n * @since 3.16.0\r\n */\r\nVector2.DOWN = new Vector2(0, 1);\r\n\r\n/**\r\n * A static one Vector2 for use by reference.\r\n *\r\n * This constant is meant for comparison operations and should not be modified directly.\r\n *\r\n * @constant\r\n * @name Phaser.Math.Vector2.ONE\r\n * @type {Phaser.Math.Vector2}\r\n * @since 3.16.0\r\n */\r\nVector2.ONE = new Vector2(1, 1);\r\n\r\nmodule.exports = Vector2;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Wrap the given `value` between `min` and `max.\r\n *\r\n * @function Phaser.Math.Wrap\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to wrap.\r\n * @param {number} min - The minimum value.\r\n * @param {number} max - The maximum value.\r\n *\r\n * @return {number} The wrapped value.\r\n */\r\nvar Wrap = function (value, min, max)\r\n{\r\n    var range = max - min;\r\n\r\n    return (min + ((((value - min) % range) + range) % range));\r\n};\r\n\r\nmodule.exports = Wrap;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MathWrap = require('../Wrap');\r\n\r\n/**\r\n * Wrap an angle.\r\n *\r\n * Wraps the angle to a value in the range of -PI to PI.\r\n *\r\n * @function Phaser.Math.Angle.Wrap\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to wrap, in radians.\r\n *\r\n * @return {number} The wrapped angle, in radians.\r\n */\r\nvar Wrap = function (angle)\r\n{\r\n    return MathWrap(angle, -Math.PI, Math.PI);\r\n};\r\n\r\nmodule.exports = Wrap;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Wrap = require('../Wrap');\r\n\r\n/**\r\n * Wrap an angle in degrees.\r\n *\r\n * Wraps the angle to a value in the range of -180 to 180.\r\n *\r\n * @function Phaser.Math.Angle.WrapDegrees\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to wrap, in degrees.\r\n *\r\n * @return {number} The wrapped angle, in degrees.\r\n */\r\nvar WrapDegrees = function (angle)\r\n{\r\n    return Wrap(angle, -180, 180);\r\n};\r\n\r\nmodule.exports = WrapDegrees;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MATH_CONST = {\r\n\r\n    /**\r\n     * The value of PI * 2.\r\n     * \r\n     * @name Phaser.Math.PI2\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PI2: Math.PI * 2,\r\n\r\n    /**\r\n     * The value of PI * 0.5.\r\n     * \r\n     * @name Phaser.Math.TAU\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    TAU: Math.PI * 0.5,\r\n\r\n    /**\r\n     * An epsilon value (1.0e-6)\r\n     * \r\n     * @name Phaser.Math.EPSILON\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    EPSILON: 1.0e-6,\r\n\r\n    /**\r\n     * For converting degrees to radians (PI / 180)\r\n     * \r\n     * @name Phaser.Math.DEG_TO_RAD\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    DEG_TO_RAD: Math.PI / 180,\r\n\r\n    /**\r\n     * For converting radians to degrees (180 / PI)\r\n     * \r\n     * @name Phaser.Math.RAD_TO_DEG\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    RAD_TO_DEG: 180 / Math.PI,\r\n\r\n    /**\r\n     * An instance of the Random Number Generator.\r\n     * This is not set until the Game boots.\r\n     * \r\n     * @name Phaser.Math.RND\r\n     * @type {Phaser.Math.RandomDataGenerator}\r\n     * @since 3.0.0\r\n     */\r\n    RND: null,\r\n\r\n    /**\r\n     * The minimum safe integer this browser supports.\r\n     * We use a const for backward compatibility with Internet Explorer.\r\n     * \r\n     * @name Phaser.Math.MIN_SAFE_INTEGER\r\n     * @type {number}\r\n     * @since 3.21.0\r\n     */\r\n    MIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER || -9007199254740991,\r\n\r\n    /**\r\n     * The maximum safe integer this browser supports.\r\n     * We use a const for backward compatibility with Internet Explorer.\r\n     * \r\n     * @name Phaser.Math.MAX_SAFE_INTEGER\r\n     * @type {number}\r\n     * @since 3.21.0\r\n     */\r\n    MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991\r\n\r\n};\r\n\r\nmodule.exports = MATH_CONST;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Check whether the given values are fuzzily equal.\r\n *\r\n * Two numbers are fuzzily equal if their difference is less than `epsilon`.\r\n *\r\n * @function Phaser.Math.Fuzzy.Equal\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first value.\r\n * @param {number} b - The second value.\r\n * @param {number} [epsilon=0.0001] - The epsilon.\r\n *\r\n * @return {boolean} `true` if the values are fuzzily equal, otherwise `false`.\r\n */\r\nvar Equal = function (a, b, epsilon)\r\n{\r\n    if (epsilon === undefined) { epsilon = 0.0001; }\r\n\r\n    return Math.abs(a - b) < epsilon;\r\n};\r\n\r\nmodule.exports = Equal;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Phaser Blend Modes.\r\n * \r\n * @namespace Phaser.BlendModes\r\n * @since 3.0.0\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    /**\r\n     * Skips the Blend Mode check in the renderer.\r\n     * \r\n     * @name Phaser.BlendModes.SKIP_CHECK\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    SKIP_CHECK: -1,\r\n\r\n    /**\r\n     * Normal blend mode. For Canvas and WebGL.\r\n     * This is the default setting and draws new shapes on top of the existing canvas content.\r\n     * \r\n     * @name Phaser.BlendModes.NORMAL\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    NORMAL: 0,\r\n\r\n    /**\r\n     * Add blend mode. For Canvas and WebGL.\r\n     * Where both shapes overlap the color is determined by adding color values.\r\n     * \r\n     * @name Phaser.BlendModes.ADD\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    ADD: 1,\r\n\r\n    /**\r\n     * Multiply blend mode. For Canvas and WebGL.\r\n     * The pixels are of the top layer are multiplied with the corresponding pixel of the bottom layer. A darker picture is the result.\r\n     * \r\n     * @name Phaser.BlendModes.MULTIPLY\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    MULTIPLY: 2,\r\n\r\n    /**\r\n     * Screen blend mode. For Canvas and WebGL.\r\n     * The pixels are inverted, multiplied, and inverted again. A lighter picture is the result (opposite of multiply)\r\n     * \r\n     * @name Phaser.BlendModes.SCREEN\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    SCREEN: 3,\r\n\r\n    /**\r\n     * Overlay blend mode. For Canvas only.\r\n     * A combination of multiply and screen. Dark parts on the base layer become darker, and light parts become lighter.\r\n     * \r\n     * @name Phaser.BlendModes.OVERLAY\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    OVERLAY: 4,\r\n\r\n    /**\r\n     * Darken blend mode. For Canvas only.\r\n     * Retains the darkest pixels of both layers.\r\n     * \r\n     * @name Phaser.BlendModes.DARKEN\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    DARKEN: 5,\r\n\r\n    /**\r\n     * Lighten blend mode. For Canvas only.\r\n     * Retains the lightest pixels of both layers.\r\n     * \r\n     * @name Phaser.BlendModes.LIGHTEN\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    LIGHTEN: 6,\r\n\r\n    /**\r\n     * Color Dodge blend mode. For Canvas only.\r\n     * Divides the bottom layer by the inverted top layer.\r\n     * \r\n     * @name Phaser.BlendModes.COLOR_DODGE\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    COLOR_DODGE: 7,\r\n\r\n    /**\r\n     * Color Burn blend mode. For Canvas only.\r\n     * Divides the inverted bottom layer by the top layer, and then inverts the result.\r\n     * \r\n     * @name Phaser.BlendModes.COLOR_BURN\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    COLOR_BURN: 8,\r\n\r\n    /**\r\n     * Hard Light blend mode. For Canvas only.\r\n     * A combination of multiply and screen like overlay, but with top and bottom layer swapped.\r\n     * \r\n     * @name Phaser.BlendModes.HARD_LIGHT\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    HARD_LIGHT: 9,\r\n\r\n    /**\r\n     * Soft Light blend mode. For Canvas only.\r\n     * A softer version of hard-light. Pure black or white does not result in pure black or white.\r\n     * \r\n     * @name Phaser.BlendModes.SOFT_LIGHT\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    SOFT_LIGHT: 10,\r\n\r\n    /**\r\n     * Difference blend mode. For Canvas only.\r\n     * Subtracts the bottom layer from the top layer or the other way round to always get a positive value.\r\n     * \r\n     * @name Phaser.BlendModes.DIFFERENCE\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    DIFFERENCE: 11,\r\n\r\n    /**\r\n     * Exclusion blend mode. For Canvas only.\r\n     * Like difference, but with lower contrast.\r\n     * \r\n     * @name Phaser.BlendModes.EXCLUSION\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    EXCLUSION: 12,\r\n\r\n    /**\r\n     * Hue blend mode. For Canvas only.\r\n     * Preserves the luma and chroma of the bottom layer, while adopting the hue of the top layer.\r\n     * \r\n     * @name Phaser.BlendModes.HUE\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    HUE: 13,\r\n\r\n    /**\r\n     * Saturation blend mode. For Canvas only.\r\n     * Preserves the luma and hue of the bottom layer, while adopting the chroma of the top layer.\r\n     * \r\n     * @name Phaser.BlendModes.SATURATION\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    SATURATION: 14,\r\n\r\n    /**\r\n     * Color blend mode. For Canvas only.\r\n     * Preserves the luma of the bottom layer, while adopting the hue and chroma of the top layer.\r\n     * \r\n     * @name Phaser.BlendModes.COLOR\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    COLOR: 15,\r\n\r\n    /**\r\n     * Luminosity blend mode. For Canvas only.\r\n     * Preserves the hue and chroma of the bottom layer, while adopting the luma of the top layer.\r\n     * \r\n     * @name Phaser.BlendModes.LUMINOSITY\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    LUMINOSITY: 16,\r\n\r\n    /**\r\n     * Alpha erase blend mode. For Canvas and WebGL.\r\n     * \r\n     * @name Phaser.BlendModes.ERASE\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    ERASE: 17,\r\n\r\n    /**\r\n     * Source-in blend mode. For Canvas only.\r\n     * The new shape is drawn only where both the new shape and the destination canvas overlap. Everything else is made transparent.\r\n     * \r\n     * @name Phaser.BlendModes.SOURCE_IN\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    SOURCE_IN: 18,\r\n\r\n    /**\r\n     * Source-out blend mode. For Canvas only.\r\n     * The new shape is drawn where it doesn't overlap the existing canvas content.\r\n     * \r\n     * @name Phaser.BlendModes.SOURCE_OUT\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    SOURCE_OUT: 19,\r\n\r\n    /**\r\n     * Source-out blend mode. For Canvas only.\r\n     * The new shape is only drawn where it overlaps the existing canvas content.\r\n     * \r\n     * @name Phaser.BlendModes.SOURCE_ATOP\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    SOURCE_ATOP: 20,\r\n\r\n    /**\r\n     * Destination-over blend mode. For Canvas only.\r\n     * New shapes are drawn behind the existing canvas content.\r\n     * \r\n     * @name Phaser.BlendModes.DESTINATION_OVER\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    DESTINATION_OVER: 21,\r\n\r\n    /**\r\n     * Destination-in blend mode. For Canvas only.\r\n     * The existing canvas content is kept where both the new shape and existing canvas content overlap. Everything else is made transparent.\r\n     * \r\n     * @name Phaser.BlendModes.DESTINATION_IN\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    DESTINATION_IN: 22,\r\n\r\n    /**\r\n     * Destination-out blend mode. For Canvas only.\r\n     * The existing content is kept where it doesn't overlap the new shape.\r\n     * \r\n     * @name Phaser.BlendModes.DESTINATION_OUT\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    DESTINATION_OUT: 23,\r\n\r\n    /**\r\n     * Destination-out blend mode. For Canvas only.\r\n     * The existing canvas is only kept where it overlaps the new shape. The new shape is drawn behind the canvas content.\r\n     * \r\n     * @name Phaser.BlendModes.DESTINATION_ATOP\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    DESTINATION_ATOP: 24,\r\n\r\n    /**\r\n     * Lighten blend mode. For Canvas only.\r\n     * Where both shapes overlap the color is determined by adding color values.\r\n     * \r\n     * @name Phaser.BlendModes.LIGHTER\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    LIGHTER: 25,\r\n\r\n    /**\r\n     * Copy blend mode. For Canvas only.\r\n     * Only the new shape is shown.\r\n     * \r\n     * @name Phaser.BlendModes.COPY\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    COPY: 26,\r\n\r\n    /**\r\n     * Xor blend mode. For Canvas only.\r\n     * Shapes are made transparent where both overlap and drawn normal everywhere else.\r\n     * \r\n     * @name Phaser.BlendModes.XOR\r\n     * @type {number}\r\n     * @const\r\n     * @since 3.0.0\r\n     */\r\n    XOR: 27\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Post-Render Event.\r\n *\r\n * This event is dispatched by the Renderer when all rendering, for all cameras in all Scenes,\r\n * has completed, but before any pending snap shots have been taken.\r\n *\r\n * @event Phaser.Renderer.Events#POST_RENDER\r\n * @since 3.50.0\r\n */\r\nmodule.exports = 'postrender';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Pre-Render Event.\r\n *\r\n * This event is dispatched by the Phaser Renderer. This happens right at the start of the render\r\n * process, after the context has been cleared, the scissors enabled (WebGL only) and everything has been\r\n * reset ready for the render.\r\n *\r\n * @event Phaser.Renderer.Events#PRE_RENDER\r\n * @since 3.50.0\r\n */\r\nmodule.exports = 'prerender';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Render Event.\r\n *\r\n * This event is dispatched by the Phaser Renderer for every camera in every Scene.\r\n *\r\n * It is dispatched before any of the children in the Scene have been rendered.\r\n *\r\n * @event Phaser.Renderer.Events#RENDER\r\n * @since 3.50.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene being rendered.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Scene Camera being rendered.\r\n */\r\nmodule.exports = 'render';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * The Renderer Resize Event.\r\n *\r\n * This event is dispatched by the Phaser Renderer when it is resized, usually as a result\r\n * of the Scale Manager resizing.\r\n *\r\n * @event Phaser.Renderer.Events#RESIZE\r\n * @since 3.50.0\r\n *\r\n * @param {number} width - The new width of the renderer.\r\n * @param {number} height - The new height of the renderer.\r\n */\r\nmodule.exports = 'resize';\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Renderer.Events\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    POST_RENDER: require('./POST_RENDER_EVENT'),\r\n    PRE_RENDER: require('./PRE_RENDER_EVENT'),\r\n    RENDER: require('./RENDER_EVENT'),\r\n    RESIZE: require('./RESIZE_EVENT')\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar PIPELINE_CONST = {\r\n\r\n    /**\r\n     * The Bitmap Mask Pipeline.\r\n     *\r\n     * @name Phaser.Renderer.WebGL.Pipelines.BITMAPMASK_PIPELINE\r\n     * @type {string}\r\n     * @const\r\n     * @since 3.50.0\r\n     */\r\n    BITMAPMASK_PIPELINE: 'BitmapMaskPipeline',\r\n\r\n    /**\r\n     * The Light 2D Pipeline.\r\n     *\r\n     * @name Phaser.Renderer.WebGL.Pipelines.LIGHT_PIPELINE\r\n     * @type {string}\r\n     * @const\r\n     * @since 3.50.0\r\n     */\r\n    LIGHT_PIPELINE: 'Light2D',\r\n\r\n    /**\r\n     * The Point Light Pipeline.\r\n     *\r\n     * @name Phaser.Renderer.WebGL.Pipelines.POINTLIGHT_PIPELINE\r\n     * @type {string}\r\n     * @const\r\n     * @since 3.50.0\r\n     */\r\n    POINTLIGHT_PIPELINE: 'PointLightPipeline',\r\n\r\n    /**\r\n     * The Single Texture Pipeline.\r\n     *\r\n     * @name Phaser.Renderer.WebGL.Pipelines.SINGLE_PIPELINE\r\n     * @type {string}\r\n     * @const\r\n     * @since 3.50.0\r\n     */\r\n    SINGLE_PIPELINE: 'SinglePipeline',\r\n\r\n    /**\r\n     * The Multi Texture Pipeline.\r\n     *\r\n     * @name Phaser.Renderer.WebGL.Pipelines.MULTI_PIPELINE\r\n     * @type {string}\r\n     * @const\r\n     * @since 3.50.0\r\n     */\r\n    MULTI_PIPELINE: 'MultiPipeline',\r\n\r\n    /**\r\n     * The Rope Pipeline.\r\n     *\r\n     * @name Phaser.Renderer.WebGL.Pipelines.ROPE_PIPELINE\r\n     * @type {string}\r\n     * @const\r\n     * @since 3.50.0\r\n     */\r\n    ROPE_PIPELINE: 'RopePipeline',\r\n\r\n    /**\r\n     * The Graphics and Shapes Pipeline.\r\n     *\r\n     * @name Phaser.Renderer.WebGL.Pipelines.GRAPHICS_PIPELINE\r\n     * @type {string}\r\n     * @const\r\n     * @since 3.50.0\r\n     */\r\n    GRAPHICS_PIPELINE: 'GraphicsPipeline',\r\n\r\n    /**\r\n     * The Post FX Pipeline.\r\n     *\r\n     * @name Phaser.Renderer.WebGL.Pipelines.POSTFX_PIPELINE\r\n     * @type {string}\r\n     * @const\r\n     * @since 3.50.0\r\n     */\r\n    POSTFX_PIPELINE: 'PostFXPipeline',\r\n\r\n    /**\r\n     * The Utility Pipeline.\r\n     *\r\n     * @name Phaser.Renderer.WebGL.Pipelines.UTILITY_PIPELINE\r\n     * @type {string}\r\n     * @const\r\n     * @since 3.50.0\r\n     */\r\n    UTILITY_PIPELINE: 'UtilityPipeline'\r\n};\r\n\r\nmodule.exports = PIPELINE_CONST;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Retrieves the value of the given key from an object.\r\n *\r\n * @function Phaser.Tweens.Builders.GetBoolean\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The key to look for in the `source` object.\r\n * @param {*} defaultValue - The default value to return if the `key` doesn't exist or if no `source` object is provided.\r\n *\r\n * @return {*} The retrieved value.\r\n */\r\nvar GetBoolean = function (source, key, defaultValue)\r\n{\r\n    if (!source)\r\n    {\r\n        return defaultValue;\r\n    }\r\n    else if (source.hasOwnProperty(key))\r\n    {\r\n        return source[key];\r\n    }\r\n    else\r\n    {\r\n        return defaultValue;\r\n    }\r\n};\r\n\r\nmodule.exports = GetBoolean;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar TWEEN_CONST = {\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.CREATED\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    CREATED: 0,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.INIT\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    INIT: 1,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.DELAY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    DELAY: 2,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.OFFSET_DELAY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    OFFSET_DELAY: 3,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.PENDING_RENDER\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PENDING_RENDER: 4,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.PLAYING_FORWARD\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PLAYING_FORWARD: 5,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.PLAYING_BACKWARD\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PLAYING_BACKWARD: 6,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.HOLD_DELAY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    HOLD_DELAY: 7,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.REPEAT_DELAY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    REPEAT_DELAY: 8,\r\n\r\n    /**\r\n     * TweenData state.\r\n     * \r\n     * @name Phaser.Tweens.COMPLETE\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    COMPLETE: 9,\r\n\r\n    //  Tween specific (starts from 20 to cleanly allow extra TweenData consts in the future)\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.PENDING_ADD\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PENDING_ADD: 20,\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.PAUSED\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PAUSED: 21,\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.LOOP_DELAY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    LOOP_DELAY: 22,\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.ACTIVE\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    ACTIVE: 23,\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.COMPLETE_DELAY\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    COMPLETE_DELAY: 24,\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.PENDING_REMOVE\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PENDING_REMOVE: 25,\r\n\r\n    /**\r\n     * Tween state.\r\n     * \r\n     * @name Phaser.Tweens.REMOVED\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    REMOVED: 26\r\n\r\n};\r\n\r\nmodule.exports = TWEEN_CONST;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  Taken from klasse by mattdesl https://github.com/mattdesl/klasse\r\n\r\nfunction hasGetterOrSetter (def)\r\n{\r\n    return (!!def.get && typeof def.get === 'function') || (!!def.set && typeof def.set === 'function');\r\n}\r\n\r\nfunction getProperty (definition, k, isClassDescriptor)\r\n{\r\n    //  This may be a lightweight object, OR it might be a property that was defined previously.\r\n\r\n    //  For simple class descriptors we can just assume its NOT previously defined.\r\n    var def = (isClassDescriptor) ? definition[k] : Object.getOwnPropertyDescriptor(definition, k);\r\n\r\n    if (!isClassDescriptor && def.value && typeof def.value === 'object')\r\n    {\r\n        def = def.value;\r\n    }\r\n\r\n    //  This might be a regular property, or it may be a getter/setter the user defined in a class.\r\n    if (def && hasGetterOrSetter(def))\r\n    {\r\n        if (typeof def.enumerable === 'undefined')\r\n        {\r\n            def.enumerable = true;\r\n        }\r\n\r\n        if (typeof def.configurable === 'undefined')\r\n        {\r\n            def.configurable = true;\r\n        }\r\n\r\n        return def;\r\n    }\r\n    else\r\n    {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction hasNonConfigurable (obj, k)\r\n{\r\n    var prop = Object.getOwnPropertyDescriptor(obj, k);\r\n\r\n    if (!prop)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    if (prop.value && typeof prop.value === 'object')\r\n    {\r\n        prop = prop.value;\r\n    }\r\n\r\n    if (prop.configurable === false)\r\n    {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * Extends the given `myClass` object's prototype with the properties of `definition`.\r\n *\r\n * @function extend\r\n * @ignore\r\n * @param {Object} ctor The constructor object to mix into.\r\n * @param {Object} definition A dictionary of functions for the class.\r\n * @param {boolean} isClassDescriptor Is the definition a class descriptor?\r\n * @param {Object} [extend] The parent constructor object.\r\n */\r\nfunction extend (ctor, definition, isClassDescriptor, extend)\r\n{\r\n    for (var k in definition)\r\n    {\r\n        if (!definition.hasOwnProperty(k))\r\n        {\r\n            continue;\r\n        }\r\n\r\n        var def = getProperty(definition, k, isClassDescriptor);\r\n\r\n        if (def !== false)\r\n        {\r\n            //  If Extends is used, we will check its prototype to see if the final variable exists.\r\n\r\n            var parent = extend || ctor;\r\n\r\n            if (hasNonConfigurable(parent.prototype, k))\r\n            {\r\n                //  Just skip the final property\r\n                if (Class.ignoreFinals)\r\n                {\r\n                    continue;\r\n                }\r\n\r\n                //  We cannot re-define a property that is configurable=false.\r\n                //  So we will consider them final and throw an error. This is by\r\n                //  default so it is clear to the developer what is happening.\r\n                //  You can set ignoreFinals to true if you need to extend a class\r\n                //  which has configurable=false; it will simply not re-define final properties.\r\n                throw new Error('cannot override final property \\'' + k + '\\', set Class.ignoreFinals = true to skip');\r\n            }\r\n\r\n            Object.defineProperty(ctor.prototype, k, def);\r\n        }\r\n        else\r\n        {\r\n            ctor.prototype[k] = definition[k];\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Applies the given `mixins` to the prototype of `myClass`.\r\n *\r\n * @function mixin\r\n * @ignore\r\n * @param {Object} myClass The constructor object to mix into.\r\n * @param {Object|Array<Object>} mixins The mixins to apply to the constructor.\r\n */\r\nfunction mixin (myClass, mixins)\r\n{\r\n    if (!mixins)\r\n    {\r\n        return;\r\n    }\r\n\r\n    if (!Array.isArray(mixins))\r\n    {\r\n        mixins = [ mixins ];\r\n    }\r\n\r\n    for (var i = 0; i < mixins.length; i++)\r\n    {\r\n        extend(myClass, mixins[i].prototype || mixins[i]);\r\n    }\r\n}\r\n\r\n/**\r\n * Creates a new class with the given descriptor.\r\n * The constructor, defined by the name `initialize`,\r\n * is an optional function. If unspecified, an anonymous\r\n * function will be used which calls the parent class (if\r\n * one exists).\r\n *\r\n * You can also use `Extends` and `Mixins` to provide subclassing\r\n * and inheritance.\r\n *\r\n * @class Phaser.Class\r\n * @constructor\r\n * @param {Object} definition a dictionary of functions for the class\r\n * @example\r\n *\r\n *      var MyClass = new Phaser.Class({\r\n *\r\n *          initialize: function() {\r\n *              this.foo = 2.0;\r\n *          },\r\n *\r\n *          bar: function() {\r\n *              return this.foo + 5;\r\n *          }\r\n *      });\r\n */\r\nfunction Class (definition)\r\n{\r\n    if (!definition)\r\n    {\r\n        definition = {};\r\n    }\r\n\r\n    //  The variable name here dictates what we see in Chrome debugger\r\n    var initialize;\r\n    var Extends;\r\n\r\n    if (definition.initialize)\r\n    {\r\n        if (typeof definition.initialize !== 'function')\r\n        {\r\n            throw new Error('initialize must be a function');\r\n        }\r\n\r\n        initialize = definition.initialize;\r\n\r\n        //  Usually we should avoid 'delete' in V8 at all costs.\r\n        //  However, its unlikely to make any performance difference\r\n        //  here since we only call this on class creation (i.e. not object creation).\r\n        delete definition.initialize;\r\n    }\r\n    else if (definition.Extends)\r\n    {\r\n        var base = definition.Extends;\r\n\r\n        initialize = function ()\r\n        {\r\n            base.apply(this, arguments);\r\n        };\r\n    }\r\n    else\r\n    {\r\n        initialize = function () {};\r\n    }\r\n\r\n    if (definition.Extends)\r\n    {\r\n        initialize.prototype = Object.create(definition.Extends.prototype);\r\n        initialize.prototype.constructor = initialize;\r\n\r\n        //  For getOwnPropertyDescriptor to work, we need to act directly on the Extends (or Mixin)\r\n\r\n        Extends = definition.Extends;\r\n\r\n        delete definition.Extends;\r\n    }\r\n    else\r\n    {\r\n        initialize.prototype.constructor = initialize;\r\n    }\r\n\r\n    //  Grab the mixins, if they are specified...\r\n    var mixins = null;\r\n\r\n    if (definition.Mixins)\r\n    {\r\n        mixins = definition.Mixins;\r\n        delete definition.Mixins;\r\n    }\r\n\r\n    //  First, mixin if we can.\r\n    mixin(initialize, mixins);\r\n\r\n    //  Now we grab the actual definition which defines the overrides.\r\n    extend(initialize, definition, true, Extends);\r\n\r\n    return initialize;\r\n}\r\n\r\nClass.extend = extend;\r\nClass.mixin = mixin;\r\nClass.ignoreFinals = false;\r\n\r\nmodule.exports = Class;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Removes a single item from an array and returns it without creating gc, like the native splice does.\r\n * Based on code by Mike Reinstein.\r\n *\r\n * @function Phaser.Utils.Array.SpliceOne\r\n * @since 3.0.0\r\n *\r\n * @param {array} array - The array to splice from.\r\n * @param {number} index - The index of the item which should be spliced.\r\n *\r\n * @return {*} The item which was spliced (removed).\r\n */\r\nvar SpliceOne = function (array, index)\r\n{\r\n    if (index >= array.length)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var len = array.length - 1;\r\n\r\n    var item = array[index];\r\n\r\n    for (var i = index; i < len; i++)\r\n    {\r\n        array[i] = array[i + 1];\r\n    }\r\n\r\n    array.length = len;\r\n\r\n    return item;\r\n};\r\n\r\nmodule.exports = SpliceOne;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Deep Copy the given object or array.\r\n *\r\n * @function Phaser.Utils.Objects.DeepCopy\r\n * @since 3.50.0\r\n *\r\n * @param {object} obj - The object to deep copy.\r\n *\r\n * @return {object} A deep copy of the original object.\r\n */\r\nvar DeepCopy = function (inObject)\r\n{\r\n    var outObject;\r\n    var value;\r\n    var key;\r\n\r\n    if (typeof inObject !== 'object' || inObject === null)\r\n    {\r\n        //  inObject is not an object\r\n        return inObject;\r\n    }\r\n\r\n    //  Create an array or object to hold the values\r\n    outObject = Array.isArray(inObject) ? [] : {};\r\n\r\n    for (key in inObject)\r\n    {\r\n        value = inObject[key];\r\n\r\n        //  Recursively (deep) copy for nested objects, including arrays\r\n        outObject[key] = DeepCopy(value);\r\n    }\r\n\r\n    return outObject;\r\n};\r\n\r\nmodule.exports = DeepCopy;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n//  Source object\r\n//  The key as a string, or an array of keys, i.e. 'banner', or 'banner.hideBanner'\r\n//  The default value to use if the key doesn't exist\r\n\r\n/**\r\n * Retrieves a value from an object.\r\n *\r\n * @function Phaser.Utils.Objects.GetValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The name of the property to retrieve from the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`) - `banner.hideBanner` would return the value of the `hideBanner` property from the object stored in the `banner` property of the `source` object.\r\n * @param {*} defaultValue - The value to return if the `key` isn't found in the `source` object.\r\n *\r\n * @return {*} The value of the requested key.\r\n */\r\nvar GetValue = function (source, key, defaultValue)\r\n{\r\n    if (!source || typeof source === 'number')\r\n    {\r\n        return defaultValue;\r\n    }\r\n    else if (source.hasOwnProperty(key))\r\n    {\r\n        return source[key];\r\n    }\r\n    else if (key.indexOf('.') !== -1)\r\n    {\r\n        var keys = key.split('.');\r\n        var parent = source;\r\n        var value = defaultValue;\r\n\r\n        //  Use for loop here so we can break early\r\n        for (var i = 0; i < keys.length; i++)\r\n        {\r\n            if (parent.hasOwnProperty(keys[i]))\r\n            {\r\n                //  Yes it has a key property, let's carry on down\r\n                value = parent[keys[i]];\r\n\r\n                parent = parent[keys[i]];\r\n            }\r\n            else\r\n            {\r\n                //  Can't go any further, so reset to default\r\n                value = defaultValue;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n    else\r\n    {\r\n        return defaultValue;\r\n    }\r\n};\r\n\r\nmodule.exports = GetValue;\r\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","export const renderers = ['auto', 'canvas', 'webgl'] as const;\n\nexport type Renderer = typeof renderers[number];\n\ntype Demo = (config: Phaser.Types.Core.GameConfig) => void;\n\nexport function demoHandlerFactory(demo: Demo) {\n  return async function demoHandler(renderer: Renderer, measure: string, advanced: boolean) {\n    const { phaserFactory } = await import(/* webpackChunkName: \"phaser\" */ './phaser');\n    await phaserFactory();\n\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { GlyphPlugin } = require('../src');\n\n    await demo({\n      type: renderer === 'auto' ? Phaser.AUTO : renderer === 'canvas' ? Phaser.CANVAS : Phaser.WEBGL,\n      parent: 'body',\n      dom: {\n        createContainer: false,\n        behindCanvas: false,\n        pointerEvents: undefined\n      },\n      scale: {\n        mode: Phaser.Scale.NONE,\n        autoCenter: Phaser.Scale.CENTER_BOTH,\n        width: 800,\n        height: 600\n      },\n      plugins: {\n        global: [\n          {\n            key: 'GlyphPlugin',\n            plugin: GlyphPlugin,\n            mapping: 'glyph',\n            start: true,\n            data: { advancedTextMetrics: advanced, measurementCh: measure }\n          }\n        ]\n      },\n      scene: []\n    });\n  };\n}\n\nexport function getParams() {\n  return Object.fromEntries(new URLSearchParams(window.location.search).entries());\n}\n","/**\n * Glyph plugin game object module.\n *\n * @author kidthales <kidthales@agogpixel.com>\n * @copyright 2021-present AgogPixel\n * @license {@link https://agogpixel.github.io/phaser3-glyph-plugin/LICENSE|MIT License}\n * @module\n */\n\nimport {\n  Alpha,\n  BlendMode,\n  Depth,\n  Flip,\n  GetBounds,\n  Origin,\n  Pipeline,\n  ScrollFactor,\n  Transform,\n  Visible\n} from '@agogpixel/phaser3-ts-utils/mixins/gameobjects/components';\nimport { CustomGameObject } from '@agogpixel/phaser3-ts-utils/mixins/gameobjects/custom-gameobject';\n\nimport { GlyphPlugin, GlyphPluginEvent } from '../plugin';\nimport { Font } from '../shared';\n\n/**\n * Glyph plugin game object WebGL renderer type.\n * @internal\n */\nexport type GlyphPluginGameObjectWebGLRenderer<T extends GlyphPluginGameObject = GlyphPluginGameObject> = (\n  renderer: Phaser.Renderer.WebGL.WebGLRenderer,\n  src: T,\n  camera: Phaser.Cameras.Scene2D.Camera,\n  parentMatrix?: Phaser.GameObjects.Components.TransformMatrix\n) => void;\n\n/**\n * Glyph plugin game object canvas renderer type.\n * @internal\n */\nexport type GlyphPluginGameObjectCanvasRenderer<T extends GlyphPluginGameObject = GlyphPluginGameObject> = (\n  renderer: Phaser.Renderer.Canvas.CanvasRenderer,\n  src: T,\n  camera: Phaser.Cameras.Scene2D.Camera,\n  parentMatrix?: Phaser.GameObjects.Components.TransformMatrix\n) => void;\n\n/**\n * Glyph plugin game object configuration.\n */\nexport interface GlyphPluginGameObjectConfig extends Phaser.Types.GameObjects.GameObjectConfig {\n  /**\n   * Font.\n   */\n  font?: Font;\n\n  /**\n   * Force square ratio?\n   */\n  forceSquareRatio?: boolean;\n\n  /**\n   * Glyph plugin key.\n   */\n  pluginKey?: string;\n}\n\n/**\n * Default font.\n * @internal\n */\nconst defaultFont = new Font(24, 'monospace');\n\n/**\n * Base game object with glyph plugin functionality.\n */\nexport class GlyphPluginGameObject extends CustomGameObject(\n  false,\n  Alpha,\n  BlendMode,\n  Depth,\n  Flip,\n  GetBounds,\n  Origin,\n  Pipeline,\n  ScrollFactor,\n  Transform,\n  Visible\n) {\n  /**\n   * Glyph plugin game object WebGL renderer.\n   * @protected\n   * @internal\n   */\n  readonly renderWebGL: GlyphPluginGameObjectWebGLRenderer = Phaser.Utils.NOOP;\n\n  /**\n   * Glyph plugin game object canvas renderer.\n   * @protected\n   * @internal\n   */\n  readonly renderCanvas: GlyphPluginGameObjectCanvasRenderer = Phaser.Utils.NOOP;\n\n  /**\n   * Track current font.\n   * @protected\n   */\n  currentFont: Font;\n\n  /**\n   * Track current force square ratio flag.\n   * @protected\n   */\n  currentForceSquareRatio: boolean;\n\n  /**\n   * Track current glyph plugin.\n   * @protected\n   */\n  currentGlyphPlugin: GlyphPlugin;\n\n  /**\n   * Refresh glyph plugin game object.\n   * @returns Glyph plugin game object instance for further chaining.\n   * @protected\n   * @abstract\n   */\n  readonly refresh: () => this;\n\n  /**\n   * Get readonly reference to font.\n   */\n  get font(): Readonly<Font> {\n    return this.currentFont;\n  }\n\n  /**\n   * Set font.\n   * @see {@link GlyphPluginGameObject.setFont}\n   */\n  set font(value: Font) {\n    this.setFont(value);\n  }\n\n  /**\n   * Get force square ratio.\n   */\n  get forceSquareRatio() {\n    return this.currentForceSquareRatio;\n  }\n\n  /**\n   * Set force square ratio.\n   * @see {@link GlyphPluginGameObject.setForceSquareRatio}\n   */\n  set forceSquareRatio(value: boolean) {\n    this.setForceSquareRatio(value);\n  }\n\n  /**\n   * Get glyph plugin.\n   */\n  get glyphPlugin() {\n    return this.currentGlyphPlugin;\n  }\n\n  /**\n   * Set glyph plugin.\n   * @see {@link GlyphPluginGameObject.setGlyphPlugin}\n   */\n  set glyphPlugin(value: GlyphPlugin) {\n    this.setGlyphPlugin(value);\n  }\n\n  /**\n   * Instantiate glyph plugin game object.\n   * @param scene The Scene to which this Game Object belongs.\n   * @param type A textual representation of this Game Object, i.e. sprite. Used\n   * internally by Phaser but is available for your own custom classes to\n   * populate.\n   * @param x (Default: 0) World X-coordinate.\n   * @param y (Default: 0) World Y-coordinate.\n   * @param font (Optional) Font to use.\n   * @param forceSquareRatio (Default: true) Force square glyph frames/cells,\n   * using the greater of width or height of the associated glyph plugin's\n   * measurement character.\n   * @param pluginKey (Optional) Glyph plugin key.\n   */\n  constructor(\n    scene: Phaser.Scene,\n    type: string,\n    x = 0,\n    y = 0,\n    font = defaultFont,\n    forceSquareRatio = false,\n    pluginKey?: string\n  ) {\n    super(scene, type);\n\n    this.currentGlyphPlugin = GlyphPlugin.findPlugin(scene.game.plugins, pluginKey);\n    this.currentFont = Font.clone(font || defaultFont); // Group create passes null font parameter.\n    this.currentForceSquareRatio = forceSquareRatio;\n\n    this.setPosition(x, y).addGlyphPluginEventListeners().initPipeline(undefined);\n  }\n\n  /**\n   * Destroy glyph plugin game object & resources.\n   * @param fromScene (Default: false) Is Game Object is being destroyed by the\n   * Scene?\n   */\n  destroy(fromScene?: boolean) {\n    super.destroy(fromScene);\n    this.removeGlyphPluginEventListeners();\n  }\n\n  /**\n   * Set font. Refreshes glyph plugin game object.\n   * @param font Font.\n   * @returns Glyph plugin game object instance for further chaining.\n   */\n  setFont(font: Font) {\n    this.currentFont = Font.clone(font);\n    return this.refresh();\n  }\n\n  /**\n   * Set force square ratio. Refreshes glyph plugin game object.\n   * @param value (Default: true) Force square ratio flag.\n   * @returns Glyph plugin game object instance for further chaining.\n   */\n  setForceSquareRatio(value = true) {\n    this.currentForceSquareRatio = value;\n    return this.refresh();\n  }\n\n  /**\n   * Set associated glyph plugin & update event listeners. Refreshes glyph\n   * plugin game object.\n   * @param plugin Glyph plugin instance.\n   * @returns Glyph plugin game object instance for further chaining.\n   */\n  setGlyphPlugin(plugin: GlyphPlugin) {\n    this.removeGlyphPluginEventListeners();\n    this.currentGlyphPlugin = plugin;\n    return this.refresh().addGlyphPluginEventListeners();\n  }\n\n  /**\n   * Add glyph plugin event listeners.\n   * @returns Glyph plugin game object instance for further chaining.\n   * @private\n   */\n  addGlyphPluginEventListeners() {\n    if (this.currentGlyphPlugin) {\n      this.currentGlyphPlugin\n        .on(GlyphPluginEvent.Update, this.glyphPluginUpdateEventListener, this)\n        .once(GlyphPluginEvent.Destroy, this.glyphPluginDestroyEventListener, this);\n    }\n\n    return this;\n  }\n\n  /**\n   * When associated glyph plugin is destroyed, glyph plugin game object will\n   * attempt to fallback to first glyph plugin found in the plugins manager,\n   * refreshing & registering new event listeners.\n   * @throws Error if no glyph plugin is found in the plugin manager.\n   * @private\n   */\n  glyphPluginDestroyEventListener() {\n    if (!this.scene) {\n      return;\n    }\n\n    this.currentGlyphPlugin = GlyphPlugin.findPlugin(this.scene.plugins);\n    this.refresh().addGlyphPluginEventListeners();\n  }\n\n  /**\n   * When associated glyph plugin emits update event, refresh the glyph plugin\n   * game object.\n   * @private\n   */\n  glyphPluginUpdateEventListener() {\n    this.refresh();\n  }\n\n  /**\n   * Remove glyph plugin event listeners.\n   * @returns Glyph plugin game object instance for further chaining.\n   * @private\n   */\n  removeGlyphPluginEventListeners() {\n    if (this.currentGlyphPlugin) {\n      this.currentGlyphPlugin\n        .off(GlyphPluginEvent.Update, this.glyphPluginUpdateEventListener, this)\n        .off(GlyphPluginEvent.Destroy, this.glyphPluginDestroyEventListener, this, true);\n    }\n\n    return this;\n  }\n}\n","/**\n * Glyph game object module.\n *\n * @author kidthales <kidthales@agogpixel.com>\n * @copyright 2021-present AgogPixel\n * @license {@link https://agogpixel.github.io/phaser3-glyph-plugin/LICENSE|MIT License}\n * @module\n */\n\ndeclare const WEBGL_RENDERER: unknown;\ndeclare const CANVAS_RENDERER: unknown;\n\nimport { Mask, Size, TextureCrop, Tint } from '@agogpixel/phaser3-ts-utils/mixins/gameobjects/components';\n\nimport { Font, GlyphLike, readGlyphsFromBuffer } from '../shared';\nimport { convertHexStringToBuffer } from '../shared';\n\nimport type {\n  GlyphPluginGameObjectCanvasRenderer,\n  GlyphPluginGameObjectConfig,\n  GlyphPluginGameObjectWebGLRenderer\n} from './glyph-plugin-gameobject';\nimport { GlyphPluginGameObject } from './glyph-plugin-gameobject';\n\n/**\n * Glyph factory type.\n */\nexport type GlyphFactory = (\n  ...args: ConstructorParameters<typeof Glyph> extends [unknown, ...infer R] ? R : never\n) => Glyph;\n\n/**\n * Glyph creator type.\n */\nexport type GlyphCreator = (config?: GlyphConfig, addToScene?: boolean) => Glyph;\n\n/**\n * Glyph creator configuration.\n */\nexport interface GlyphConfig extends GlyphPluginGameObjectConfig {\n  /**\n   * Glyphlike data.\n   */\n  glyph?: GlyphLike;\n}\n\n/**\n * Glyph factory.\n * @param this Phaser GameObject factory.\n * @param args Glyph instantiation arguments.\n * @returns Glyph instance.\n * @internal\n */\nexport const glyphFactory: GlyphFactory = function glyphFactory(this: Phaser.GameObjects.GameObjectFactory, ...args) {\n  return this.displayList.add(new Glyph(this.scene, ...args)) as Glyph;\n};\n\n/**\n * Glyph creator.\n * @param this Phaser GameObject creator.\n * @param config Glyph creator configuration.\n * @param addToScene Add this Game Object to the Scene after creating it? If set\n * this argument overrides the `add` property in the config object.\n * @returns Glyph instance.\n * @internal\n */\nexport const glyphCreator: GlyphCreator = function glyphCreator(\n  this: Phaser.GameObjects.GameObjectCreator,\n  config: GlyphConfig = {},\n  addToScene?: boolean\n) {\n  const glyph = new Glyph(this.scene, 0, 0, config.glyph, config.font, config.forceSquareRatio, config.pluginKey);\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  Phaser.GameObjects.BuildGameObject(this.scene, glyph, config);\n\n  return glyph;\n};\n\n/**\n * Glyphmap WebGL renderer.\n * @internal\n */\nlet renderWebGL: GlyphPluginGameObjectWebGLRenderer<Glyph> = Phaser.Utils.NOOP;\n\n/**\n * Glyphmap canvas renderer.\n * @internal\n */\nlet renderCanvas: GlyphPluginGameObjectCanvasRenderer<Glyph> = Phaser.Utils.NOOP;\n\nif (typeof WEBGL_RENDERER) {\n  renderWebGL = (renderer, src, camera, parentMatrix) => {\n    const pipeline = renderer.pipelines.set(src.pipeline, src) as Phaser.Renderer.WebGL.Pipelines.MultiPipeline;\n    pipeline.batchSprite(src as never, camera, parentMatrix);\n  };\n}\n\nif (typeof CANVAS_RENDERER) {\n  renderCanvas = (renderer, src, camera, parentMatrix) => {\n    renderer.batchSprite(src, src.frame, camera, parentMatrix);\n  };\n}\n\n/**\n * Default glyphlike data.\n * @internal\n */\nconst defaultGlyphLike = [' ', '#0000'] as GlyphLike;\n\n/**\n * Glyph Game Object.\n */\nexport class Glyph extends Mask(Size(TextureCrop(Tint(class extends GlyphPluginGameObject {})))) {\n  /**\n   * Read the first section of glyph texture key (hex string containing ch, fg, & bg data).\n   * @param texture Texture generated by a glyph plugin.\n   * @returns Hex string containing ch, fg, & bg data.\n   */\n  private static readMinimalGlyphString(texture: Phaser.Textures.Texture) {\n    return texture.key.split(' ')[0] as `0x${string}`;\n  }\n\n  /**\n   * Canvas renderer.\n   * @protected\n   * @internal\n   */\n  readonly renderCanvas = renderCanvas;\n\n  /**\n   * WebGL renderer.\n   * @protected\n   * @internal\n   */\n  readonly renderWebGL = renderWebGL;\n\n  /**\n   * Refresh glyph texture.\n   * @returns Glyph instance for further chaining.\n   * @protected\n   */\n  readonly refresh = () => {\n    return this.setTexture(\n      this.currentGlyphPlugin['getTextureFromBuffer'](\n        convertHexStringToBuffer(Glyph.readMinimalGlyphString(this.texture)),\n        this.currentFont,\n        this.currentForceSquareRatio\n      ).key\n    ).setSizeToFrame(undefined);\n  };\n\n  /**\n   * Internal crop data object, as used by `setCrop` and passed to the `Frame.setCropUVs` method.\n   * @internal\n   */\n  protected _crop: Record<string, unknown>;\n\n  /**\n   * Get current glyph data with 'rgba' color format.\n   */\n  get glyph() {\n    return readGlyphsFromBuffer(\n      'rgba',\n      convertHexStringToBuffer(Glyph.readMinimalGlyphString(this.texture))\n    )[0] as GlyphLike;\n  }\n\n  /**\n   * Set glyph data.\n   * @see {@link Glyph.setGlyph}\n   */\n  set glyph(value: GlyphLike) {\n    this.setGlyph(value);\n  }\n\n  /**\n   * Instantiate glyph game object.\n   * @param scene The Scene to which this Game Object belongs.\n   * @param x (Default: 0) World X-coordinate.\n   * @param y (Default: 0) World Y-coordinate.\n   * @param glyph (Optional) Glyphlike data.\n   * @param font (Optional) Font to use.\n   * @param forceSquareRatio (Optional) Force square glyph frames/cells,\n   * using the greater of width or height of the associated glyph plugin's\n   * measurement character.\n   * @param pluginKey (Optional) Glyph plugin key.\n   */\n  constructor(\n    scene: Phaser.Scene,\n    x = 0,\n    y = 0,\n    glyph: GlyphLike = defaultGlyphLike,\n    font?: Font,\n    forceSquareRatio?: boolean,\n    pluginKey?: string\n  ) {\n    super(scene, 'Glyph', x, y, font, forceSquareRatio, pluginKey);\n\n    this._crop = this['resetCropObject']();\n\n    this.setGlyph(glyph || defaultGlyphLike) // Group create passes null glyph parameter.\n      .setPosition(x, y)\n      .setOriginFromFrame();\n  }\n\n  /**\n   * Set glyph. Updates texture & size.\n   * @param glyph Glyphlike data to use.\n   * @returns Reference to glyph for further chaining.\n   */\n  setGlyph(glyph: GlyphLike) {\n    return this.setTexture(\n      this.currentGlyphPlugin.getTexture([glyph], this.currentFont, this.currentForceSquareRatio).key\n    ).setSizeToFrame(undefined);\n  }\n}\n","/**\n * Glyphmap game object module.\n *\n * Derived from {@link https://github.com/photonstorm/phaser/tree/master/src/tilemaps}.\n * @copyright 2020 Photon Storm Ltd.\n * @license {@link https://opensource.org/licenses/MIT|MIT License}\n *\n * @author kidthales <kidthales@agogpixel.com>\n * @copyright 2021-present AgogPixel\n * @license {@link https://agogpixel.github.io/phaser3-glyph-plugin/LICENSE|MIT License}\n * @module\n */\n\ndeclare const WEBGL_RENDERER: unknown;\ndeclare const CANVAS_RENDERER: unknown;\n\nimport { ComputedSize } from '@agogpixel/phaser3-ts-utils/mixins/gameobjects/components/computed-size';\n\nimport { GlyphPlugin } from '../plugin';\nimport type { Font } from '../shared';\nimport { convertHexStringToBuffer, GlyphLike } from '../shared';\n\nimport type {\n  GlyphPluginGameObjectCanvasRenderer,\n  GlyphPluginGameObjectConfig,\n  GlyphPluginGameObjectWebGLRenderer\n} from './glyph-plugin-gameobject';\nimport { GlyphPluginGameObject } from './glyph-plugin-gameobject';\n\n/**\n * Glyphmap factory type.\n */\nexport type GlyphmapFactory = (\n  ...args: ConstructorParameters<typeof Glyphmap> extends [unknown, ...infer R] ? R : never\n) => Glyphmap;\n\n/**\n * Glyphmap creator type.\n */\nexport type GlyphmapCreator = (config?: GlyphmapConfig, addToScene?: boolean) => Glyphmap;\n\n/**\n * Glyphmap creator configuration.\n */\nexport interface GlyphmapConfig extends GlyphPluginGameObjectConfig {\n  /**\n   * Width in glyph cells.\n   */\n  width?: number;\n\n  /**\n   * Height in glyph cells.\n   */\n  height?: number;\n}\n\n/**\n * Glyphmap factory.\n * @param this Phaser GameObject factory.\n * @param args Glyphmap instantiation arguments.\n * @returns Glyphmap instance.\n * @internal\n */\nexport const glyphmapFactory: GlyphmapFactory = function glyphmapFactory(\n  this: Phaser.GameObjects.GameObjectFactory,\n  ...args\n) {\n  return this.displayList.add(new Glyphmap(this.scene, ...args)) as Glyphmap;\n};\n\n/**\n * Glyphmap creator.\n * @param this Phaser GameObject creator.\n * @param config Glyphmap creator configuration.\n * @param addToScene Add this Game Object to the Scene after creating it? If set\n * this argument overrides the `add` property in the config object.\n * @returns Glyphmap instance.\n * @internal\n */\nexport const glyphmapCreator: GlyphmapCreator = function glyphmapCreator(\n  this: Phaser.GameObjects.GameObjectCreator,\n  config: GlyphmapConfig = {},\n  addToScene?: boolean\n) {\n  const glyphmap = new Glyphmap(\n    this.scene,\n    0,\n    0,\n    config.width,\n    config.height,\n    config.font,\n    config.forceSquareRatio,\n    config.pluginKey\n  );\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  Phaser.GameObjects.BuildGameObject(this.scene, glyphmap, config);\n\n  return glyphmap;\n};\n\n/**\n * Used for cull bounds pass.\n * @internal\n */\nconst bounds = new Phaser.Geom.Rectangle();\n\n/**\n * Get cull bounds to potentially reduce number of cells that require rendering.\n * @param map Glyphmap instance.\n * @param camera Camera instance.\n * @returns Rectangular bounds of glyphmap that should be rendered.\n * @internal\n */\nfunction getCullBounds(map: Glyphmap, camera: Phaser.Cameras.Scene2D.Camera) {\n  if (map.skipCull || map.scrollFactorX !== 1 || map.scrollFactorY !== 1) {\n    return bounds.setTo(0, 0, map.widthInCells, map.heightInCells);\n  }\n\n  const cellW = Math.floor(map.cellWidth * map.scaleX);\n  const cellH = Math.floor(map.cellHeight * map.scaleY);\n\n  const boundsLeft = Phaser.Math.Snap.Floor(camera.worldView.x - map.x, cellW, 0, true) - map.cullPaddingX;\n  const boundsRight = Phaser.Math.Snap.Ceil(camera.worldView.right - map.x, cellW, 0, true) + map.cullPaddingX;\n\n  const boundsTop = Phaser.Math.Snap.Floor(camera.worldView.y - map.y, cellH, 0, true) - map.cullPaddingY;\n  const boundsBottom = Phaser.Math.Snap.Ceil(camera.worldView.bottom - map.y, cellH, 0, true) + map.cullPaddingY;\n\n  return bounds.setTo(boundsLeft, boundsTop, boundsRight - boundsLeft, boundsBottom - boundsTop);\n}\n\n/**\n * Glyphmap WebGL renderer.\n * @internal\n */\nlet renderWebGL: GlyphPluginGameObjectWebGLRenderer<Glyphmap> = Phaser.Utils.NOOP;\n\n/**\n * Glyphmap canvas renderer.\n * @internal\n */\nlet renderCanvas: GlyphPluginGameObjectCanvasRenderer<Glyphmap> = Phaser.Utils.NOOP;\n\nif (typeof WEBGL_RENDERER) {\n  renderWebGL = (renderer, src, camera) => {\n    const {\n      x: cullBoundsX,\n      y: cullBoundsY,\n      width: cullBoundsWidth,\n      height: cullBoundsHeight,\n      bottom: cullBoundsEndY,\n      right: cullBoundsEndX\n    } = getCullBounds(src, camera);\n\n    const cellCount = cullBoundsWidth * cullBoundsHeight;\n    const alpha = camera.alpha * src.alpha;\n\n    if (cellCount === 0 || alpha <= 0) {\n      return;\n    }\n\n    const pipeline = renderer.pipelines.set(src.pipeline, src) as Phaser.Renderer.WebGL.Pipelines.MultiPipeline;\n\n    const scrollFactorX = src.scrollFactorX;\n    const scrollFactorY = src.scrollFactorY;\n\n    const x = src.x;\n    const y = src.y;\n\n    const sx = src.scaleX;\n    const sy = src.scaleY;\n\n    const getTint = Phaser.Renderer.WebGL.Utils.getTintAppendFloatAlpha;\n\n    const cellWidth = src.cellWidth;\n    const cellHeight = src.cellHeight;\n\n    const halfWidth = cellWidth * 0.5;\n    const halfHeight = cellHeight * 0.5;\n\n    const mapData = src['mapData'];\n    const glyphset = src['glyphset'];\n    const getKey = Glyphmap['getKey'];\n\n    renderer.pipelines.preBatch(src);\n\n    for (let indexY = cullBoundsY; indexY < cullBoundsEndY; ++indexY) {\n      for (let indexX = cullBoundsX; indexX < cullBoundsEndX; ++indexX) {\n        const key = getKey(indexX, indexY);\n\n        if (!mapData.has(key)) {\n          continue;\n        }\n\n        const cellTextureIds = mapData.get(key);\n        const cellTextureIdsLen = cellTextureIds.length;\n\n        for (let ix = 0; ix < cellTextureIdsLen; ++ix) {\n          const texture = glyphset.get(cellTextureIds[ix]).get().source.glTexture;\n\n          const textureUnit = pipeline.setTexture2D(texture);\n          const tint = getTint(0xffffff, alpha);\n\n          pipeline.batchTexture(\n            src,\n            texture,\n            texture['width'],\n            texture['height'],\n            x + (halfWidth + indexX * cellWidth) * sx,\n            y + (halfHeight + indexY * cellHeight) * sy,\n            cellWidth,\n            cellHeight,\n            sx,\n            sy,\n            0,\n            false,\n            false,\n            scrollFactorX,\n            scrollFactorY,\n            halfWidth,\n            halfHeight,\n            0,\n            0,\n            cellWidth,\n            cellHeight,\n            tint,\n            tint,\n            tint,\n            tint,\n            false as unknown as number,\n            0,\n            0,\n            camera,\n            null,\n            true,\n            textureUnit\n          );\n        }\n      }\n    }\n\n    renderer.pipelines.postBatch(src);\n  };\n}\n\nif (typeof CANVAS_RENDERER) {\n  const tempMatrix1 = new Phaser.GameObjects.Components.TransformMatrix();\n  const tempMatrix2 = new Phaser.GameObjects.Components.TransformMatrix();\n  const tempMatrix3 = new Phaser.GameObjects.Components.TransformMatrix();\n\n  renderCanvas = (renderer, src, camera, parentMatrix) => {\n    const {\n      x: cullBoundsX,\n      y: cullBoundsY,\n      width: cullBoundsWidth,\n      height: cullBoundsHeight,\n      bottom: cullBoundsEndY,\n      right: cullBoundsEndX\n    } = getCullBounds(src, camera);\n\n    const cellCount = cullBoundsWidth * cullBoundsHeight;\n    const alpha = camera.alpha * src.alpha;\n\n    if (cellCount === 0 || alpha <= 0) {\n      return;\n    }\n\n    const camMatrix = tempMatrix1;\n    const mapMatrix = tempMatrix2;\n    const calcMatrix = tempMatrix3;\n\n    mapMatrix.applyITRS(src.x, src.y, src.rotation, src.scaleX, src.scaleY);\n\n    camMatrix.copyFrom(camera['matrix']);\n\n    const ctx = renderer.currentContext;\n\n    ctx.save();\n\n    if (parentMatrix) {\n      //  Multiply the camera by the parent matrix\n      camMatrix.multiplyWithOffset(\n        parentMatrix,\n        -camera.scrollX * src.scrollFactorX,\n        -camera.scrollY * src.scrollFactorY\n      );\n\n      //  Undo the camera scroll\n      mapMatrix.e = src.x;\n      mapMatrix.f = src.y;\n\n      //  Multiply by the Sprite matrix, store result in calcMatrix\n      camMatrix.multiply(mapMatrix, calcMatrix);\n\n      calcMatrix.copyToContext(ctx);\n    } else {\n      mapMatrix.e -= camera.scrollX * src.scrollFactorX;\n      mapMatrix.f -= camera.scrollY * src.scrollFactorY;\n\n      mapMatrix.copyToContext(ctx);\n    }\n\n    if (!renderer.antialias || src.scaleX > 1 || src.scaleY > 1) {\n      ctx.imageSmoothingEnabled = false;\n    }\n\n    const cellWidth = src.cellWidth;\n    const cellHeight = src.cellHeight;\n\n    const halfWidth = cellWidth * 0.5;\n    const halfHeight = cellHeight * 0.5;\n\n    const mapData = src['mapData'];\n    const glyphset = src['glyphset'];\n    const getKey = Glyphmap['getKey'];\n\n    for (let y = cullBoundsY; y < cullBoundsEndY; ++y) {\n      for (let x = cullBoundsX; x < cullBoundsEndX; ++x) {\n        const key = getKey(x, y);\n\n        if (!mapData.has(key)) {\n          continue;\n        }\n\n        ctx.save();\n        ctx.translate(x * cellWidth + halfWidth, y * cellHeight + halfHeight);\n\n        const cellTextureIds = mapData.get(key);\n        const cellTextureIdsLen = cellTextureIds.length;\n\n        for (let ix = 0; ix < cellTextureIdsLen; ++ix) {\n          const sourceImage = glyphset.get(cellTextureIds[ix]).getSourceImage() as HTMLImageElement | HTMLCanvasElement;\n\n          ctx.drawImage(\n            sourceImage,\n            0,\n            0,\n            sourceImage.width,\n            sourceImage.height,\n            -halfWidth,\n            -halfHeight,\n            cellWidth,\n            cellHeight\n          );\n        }\n\n        ctx.restore();\n      }\n    }\n\n    ctx.restore();\n  };\n}\n\n/**\n * Glyphmap Game Object. Displays glyph data as a grid.\n */\nexport class Glyphmap extends ComputedSize(class extends GlyphPluginGameObject {}) {\n  /**\n   * Get position key from coordinates.\n   * @param x X-coordinate.\n   * @param y Y-coordinate.\n   * @returns String of the form `X,Y`.\n   */\n  private static getKey(x: number, y: number) {\n    return `${x},${y}`;\n  }\n\n  /**\n   * Height of map in glyph cells.\n   */\n  readonly heightInCells: number;\n\n  /**\n   * Width of map in glyph cells.\n   */\n  readonly widthInCells: number;\n\n  /**\n   * The amount of extra glyph cells to add into the cull bounds when\n   * calculating its horizontal size.\n   * @see {@link Glyphmap.setCullPadding}\n   */\n  cullPaddingX = 1;\n\n  /**\n   * The amount of extra glyph cells to add into the cull bounds when\n   * calculating its vertical size.\n   * @see {@link Glyphmap.setCullPadding}\n   */\n  cullPaddingY = 1;\n\n  /**\n   * Control if a camera should cull glyph cells before rendering them or not.\n   * @see {@link Glyphmap.setSkipCull}\n   */\n  skipCull = false;\n\n  /**\n   * Canvas renderer.\n   * @protected\n   * @internal\n   */\n  readonly renderCanvas = renderCanvas;\n\n  /**\n   * WebGL renderer.\n   * @protected\n   * @internal\n   */\n  readonly renderWebGL = renderWebGL;\n\n  /**\n   * Refresh glyphmap dimensions & textures.\n   * @returns Glyphmap instance for further chaining.\n   * @protected\n   */\n  readonly refresh = () => this.updateDimensions().updateTextures();\n\n  /**\n   * Dynamically track & manage glyph textures.\n   */\n  private readonly glyphset = new Glyphset();\n\n  /**\n   * Glyphmap data, mapping position key to glyph texture ids.\n   */\n  private readonly mapData = new Map<string, number[]>();\n\n  /**\n   * Track current glyph cell height, in pixels.\n   */\n  private currentCellHeight: number;\n\n  /**\n   * Track current glyph cell width, in pixels.\n   */\n  private currentCellWidth: number;\n\n  /**\n   * Get glyph cell width, in pixels.\n   */\n  get cellWidth() {\n    return this.currentCellWidth;\n  }\n\n  /**\n   * Get glyph cell height, in pixels.\n   */\n  get cellHeight() {\n    return this.currentCellHeight;\n  }\n\n  /**\n   * Instantiate glyphmap game object.\n   *\n   * @param scene The Scene to which this Game Object belongs.\n   * @param x (Default: 0) World X-coordinate.\n   * @param y (Default: 0) World Y-coordinate.\n   * @param width (Default: 80) Width in glyph cells.\n   * @param height (Default: 25) Height in glyph cells.\n   * @param font (Optional) Font to use.\n   * @param forceSquareRatio (Optional) Force square glyph frames/cells,\n   * using the greater of width or height of the associated glyph plugin's\n   * measurement character.\n   * @param pluginKey (Optional) Glyph plugin key.\n   */\n  constructor(\n    scene: Phaser.Scene,\n    x = 0,\n    y = 0,\n    width = 80,\n    height = 25,\n    font?: Font,\n    forceSquareRatio?: boolean,\n    pluginKey?: string\n  ) {\n    super(scene, 'Glyphmap', x, y, font, forceSquareRatio, pluginKey);\n\n    this.widthInCells = Math.floor(width < 0 ? 0 : width);\n    this.heightInCells = Math.floor(height < 0 ? 0 : height);\n\n    this.setOrigin(0).refresh();\n  }\n\n  /**\n   * Converts from glyph cell X-coordinate to world X-coordinate (pixels),\n   * factoring in the glyphmap's position, scale and scroll.\n   * @param cellX Glyph cell X-coordinate.\n   * @param originX (Default: 0) Glyph cell horizontal origin [0..1].\n   * @param camera (Optional) Camera to use.\n   * @returns World X-coordinate corresponding to specified cell X-coordinate.\n   */\n  cellToWorldX(cellX: number, originX = 0, camera?: Phaser.Cameras.Scene2D.Camera) {\n    const cellWidth = this.currentCellWidth * this.scaleX;\n\n    camera = camera || this.scene.cameras.main;\n\n    // Find the world position relative to top left origin, factoring in the\n    // camera's horizontal scroll.\n    const worldX = this.getTopLeft().x + camera.scrollX * (1 - this.scrollFactorX);\n\n    return worldX + cellX * cellWidth + originX * cellWidth;\n  }\n\n  /**\n   * Converts from glyph cell Y-coordinate to world Y-coordinate (pixels),\n   * factoring in the glyphmap's position, scale and scroll.\n   * @param cellY Glyph cell Y-coordinate.\n   * @param originY (Default: 0) Glyph cell vertical origin [0..1].\n   * @param camera (Optional) Camera to use.\n   * @returns World Y-coordinate corresponding to specified cell Y-coordinate.\n   */\n  cellToWorldY(cellY: number, originY = 0, camera?: Phaser.Cameras.Scene2D.Camera) {\n    const cellHeight = this.currentCellHeight * this.scaleY;\n\n    camera = camera || this.scene.cameras.main;\n\n    // Find the world position relative to top left origin, factoring in the\n    // camera's vertical scroll.\n    const worldY = this.getTopLeft().y + camera.scrollY * (1 - this.scrollFactorY);\n\n    return worldY + cellY * cellHeight + originY * cellHeight;\n  }\n\n  /**\n   * Converts from glyph cell X,Y coordinates to world X,Y coordinates (pixels),\n   * factoring in the glyphmap's position, scale and scroll.\n   * @param cellX Glyph cell X-coordinate.\n   * @param cellY Glyph cell Y-coordinate.\n   * @param originX (Default: 0) Glyph cell horizontal origin [0..1].\n   * @param originY (Default: 0) Glyph cell vertical origin [0..1].\n   * @param camera (Optional) Camera to use.\n   * @returns World X,Y coordinates tuple corresponding to specified cell X,Y\n   * coordinates.\n   */\n  cellToWorldXY(cellX: number, cellY: number, originX = 0, originY = 0, camera?: Phaser.Cameras.Scene2D.Camera) {\n    return [this.cellToWorldX(cellX, originX, camera), this.cellToWorldY(cellY, originY, camera)] as [number, number];\n  }\n\n  /**\n   * Check that specified glyph cell coordinates are within the glyphmap's\n   * bounds.\n   * @param x Glyph cell X-coordinate.\n   * @param y Glyph cell Y-coordinate.\n   * @returns True if in bounds, false otherwise.\n   */\n  checkBounds(x: number, y: number) {\n    return x >= 0 && x < this.widthInCells && y >= 0 && y < this.heightInCells;\n  }\n\n  /**\n   * Clear all glyph data & textures from the glyphmap.\n   * @returns Glyphmap instance for further chaining.\n   */\n  clear() {\n    this.mapData.clear();\n    this.glyphset.clear();\n    return this;\n  }\n\n  /**\n   * Erase glyphs at specified cell position.\n   * @param x Cell X-coordinate.\n   * @param y Cell Y-coordinate.\n   * @returns Glyphmap instance for further chaining.\n   */\n  erase(x: number, y: number) {\n    const key = Glyphmap.getKey(x, y);\n\n    if (!this.mapData.has(key)) {\n      return this;\n    }\n\n    this.mapData.get(key).forEach((id) => this.glyphset.remove(id));\n    this.mapData.delete(key);\n\n    return this;\n  }\n\n  /**\n   * Destroy glyphmap & resources.\n   * @param fromScene (Default: false) Is Game Object is being destroyed by the\n   * Scene?\n   */\n  destroy(fromScene?: boolean) {\n    super.destroy(fromScene);\n  }\n\n  /**\n   * Draw glyphs at specified cell position. Overwrites any previous glyphs\n   * drawn to the same position.\n   * @param x Glyph cell X-coordinate.\n   * @param y Glyph cell Y-coordinate.\n   * @param glyphs Glyphlikes to draw. An empty array is equivalent to erasing\n   * the cell.\n   * @returns Glyphmap instance for further chaining.\n   */\n  draw(x: number, y: number, glyphs: GlyphLike[]) {\n    if (!this.checkBounds(x, y)) {\n      return this;\n    }\n\n    this.erase(x, y);\n\n    if (!glyphs.length) {\n      return this;\n    }\n\n    const key = Glyphmap.getKey(x, y);\n\n    const glyphPlugin = this.glyphPlugin;\n    const glyphset = this.glyphset;\n    const font = this.currentFont;\n    const forceSquareRatio = this.currentForceSquareRatio;\n\n    this.mapData.set(\n      key,\n      glyphs.map((glyph) => glyphset.add(glyphPlugin.getTexture([glyph], font, forceSquareRatio)))\n    );\n\n    return this;\n  }\n\n  /**\n   * When a Camera culls the cells in a Glyphmap it does so using its view into\n   * the world, building up a rectangle inside which the cells must exist or\n   * they will be culled. Sometimes you may need to expand the size of this\n   * 'cull rectangle', especially if you plan on rotating the Camera viewing the\n   * Glyphmap. Do so by providing the padding values. The values given are in\n   * cells, not pixels. So if the cell width was 16px and you set `paddingX` to\n   * be 4, it would add 16px x 4 to the cull rectangle (adjusted for scale).\n   * @param paddingX (Default: 1) The amount of extra horizontal cells to add to\n   * the cull check padding.\n   * @param paddingY (Default: 1) The amount of extra vertical cells to add to\n   * the cull check padding.\n   * @returns Glyphmap instance for further chaining.\n   */\n  setCullPadding(paddingX = 1, paddingY = 1) {\n    this.cullPaddingX = paddingX;\n    this.cullPaddingY = paddingY;\n    return this;\n  }\n\n  /**\n   * Control if the Cameras should cull cells before rendering.\n   * @param value (Default: true) Skip cull flag.\n   * @returns Glyphmap instance for further chaining.\n   */\n  setSkipCull(value = true) {\n    this.skipCull = value;\n    return this;\n  }\n\n  /**\n   * Converts from world X-coordinate (pixels) to glyph cell X-coordinate,\n   * factoring in the glyphmap's position, scale and scroll.\n   * @param worldX World X-coordinate, in pixels.\n   * @param snapToFloor (Default: true) Round result down to nearest integer.\n   * @param camera (Optional) Camera to use.\n   * @returns Cell X-coordinate corresponding to specified world X-coordinate.\n   */\n  worldToCellX(worldX: number, snapToFloor = true, camera?: Phaser.Cameras.Scene2D.Camera) {\n    const cellWidth = this.currentCellWidth * this.scaleX;\n\n    camera = camera || this.scene.cameras.main;\n\n    // Find the world position relative to top left origin, factoring in the\n    // camera's horizontal scroll.\n    worldX = worldX - (this.getTopLeft().x + camera.scrollX * (1 - this.scrollFactorX));\n\n    const cellX = worldX / cellWidth;\n\n    return snapToFloor ? Math.floor(cellX) : cellX;\n  }\n\n  /**\n   * Converts from world Y-coordinate (pixels) to glyph cell Y-coordinate,\n   * factoring in the glyphmap's position, scale and scroll.\n   * @param worldY World Y-coordinate, in pixels.\n   * @param snapToFloor (Default: true) Round result down to nearest integer.\n   * @param camera (Optional) Camera to use.\n   * @returns Cell Y-coordinate corresponding to specified world Y-coordinate.\n   */\n  worldToCellY(worldY: number, snapToFloor = true, camera?: Phaser.Cameras.Scene2D.Camera) {\n    const cellHeight = this.currentCellHeight * this.scaleY;\n\n    camera = camera || this.scene.cameras.main;\n\n    // Find the world position relative to top left origin, factoring in the\n    // camera's vertical scroll.\n    worldY = worldY - (this.getTopLeft().y + camera.scrollY * (1 - this.scrollFactorY));\n\n    const cellY = worldY / cellHeight;\n\n    return snapToFloor ? Math.floor(cellY) : cellY;\n  }\n\n  /**\n   * Converts from world X,Y coordinates (pixels) to glyph cell X,Y coordinates,\n   * factoring in the glyphmap's position, scale and scroll.\n   * @param worldX World X-coordinate, in pixels.\n   * @param worldY World Y-coordinate, in pixels.\n   * @param snapToFloor (Default: true) Round result down to nearest integer.\n   * @param camera (Optional) Camera to use.\n   * @returns Cell X,Y coordinates tuple corresponding to specified world X,Y\n   * coordinates.\n   */\n  worldToCellXY(worldX: number, worldY: number, snapToFloor = true, camera?: Phaser.Cameras.Scene2D.Camera) {\n    return [this.worldToCellX(worldX, snapToFloor, camera), this.worldToCellY(worldY, snapToFloor, camera)] as [\n      number,\n      number\n    ];\n  }\n\n  /**\n   * Update glyphmap dimensions.\n   * @returns Glyphmap instance for further chaining.\n   */\n  private updateDimensions() {\n    const [width, height] = this.currentGlyphPlugin.getFrameDimensions(\n      this.currentGlyphPlugin.measurementCh,\n      this.font,\n      this.currentForceSquareRatio\n    );\n\n    this.currentCellWidth = width || 1;\n    this.currentCellHeight = height || 1;\n\n    return this.setSize(this.widthInCells * this.currentCellWidth, this.heightInCells * this.currentCellHeight);\n  }\n\n  /**\n   * Update glyphmap textures.\n   * @returns Glyphmap instance for further chaining.\n   */\n  private updateTextures() {\n    this.glyphset.update(this.glyphPlugin, this.currentFont, this.currentForceSquareRatio);\n    return this;\n  }\n}\n\n/**\n * Manages glyphmap textures.\n */\nexport class Glyphset {\n  /**\n   * Read the first section of glyph texture key (hex string containing ch, fg, & bg data).\n   * @param texture Texture generated by a glyph plugin.\n   * @returns Hex string containing ch, fg, & bg data.\n   */\n  private static readMinimalGlyphString(texture: Phaser.Textures.Texture) {\n    return texture.key.split(' ')[0] as `0x${string}`;\n  }\n\n  /**\n   * Map numeric id to texture.\n   */\n  private readonly textures = new Map<number, Phaser.Textures.Texture>();\n\n  /**\n   * Map hex string to numeric id.\n   */\n  private readonly texturesIndex = new Map<`0x${string}`, number>();\n\n  /**\n   * Track the number of times a numeric id has been added & removed.\n   */\n  private readonly idCounts = new Map<number, number>();\n\n  /**\n   * Current id count.\n   */\n  private idCount = 0;\n\n  /**\n   * Add texture to glyphset. If duplicate, id is maintained and count is\n   * increased.\n   * @param texture Texture generated by a glyph plugin.\n   * @returns The numeric id of this texture in the glyphset.\n   */\n  add(texture: Phaser.Textures.Texture) {\n    const hex = Glyphset.readMinimalGlyphString(texture);\n\n    if (this.texturesIndex.has(hex)) {\n      const id = this.texturesIndex.get(hex);\n      this.idCounts.set(id, this.idCounts.get(id) + 1);\n      return id;\n    }\n\n    const id = ++this.idCount;\n\n    this.textures.set(id, texture);\n    this.texturesIndex.set(hex, id);\n\n    if (!this.idCounts.has(id)) {\n      this.idCounts.set(id, 0);\n    }\n\n    this.idCounts.set(id, this.idCounts.get(id) + 1);\n\n    return id;\n  }\n\n  /**\n   * Clear glyphset data & state.\n   * @returns Reference to glyphset for further chaining.\n   */\n  clear() {\n    this.textures.clear();\n    this.texturesIndex.clear();\n    this.idCounts.clear();\n    this.idCount = 0;\n    return this;\n  }\n\n  /**\n   * Get texture referenced by specified ID.\n   * @param id Numeric texture ID.\n   * @returns Reference to texture, if it exists.\n   */\n  get(id: number) {\n    return this.textures.get(id);\n  }\n\n  /**\n   * Check if texture reference by specified ID exists in the glyphset.\n   * @param id Numeric texture ID.\n   * @returns Boolean value indicating existence within the glyphset.\n   */\n  has(id: number) {\n    return this.textures.has(id);\n  }\n\n  /**\n   * Remove texture reference by specified ID from glyphset. If this texture\n   * has been duplicated, texture is kept and ID count is decreased.\n   * @param id Numeric texture ID.\n   * @returns Reference to glyphset for further chaining.\n   */\n  remove(id: number) {\n    if (!this.textures.has(id)) {\n      return this;\n    }\n\n    const idCount = this.idCounts.get(id) - 1;\n\n    if (idCount <= 0) {\n      const texture = this.textures.get(id);\n      const hex = Glyphset.readMinimalGlyphString(texture);\n\n      this.textures.delete(id);\n      this.texturesIndex.delete(hex);\n      this.idCounts.delete(id);\n    } else {\n      this.idCounts.set(id, idCount);\n    }\n\n    return this;\n  }\n\n  /**\n   * Update textures contained within the glyphset on the fly using specified\n   * plugin, font, & force square ratio combination.\n   * @param glyphPlugin Glyph plugin to use.\n   * @param font Font to use.\n   * @param forceSquareRatio Force square ratio?\n   * @returns Reference to glyphset for further chaining.\n   */\n  update(glyphPlugin: GlyphPlugin, font: Font, forceSquareRatio: boolean) {\n    const textures = this.textures;\n\n    const getTextureFromBuffer = glyphPlugin['getTextureFromBuffer'].bind(\n      glyphPlugin\n    ) as typeof glyphPlugin['getTextureFromBuffer'];\n\n    for (const [key, texture] of textures) {\n      textures.set(\n        key,\n        getTextureFromBuffer(convertHexStringToBuffer(Glyphset.readMinimalGlyphString(texture)), font, forceSquareRatio)\n      );\n    }\n\n    return this;\n  }\n}\n","/**\n * Glyph plugin module.\n *\n * @author kidthales <kidthales@agogpixel.com>\n * @copyright 2021-present AgogPixel\n * @license {@link https://agogpixel.github.io/phaser3-glyph-plugin/LICENSE|MIT License}\n * @module\n */\n\nimport { createPluginApiMixin } from '@agogpixel/phaser3-ts-utils/mixins/scene/create-plugin-api-mixin';\n\nimport type { GlyphCreator, GlyphFactory } from './gameobjects/glyph';\nimport type { GlyphmapCreator, GlyphmapFactory } from './gameobjects/glyphmap';\nimport type { CharLike, GlyphLike } from './shared';\nimport {\n  convertBufferToHexString,\n  convertCharLikeToHexString,\n  convertCharLikeToString,\n  createGlyphsBuffer,\n  Font,\n  readGlyphsFromBuffer\n} from './shared';\n\n/**\n * Glyph plugin initialization data.\n */\nexport interface GlyphPluginInitData {\n  /**\n   * **Experimental**: Use browser's advanced text metrics API.\n   */\n  advancedTextMetrics?: boolean;\n\n  /**\n   * Character used for determining default texture frame dimensions.\n   */\n  measurementCh?: CharLike;\n}\n\n/**\n * Glyph plugin event.\n */\nexport enum GlyphPluginEvent {\n  /**\n   * Emitted when `measurementCh` or `advancedTextMetrics` plugin properties\n   * are set.\n   */\n  Update = 'update',\n\n  /**\n   * Emitted when plugin is destroyed.\n   */\n  Destroy = 'destroy'\n}\n\n/**\n * Glyph plugin. Provides on the fly glyph texture generation.\n */\nexport class GlyphPlugin extends Phaser.Plugins.BasePlugin {\n  /**\n   * Mixin GlyphPlugin API with specified scene type.\n   */\n  static readonly GlyphScene = createPluginApiMixin<\n    GlyphPlugin,\n    'advancedTextMetrics' | 'measurementCh' | 'getFrameDimensions' | 'getTexture',\n    {\n      /**\n       * Glyph factory.\n       * @param x (Default: 0) World X-coordinate.\n       * @param y (Default: 0) World Y-coordinate.\n       * @param glyph (Optional) Glyphlike data.\n       * @param font (Optional) Font to use.\n       * @param forceSquareRatio (Optional) Force square glyph frames/cells,\n       * using the greater of width or height of the associated glyph plugin's\n       * measurement character.\n       * @param pluginKey (Optional) Glyph plugin key.\n       * @returns Glyph GameObject instance that has been added to the\n       * scene's display list.\n       */\n      glyph: GlyphFactory;\n\n      /**\n       * Glyphmap factory.\n       * @param x (Default: 0) X-coordinate in world space.\n       * @param y (Default: 0) Y-coordinate in world space.\n       * @param width (Default: 80) Width in cells.\n       * @param height (Default: 25) Height in cells.\n       * @param font (Optional) Font to use.\n       * @param pluginKey (Optional) Specify a specific glyph plugin instance\n       * (in the plugin manager) to use for textures.\n       * @returns Glyphmap GameObject instance that has been added to the\n       * scene's display list.\n       */\n      glyphmap: GlyphmapFactory;\n    },\n    {\n      /**\n       * Glyph creator.\n       * @param config The configuration object this Game Object will use to\n       * create itself.\n       * @param addToScene (Default: true) Add this Game Object to the Scene\n       * after creating it? If set this argument overrides the `add` property in\n       * the config object.\n       * @returns Glyph GameObject instance.\n       */\n      glyph: GlyphCreator;\n\n      /**\n       * Glyphmap creator.\n       * @param config The configuration object this Game Object will use to\n       * create itself.\n       * @param addToScene (Default: true) Add this Game Object to the Scene\n       * after creating it? If set this argument overrides the `add` property in\n       * the config object.\n       * @returns Glyphmap GameObject instance.\n       */\n      glyphmap: GlyphmapCreator;\n    }\n  >();\n\n  /**\n   * Frame dimensions cache.\n   */\n  private static readonly frameDimensionsCache: Record<string, [number, number]> = {};\n\n  /**\n   * Text metrics cache.\n   */\n  private static readonly textMetricsCache: Record<string, TextMetrics> = {};\n\n  /**\n   * Find glyph plugin in plugin manager.\n   * @param pluginManager Plugin manager instance.\n   * @param key (Optional) Plugin key to search for.\n   * @returns Returns glyph plugin as specified by key, or fallback to first\n   * glyph plugin found.\n   * @throws Error if no glyph plugin instance exists in the plugin manager.\n   */\n  static findPlugin(pluginManager: Phaser.Plugins.PluginManager, key?: string) {\n    let plugin: GlyphPlugin;\n\n    if (typeof key === 'string') {\n      plugin = pluginManager.get(key, true) as GlyphPlugin;\n    }\n\n    if (!plugin) {\n      plugin = pluginManager.plugins.find((p) => p.plugin instanceof GlyphPlugin)?.plugin as unknown as GlyphPlugin;\n    }\n\n    if (!plugin) {\n      throw new Error('GlyphPlugin instance not found in Phaser pluginManager. Have you started the plugin?');\n    }\n\n    return plugin;\n  }\n\n  /**\n   * Get frame dimensions for specified charlike & font combination.\n   * @param charlike Charlike to use.\n   * @param font Font to use.\n   * @param forceSquareRatio (Default: false) Force square frame, using the\n   * greater of width or height.\n   * @param advancedTextMetrics (Default: false) **Experimental**: Use\n   * browser's advanced text metrics API.\n   * @returns Tuple containing width & height of the frame.\n   */\n  static getFrameDimensions(\n    charlike: CharLike,\n    font: Font,\n    forceSquareRatio = false,\n    advancedTextMetrics = false\n  ): [number, number] {\n    const ch = convertCharLikeToString(charlike);\n    const chHex = convertCharLikeToHexString(ch);\n    const fontCss = font.css;\n\n    const textMetricsCacheKey = `${chHex} ${fontCss}` + (advancedTextMetrics ? ' advanced' : '');\n    const frameDimensionsCacheKey = textMetricsCacheKey + (forceSquareRatio ? ' square' : '');\n\n    let frameDimensions = GlyphPlugin.frameDimensionsCache[frameDimensionsCacheKey];\n\n    if (frameDimensions) {\n      return [...frameDimensions];\n    }\n\n    let textMetrics = GlyphPlugin.textMetricsCache[textMetricsCacheKey];\n\n    if (!textMetrics) {\n      const canvas = Phaser.Display.Canvas.CanvasPool.create(this);\n      const ctx = canvas.getContext('2d');\n\n      ctx.font = fontCss;\n\n      GlyphPlugin.textMetricsCache[textMetricsCacheKey] = textMetrics = ctx.measureText(ch);\n      Phaser.Display.Canvas.CanvasPool.remove(canvas);\n    }\n\n    if (advancedTextMetrics) {\n      // https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#measuring_text_width\n      frameDimensions = [\n        Math.abs(textMetrics.actualBoundingBoxLeft) + Math.abs(textMetrics.actualBoundingBoxRight),\n        Math.abs(textMetrics.actualBoundingBoxAscent) + Math.abs(textMetrics.actualBoundingBoxDescent)\n      ];\n    } else {\n      frameDimensions = [textMetrics.width, font.size];\n    }\n\n    if (forceSquareRatio) {\n      frameDimensions[0] = frameDimensions[1] = Math.max(...frameDimensions);\n    }\n\n    GlyphPlugin.frameDimensionsCache[frameDimensionsCacheKey] = frameDimensions;\n\n    return [...frameDimensions];\n  }\n\n  /**\n   * Generate, cache, & return a texture for specified glyphlikes, font, &\n   * measurement character combination. Defines frame dimensions for each glyph\n   * in the texture, using either the dimensions of the measurement character,\n   * or the glyph's dimensions - whichever is greater.\n   * @param textures Texture manager instance.\n   * @param glyphs Glyphlikes to draw to texture, left to right.\n   * @param font Font to use.\n   * @param measurementCh Measurement character to use.\n   * @param forceSquareRatio (Default: false) Force square frames, using the\n   * greater of width or height for each glyph.\n   * @param advancedTextMetrics (Default: false) **Experimental**: Use\n   * browser's advanced text metrics API.\n   * @returns Texture representation of specified glyphlikes.\n   */\n  static getTexture(\n    textures: Phaser.Textures.TextureManager,\n    glyphs: GlyphLike[],\n    font: Font,\n    measurementCh: CharLike,\n    forceSquareRatio = false,\n    advancedTextMetrics = false\n  ) {\n    return GlyphPlugin.getTextureFromBuffer(\n      textures,\n      createGlyphsBuffer(glyphs),\n      font,\n      measurementCh,\n      forceSquareRatio,\n      advancedTextMetrics\n    );\n  }\n\n  /**\n   * Get texture key for specified glyphlikes, font, & measurement character\n   * combination.\n   * @param glyphs Glyphlikes to use.\n   * @param font Font to use.\n   * @param measurementCh Measurement character.\n   * @param forceSquareRatio (Default: false) Force square frames.\n   * @param advancedTextMetrics (Default: false) **Experimental**.\n   * @returns Key for corresponding texture that would be generated with\n   * specified parameters.\n   */\n  static getTextureKey(\n    glyphs: GlyphLike[],\n    font: Font,\n    measurementCh: CharLike,\n    forceSquareRatio = false,\n    advancedTextMetrics = false\n  ) {\n    return GlyphPlugin.getTextureKeyFromBuffer(\n      createGlyphsBuffer(glyphs),\n      font,\n      measurementCh,\n      forceSquareRatio,\n      advancedTextMetrics\n    );\n  }\n\n  /**\n   * Get texture from internal glyph buffer representation.\n   * @param textures Texture manager.\n   * @param buffer Buffer to read from.\n   * @param font Font to use.\n   * @param measurementCh Measurement character to use.\n   * @param forceSquareRatio (Optional) Force square frames, using the\n   * greater of width or height for each glyph.\n   * @param advancedTextMetrics (Optional) **Experimental**: Use\n   * browser's advanced text metrics API.\n   * @returns Texture representation of specified glyph buffer.\n   */\n  private static getTextureFromBuffer(\n    textures: Phaser.Textures.TextureManager,\n    buffer: Uint8Array,\n    font: Font,\n    measurementCh: CharLike,\n    forceSquareRatio?: boolean,\n    advancedTextMetrics?: boolean\n  ): Phaser.Textures.Texture {\n    const key = GlyphPlugin.getTextureKeyFromBuffer(buffer, font, measurementCh, forceSquareRatio, advancedTextMetrics);\n\n    if (textures.exists(key)) {\n      return textures.get(key);\n    }\n\n    const glyphs = readGlyphsFromBuffer('rgba', buffer);\n\n    const [defaultFrameWidth, defaultFrameHeight] = GlyphPlugin.getFrameDimensions(\n      measurementCh,\n      font,\n      forceSquareRatio,\n      advancedTextMetrics\n    );\n\n    const glyphFrames: [number, number][] = [];\n\n    let textureWidth = 0;\n    let textureHeight = 0;\n\n    for (const glyph of glyphs) {\n      const [glyphFrameWidth, glyphFrameHeight] = GlyphPlugin.getFrameDimensions(\n        glyph[0],\n        font,\n        forceSquareRatio,\n        advancedTextMetrics\n      );\n\n      const glyphFrame: [number, number] = [\n        Math.max(glyphFrameWidth, defaultFrameWidth),\n        Math.max(glyphFrameHeight, defaultFrameHeight)\n      ];\n\n      textureWidth += glyphFrame[0];\n      textureHeight = Math.max(textureHeight, glyphFrame[1]);\n\n      glyphFrames.push(glyphFrame);\n    }\n\n    const texture = textures.createCanvas(key, textureWidth || 1, textureHeight || 1);\n    const ctx = texture.getContext();\n\n    const glyphsLen = glyphs.length;\n\n    let frameX = 0;\n    let frameY = 0;\n\n    for (let i = 0; i < glyphsLen; ++i) {\n      const [ch, fg, bg] = glyphs[i];\n      const [frameWidth, frameHeight] = glyphFrames[i];\n\n      ctx.fillStyle = bg;\n      ctx.fillRect(frameX, frameY, frameWidth, frameHeight);\n\n      ctx.font = font.css;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n\n      ctx.fillStyle = fg;\n      ctx.fillText(ch, frameX + frameWidth / 2, frameY + frameHeight / 2);\n\n      texture.add(i, 0, frameX, frameY, frameWidth, frameHeight);\n\n      frameX += frameWidth;\n      frameY += 0;\n    }\n\n    texture.update();\n\n    return texture;\n  }\n\n  /**\n   * Get texture from internal glyph buffer representation.\n   * @param buffer The buffer to read from.\n   * @param font Font to use.\n   * @param measurementCh Measurement character to use.\n   * @param forceSquareRatio (Optional) Force square frames.\n   * @param advancedTextMetrics (Optional) **Experimental**.\n   * @returns Key for corresponding texture that would be generated with\n   * specified parameters.\n   */\n  private static getTextureKeyFromBuffer(\n    buffer: Uint8Array,\n    font: Font,\n    measurementCh: CharLike,\n    forceSquareRatio?: boolean,\n    advancedTextMetrics?: boolean\n  ) {\n    return (\n      `${convertBufferToHexString(buffer)} ${convertCharLikeToHexString(measurementCh)} ${font.css}` +\n      (forceSquareRatio ? ' square' : '' + (advancedTextMetrics ? ' advanced' : ''))\n    );\n  }\n\n  /**\n   * Event emitter to send {@link GlyphPluginEvent}s to subscribers.\n   */\n  private readonly eventEmitter = new Phaser.Events.EventEmitter();\n\n  /**\n   * Tracks current measurement character value.\n   */\n  private currentMeasurementCh = 'W';\n\n  /**\n   * Tracks current advanced text metrics value.\n   */\n  private currentAdvancedTextMetrics = false;\n\n  /**\n   * Get measurement character.\n   */\n  get measurementCh() {\n    return this.currentMeasurementCh;\n  }\n\n  /**\n   * Set measurement character.\n   * @emits {@link GlyphPluginEvent.Update} when set.\n   * @see {@link GlyphPlugin.setMeasurementCh}\n   */\n  set measurementCh(value: string) {\n    this.setMeasurementCh(value);\n  }\n\n  /**\n   * Get advanced text metrics.\n   */\n  get advancedTextMetrics() {\n    return this.currentAdvancedTextMetrics;\n  }\n\n  /**\n   * Set advanced text metrics.\n   * @emits {@link GlyphPluginEvent.Update} when set.\n   * @see {@link GlyphPlugin.setAdvancedTextMetrics}\n   */\n  set advancedTextMetrics(value: boolean) {\n    this.setAdvancedTextMetrics(value);\n  }\n\n  /**\n   * Instantiate glyph plugin.\n   * @param pluginManager A reference to the Plugin Manager.\n   */\n  constructor(pluginManager: Phaser.Plugins.PluginManager) {\n    super(pluginManager);\n\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { glyphFactory, glyphCreator } = require('./gameobjects/glyph');\n    pluginManager.registerGameObject('glyph', glyphFactory, glyphCreator);\n\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { glyphmapFactory, glyphmapCreator } = require('./gameobjects/glyphmap');\n    pluginManager.registerGameObject('glyphmap', glyphmapFactory, glyphmapCreator);\n  }\n\n  /**\n   * Destroy glyph plugin & resources.\n   * @emits {@link GlyphPluginEvent.Destroy} when invoked.\n   */\n  destroy() {\n    super.destroy();\n    this.eventEmitter.emit(GlyphPluginEvent.Destroy);\n    this.eventEmitter.destroy();\n  }\n\n  /**\n   * Get frame dimensions for specified charlike & font combination.\n   * @param charlike Charlike to use.\n   * @param font Font to use.\n   * @param forceSquareRatio (Default: false) Force square frame, using the\n   * greater of width or height.\n   * @returns Tuple containing width & height of the frame.\n   */\n  getFrameDimensions(charlike: CharLike, font: Font, forceSquareRatio = false): [number, number] {\n    return GlyphPlugin.getFrameDimensions(charlike, font, forceSquareRatio, this.currentAdvancedTextMetrics);\n  }\n\n  /**\n   * Generate, cache, & return a texture for specified glyphlikes & font\n   * combination. Defines frame dimensions for each glyph in the texture, using\n   * either the dimensions of the measurement character, or the glyph's\n   * dimensions - whichever is greater.\n   * @param glyphs Glyphlikes to draw to texture, left to right.\n   * @param font Font to use.\n   * @param forceSquareRatio (Default: false) Force square frames, using the\n   * greater of width or height for each glyph.\n   * @returns Texture representation of specified glyphlikes.\n   */\n  getTexture(glyphs: GlyphLike[], font: Font, forceSquareRatio = false) {\n    return GlyphPlugin.getTexture(\n      this.game.textures,\n      glyphs,\n      font,\n      this.currentMeasurementCh,\n      forceSquareRatio,\n      this.currentAdvancedTextMetrics\n    );\n  }\n\n  /**\n   * Get texture key for specified glyphlikes & font combination.\n   * @param glyphs Glyphlikes to use.\n   * @param font Font to use.\n   * @param forceSquareRatio (Default: false) Force square frames.\n   * @returns Key for corresponding texture that would be generated with\n   * specified parameters.\n   */\n  getTextureKey(glyphs: GlyphLike[], font: Font, forceSquareRatio = false) {\n    return GlyphPlugin.getTextureKey(\n      glyphs,\n      font,\n      this.currentMeasurementCh,\n      forceSquareRatio,\n      this.currentAdvancedTextMetrics\n    );\n  }\n\n  /**\n   * Called by the plugin manager when glyph plugin is initialized.\n   * @param data Glyph plugin initialization data.\n   * @emits {@link GlyphPluginEvent.Update} when initialization data provided.\n   */\n  init(data?: GlyphPluginInitData) {\n    super.init();\n\n    if (!data) {\n      return;\n    }\n\n    if (typeof data.measurementCh !== undefined && typeof data.measurementCh !== null) {\n      this.setMeasurementCh(data.measurementCh);\n    }\n\n    if (typeof data.advancedTextMetrics !== undefined && typeof data.advancedTextMetrics !== null) {\n      this.setAdvancedTextMetrics(data.advancedTextMetrics);\n    }\n  }\n\n  /**\n   * Remove the listeners of a given event.\n   * @param event The event name.\n   * @param fn Only remove the listeners that match this function.\n   * @param context Only remove the listeners that have this context.\n   * @param once Only remove one-time listeners.\n   * @returns Glyph plugin instance for further chaining.\n   */\n  off<F extends (...args: unknown[]) => void, T>(event: GlyphPluginEvent, fn: F, context?: T, once?: boolean) {\n    this.eventEmitter.off(event, fn, context, once);\n    return this;\n  }\n\n  /**\n   * Add a listener for a given event.\n   * @param event The event name.\n   * @param fn The listener function.\n   * @param context The context to invoke the listener with. Default this.\n   * @returns Glyph plugin instance for further chaining.\n   */\n  on<F extends (...args: unknown[]) => void, T>(event: GlyphPluginEvent, fn: F, context?: T) {\n    this.eventEmitter.on(event, fn, context);\n    return this;\n  }\n\n  /**\n   * Add a one-time listener for a given event.\n   * @param event The event name.\n   * @param fn The listener function.\n   * @param context The context to invoke the listener with. Default this.\n   * @returns Glyph plugin instance for further chaining.\n   */\n  once<F extends (...args: unknown[]) => void, T>(event: GlyphPluginEvent, fn: F, context?: T) {\n    this.eventEmitter.once(event, fn, context);\n    return this;\n  }\n\n  /**\n   * Set advanced text metrics.\n   * @param value (Default: true) Advanced text metrics flag.\n   * @returns Glyph plugin instance for further chaining.\n   * @emits {@link GlyphPluginEvent.Update} when set.\n   */\n  setAdvancedTextMetrics(value = true) {\n    this.currentAdvancedTextMetrics = value;\n    this.eventEmitter.emit(GlyphPluginEvent.Update);\n    return this;\n  }\n\n  /**\n   * Set measurement character.\n   * @param charlike Charlike.\n   * @returns Glyph plugin instance for further chaining.\n   * @emits {@link GlyphPluginEvent.Update} when set.\n   */\n  setMeasurementCh(charlike: CharLike) {\n    const ch = convertCharLikeToString(charlike);\n    this.currentMeasurementCh = ch;\n    this.eventEmitter.emit(GlyphPluginEvent.Update);\n    return this;\n  }\n\n  /**\n   * Get texture from internal glyph buffer representation.\n   * @param buffer Buffer to read from.\n   * @param font Font to use.\n   * @param forceSquareRatio (Optional) Force square frames, using the\n   * greater of width or height for each glyph.\n   * @returns Texture representation of specified glyph buffer.\n   */\n  protected getTextureFromBuffer(buffer: Uint8Array, font: Font, forceSquareRatio?: boolean) {\n    return GlyphPlugin.getTextureFromBuffer(\n      this.game.textures,\n      buffer,\n      font,\n      this.currentMeasurementCh,\n      forceSquareRatio,\n      this.currentAdvancedTextMetrics\n    );\n  }\n}\n","/**\n * Shared module.\n *\n * @author kidthales <kidthales@agogpixel.com>\n * @copyright 2021-present AgogPixel\n * @license {@link https://agogpixel.github.io/phaser3-glyph-plugin/LICENSE|MIT License}\n * @module\n */\n\nimport colorString from 'color-string';\n\n/**\n * Union of types suitable for representing a string character.\n */\nexport type CharLike = number | string;\n\n/**\n * Union of various types suitable for RGB & RGBA color representation.\n */\nexport type ColorLike =\n  | number\n  | string\n  | Phaser.Types.Display.ColorObject\n  | Phaser.Types.Display.InputColorObject\n  | Phaser.Display.Color;\n\n/**\n * Union of CSS font family values.\n */\nexport type FontFamily =\n  | 'sans-serif'\n  | 'Arial, sans-serif'\n  | 'Helvetica, sans-serif'\n  | 'Verdana, sans-serif'\n  | 'Trebuchet MS, sans-serif'\n  | 'Gill Sans, sans-serif'\n  | 'Noto Sans, sans-serif'\n  | 'Avantgarde, TeX Gyre Adventor, URW Gothic L, sans-serif'\n  | 'Optima, sans-serif'\n  | 'Arial Narrow, sans-serif'\n  | 'serif'\n  | 'Times, Times New Roman, serif'\n  | 'Didot, serif'\n  | 'Georgia, serif'\n  | 'Palatino, URW Palladio L, serif'\n  | 'Bookman, URW Bookman L, serif'\n  | 'New Century Schoolbook, TeX Gyre Schola, serif'\n  | 'American Typewriter, serif'\n  | 'monospace'\n  | 'Andale Mono, monospace'\n  | 'Courier New, monospace'\n  | 'Courier, monospace'\n  | 'FreeMono, monospace'\n  | 'OCR A Std, monospace'\n  | 'DejaVu Sans Mono, monospace'\n  | 'cursive'\n  | 'Comic Sans MS, Comic Sans, cursive'\n  | 'Apple Chancery, cursive'\n  | 'Bradley Hand, cursive'\n  | 'Brush Script MT, Brush Script Std, cursive'\n  | 'Snell Roundhand, cursive'\n  | 'URW Chancery L, cursive'\n  | 'fantasy'\n  | 'Impact, fantasy'\n  | 'Luminari, fantasy'\n  | 'Chalkduster, fantasy'\n  | 'Jazz LET, fantasy'\n  | 'Blippo, fantasy'\n  | 'Stencil Std, fantasy'\n  | 'Marker Felt, fantasy'\n  | 'Trattatello, fantasy';\n\n/**\n * Union of CSS font style values.\n */\nexport type FontStyle = 'normal' | 'italic' | 'oblique';\n\n/**\n * Union of CSS font variant values.\n */\nexport type FontVariant = 'normal' | 'small-caps';\n\n/**\n * Union of CSS font weight values.\n */\nexport type FontWeight =\n  | 'normal'\n  | 'bold'\n  | 'bolder'\n  | 'lighter'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\n/**\n * Tuple of character, foreground color, & optional background color types that\n * can be used to represent a glyph.\n */\nexport type GlyphLike = [CharLike, ColorLike, ColorLike?];\n\n/**\n * Available read colors formats.\n * @internal\n */\nexport type ReadColorsFormat = 'number' | '#RGBA' | 'rgba';\n\n/**\n * Number of bytes per UTF-16 character.\n * @internal\n */\nexport const bytesPerChar = 2;\n\n/**\n * Number of bytes per 4 channel color (RGBA).\n * @internal\n */\nexport const bytesPerColor = 4;\n\n/**\n * Number of bytes per glyph.\n * @internal\n */\nexport const bytesPerGlyph = bytesPerChar + 2 * bytesPerColor;\n\n/**\n * Default glyph background color (transparent).\n * @internal\n */\nexport const defaultGlyphBackgroundColor = 'rgba(0, 0, 0, 0)';\n\n/**\n * Check that (end - start) is a non-negative value congruent to specified\n * multiple.\n * @param start Start index.\n * @param end End index.\n * @param multiple Required multiple.\n * @throws Error if negative amount or amount is not congruent with specified\n * multiple.\n * @internal\n */\nexport function checkAmount(start: number, end: number, multiple: number) {\n  const amount = end - start;\n\n  if (amount <= 0 || amount % multiple !== 0) {\n    throw new Error(\n      `Amount of bytes to be read must be a positive non-zero multiple of ${multiple}; amount: ${amount}, start: ${start}, end: ${end}`\n    );\n  }\n}\n\n/**\n * Check that indexes fall within buffer bounds.\n * @param buffer Buffer to check against.\n * @param start Start index.\n * @param end End index.\n * @throws Error if indexes are out of bounds, or if end index is equal or less\n * than start index.\n * @internal\n */\nexport function checkBufferIndexing(buffer: Uint8Array, start: number, end: number) {\n  const result = start >= 0 && end > 0 && end - start > 0 && end <= buffer.length;\n\n  if (!result) {\n    throw new Error(`Provided indexes invalid; buffer length: ${buffer.length}, start: ${start}, end: ${end}`);\n  }\n}\n\n/**\n * Convert provided buffer to its corresponding hex string representation,\n * prefixed with `0x`.\n * @param buffer Buffer to convert.\n * @param start (Default: 0) Start index.\n * @param end (Optional) End index.\n * @returns Hex string representation of the specified buffer, from start index\n * to end index.\n * @throws Error if indexes are out of bounds, or if end index is equal or less\n * than start index.\n * @internal\n */\nexport function convertBufferToHexString(buffer: Uint8Array, start = 0, end?: number) {\n  end = normalizeBufferEndIndex(buffer, end);\n  checkBufferIndexing(buffer, start, end);\n\n  let hex = '';\n\n  for (let i = start; i < end; ++i) {\n    hex += buffer[i].toString(16).padStart(2, '0');\n  }\n\n  return `0x${hex}`;\n}\n\n/**\n * Convert provided charlike to its corresponding hex string representation,\n * prefixed with `0x`.\n * @param charlike Charlike to convert.\n * @returns Hex string representation of specified charlike.\n * @throws Error if specified charlike is an empty string.\n * @internal\n */\nexport function convertCharLikeToHexString(charlike: CharLike) {\n  const ch = convertCharLikeToString(charlike);\n  const len = ch.length;\n\n  if (!len) {\n    throw new Error('Empty string');\n  }\n\n  let hex = '';\n\n  for (let i = 0; i < len; ++i) {\n    hex += ch\n      .charCodeAt(i)\n      .toString(16)\n      .padStart(2 * bytesPerChar, '0');\n  }\n\n  return `0x${hex}`;\n}\n\n/**\n * Converts specified charlike, which is a union type, to its corresponding\n * string representation.\n * @param charlike Charlike to convert.\n * @returns String representation of specified charlike.\n * @internal\n */\nexport function convertCharLikeToString(charlike: CharLike) {\n  return typeof charlike === 'number' ? String.fromCharCode(charlike) : charlike;\n}\n\n/**\n * Converts specified hex string to its corresponding buffer representation.\n * @param hex Hex string to convert.\n * @returns Buffer representation of specified hex string.\n * @throws Error if specified hex string is not an even number in length.\n * @internal\n */\nexport function convertHexStringToBuffer(hex: `0x${string}`) {\n  if (hex.length % 2 !== 0) {\n    throw new Error(`Invalid hex string: ${hex}; must be an even number in length`);\n  }\n\n  return new Uint8Array(\n    hex\n      .slice(2)\n      .match(/.{1,2}/g)\n      .map((byte) => parseInt(byte, 16))\n  );\n}\n\n/**\n * Create internal buffer representation of specified glyphlikes.\n * @param glyphs Glyphlikes to create the buffer from.\n * @returns Uint8Array buffer containing all specified glyph data in Big-Endian\n * format.\n * @internal\n */\nexport function createGlyphsBuffer(glyphs: GlyphLike[]) {\n  return writeGlyphsToBuffer(glyphs, new Uint8Array(bytesPerGlyph * glyphs.length));\n}\n\n/**\n * Ensure end index is defined or default to buffer length.\n * @param buffer Buffer to compare with.\n * @param end (Optional) End index candidate.\n * @returns A defined end index.\n * @internal\n */\nexport function normalizeBufferEndIndex(buffer: Uint8Array, end?: number) {\n  return typeof end !== 'number' ? buffer.length : end;\n}\n\n/**\n * Read color data from specified buffer.\n * @param readColorsFormat Specifies return type & format.\n * @param buffer Buffer to read from.\n * @param start (Default: 0) Start index.\n * @param end (Optional) End index.\n * @returns Array of colors as defined by specified colors format.\n * @throws Error if indexes are out of bounds, or if end index is equal or less\n * than start index, or if read amount is not a multiple of 4.\n * @internal\n */\nexport function readColorsFromBuffer<T extends ReadColorsFormat>(\n  readColorsFormat: T,\n  buffer: Uint8Array,\n  start = 0,\n  end?: number\n) {\n  end = normalizeBufferEndIndex(buffer, end);\n  checkBufferIndexing(buffer, start, end);\n  checkAmount(start, end, bytesPerColor);\n\n  const colors = [] as T extends 'number' ? number[] : string[];\n\n  for (let i = start; i < end; i += bytesPerColor) {\n    switch (readColorsFormat) {\n      case 'number':\n        (colors as number[]).push(\n          Phaser.Display.Color.GetColor32(buffer[i], buffer[i + 1], buffer[i + 2], buffer[i + 3])\n        );\n        break;\n      case '#RGBA':\n      case 'rgba':\n        (colors as string[]).push(\n          colorString.to[readColorsFormat === 'rgba' ? 'rgb' : 'hex'](\n            buffer[i],\n            buffer[i + 1],\n            buffer[i + 2],\n            +(Math.round((buffer[start + 3] / 255 + 'e+3') as unknown as number) + 'e-3') // Three decimal places.\n          )\n        );\n        break;\n    }\n  }\n\n  return colors;\n}\n\n/**\n * Read glyph data from specified buffer.\n * @param readColorsFormat Specifies return type & color format.\n * @param buffer Buffer to read from.\n * @param start (Default: 0) Start index.\n * @param end (Optional) End index.\n * @returns Array of glyphlikes as defined by specified colors format.\n * @throws Error if indexes are out of bounds, or if end index is equal or less\n * than start index, or if read amount is not a multiple of 10.\n * @internal\n */\nexport function readGlyphsFromBuffer<T extends ReadColorsFormat>(\n  readColorsFormat: T,\n  buffer: Uint8Array,\n  start = 0,\n  end?: number\n) {\n  end = normalizeBufferEndIndex(buffer, end);\n  checkBufferIndexing(buffer, start, end);\n  checkAmount(start, end, bytesPerGlyph);\n\n  const glyphs = [] as T extends 'number' ? [string, number, number][] : [string, string, string][];\n\n  for (let i = start; i < end; i += bytesPerGlyph) {\n    const chStart = i;\n    const chEnd = chStart + bytesPerChar;\n    const fgStart = chEnd;\n    const fgEnd = fgStart + bytesPerColor;\n    const bgStart = fgEnd;\n    const bgEnd = bgStart + bytesPerColor;\n\n    glyphs.push([\n      readStringFromBuffer(buffer, chStart, chEnd),\n      readColorsFromBuffer(readColorsFormat, buffer, fgStart, fgEnd)[0] as never,\n      readColorsFromBuffer(readColorsFormat, buffer, bgStart, bgEnd)[0] as never\n    ]);\n  }\n\n  return glyphs;\n}\n\n/**\n * Read UTF-16 string from specified buffer.\n * @param buffer Buffer to read from.\n * @param start (Default: 0) Start index.\n * @param end (Optional) End index.\n * @returns UTF-16 string.\n * @throws Error if indexes are out of bounds, or if end index is equal or less\n * than start index, or if read amount is not an even number.\n * @internal\n */\nexport function readStringFromBuffer(buffer: Uint8Array, start = 0, end?: number) {\n  end = normalizeBufferEndIndex(buffer, end);\n  checkBufferIndexing(buffer, start, end);\n  checkAmount(start, end, bytesPerChar);\n\n  let str = '';\n\n  for (let i = start; i < end; i += bytesPerChar) {\n    str += String.fromCharCode(((buffer[i] & 0xff) << 8) | (buffer[i + 1] & 0xff));\n  }\n\n  return str;\n}\n\n/**\n * Write specified charlike to specified buffer.\n * @param charlike Charlike to write.\n * @param buffer Buffer to write to.\n * @param start (Default: 0) Start index.\n * @returns Specified buffer.\n * @throws Error if indexes are out of bounds, or if end index is equal or less\n * than start index.\n * @internal\n */\nexport function writeCharLikeToBuffer(charlike: CharLike, buffer: Uint8Array, start = 0) {\n  const codes = typeof charlike === 'number' ? [charlike] : Array.from(charlike).map((ch) => ch.charCodeAt(0));\n  const codesLen = codes.length;\n  const end = start + bytesPerChar * codesLen;\n\n  checkBufferIndexing(buffer, start, end);\n\n  for (let i = 0; i < codesLen; ++i) {\n    const code = codes[i];\n    const ix = start + bytesPerChar * i;\n\n    buffer[ix] = (code >> 8) & 0xff;\n    buffer[ix + 1] = code & 0xff;\n  }\n\n  return buffer;\n}\n\n/**\n * Write specified colorlike(s) to specified buffer.\n * @param colorlike Colorlike(s) to write.\n * @param buffer Buffer to write to.\n * @param start (Default: 0) Start index.\n * @returns Specified buffer.\n * @throws Error if indexes are out of bounds, or if end index is equal or less\n * than start index.\n * @internal\n */\nexport function writeColorLikeToBuffer(colorlike: ColorLike | ColorLike[], buffer: Uint8Array, start = 0) {\n  const colors = Array.isArray(colorlike) ? colorlike : [colorlike];\n  const colorsLen = colors.length;\n  const end = start + bytesPerColor * colorsLen;\n\n  checkBufferIndexing(buffer, start, end);\n\n  for (let i = 0; i < colorsLen; ++i) {\n    const color = colors[i];\n    const ix = start + bytesPerColor * i;\n\n    let colorBuffer: number[];\n\n    if (color instanceof Phaser.Display.Color) {\n      colorBuffer = [color.red, color.green, color.blue, color.alpha];\n    } else if (color && typeof color === 'object') {\n      colorBuffer = [color.r || 0, color.g || 0, color.b || 0, typeof color.a !== 'number' ? 255 : color.a];\n    } else if (typeof color === 'number') {\n      const c = Phaser.Display.Color.IntegerToRGB(color);\n      colorBuffer = [c.r, c.g, c.b, c.a];\n    } else if (typeof color === 'string') {\n      const c = colorString.get.rgb(color);\n\n      if (!c) {\n        throw new Error(`Invalid color string at index ${i}; color: ${color}`);\n      }\n\n      colorBuffer = [c[0], c[1], c[2], Math.round(c[3] * 255)];\n    } else {\n      throw new TypeError(`Invalid colorlike type at index ${i}`);\n    }\n\n    for (let j = 0; j < bytesPerColor; ++j) {\n      buffer[ix + j] = colorBuffer[j];\n    }\n  }\n\n  return buffer;\n}\n\n/**\n * Write specified glyphlikes to specified buffers.\n * @param glyphs Glyphlikes to write.\n * @param buffer Buffer to write to.\n * @param start (Default: 0) Start index.\n * @returns Specified buffer.\n * @throws Error if indexes are out of bounds, or if end index is equal or less\n * than start index.\n * @internal\n */\nexport function writeGlyphsToBuffer(glyphs: GlyphLike[], buffer: Uint8Array, start = 0) {\n  const glyphsLen = glyphs.length;\n  const end = start + bytesPerGlyph * glyphsLen;\n\n  checkBufferIndexing(buffer, start, end);\n\n  for (let i = 0; i < glyphsLen; ++i) {\n    const glyph = glyphs[i];\n    const ix = start + bytesPerGlyph * i;\n    const chStart = ix;\n    const fgStart = chStart + bytesPerChar;\n    const bgStart = fgStart + bytesPerColor;\n\n    writeCharLikeToBuffer(glyph[0], buffer, chStart);\n    writeColorLikeToBuffer(glyph[1], buffer, fgStart);\n    writeColorLikeToBuffer(\n      glyph.length !== 3 || glyph[2] === undefined ? defaultGlyphBackgroundColor : glyph[2],\n      buffer,\n      bgStart\n    );\n  }\n\n  return buffer;\n}\n\n/**\n * Maintains state for a given CSS font configuration.\n */\nexport class Font {\n  /**\n   * Clone provided font.\n   * @param font Font to clone.\n   * @returns Cloned font.\n   */\n  static clone(font: Font): Font {\n    return new Font(font.size, font.family, font.weight, font.style, font.variant);\n  }\n\n  /**\n   * Get font as CSS value string.\n   */\n  get css() {\n    return `${this.style} ${this.variant} ${this.weight} ${this.size}px ${this.family}`;\n  }\n\n  /**\n   * Instantiate font.\n   *\n   * @param size Font size.\n   * @param family Font family.\n   * @param weight (Default: 'normal') Font weight.\n   * @param style (Default: 'normal') Font style.\n   * @param variant (Default: 'normal') Font variant.\n   */\n  constructor(\n    public size: number,\n    public family: FontFamily,\n    public weight: FontWeight = 'normal',\n    public style: FontStyle = 'normal',\n    public variant: FontVariant = 'normal'\n  ) {}\n\n  /**\n   * Get a string representation of a font object.\n   * @returns A string representing the font object.\n   */\n  toString() {\n    return `Font: ${this.css}`;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".demos.bundle.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_agogpixel_phaser3_glyph_plugin\"] = self[\"webpackChunk_agogpixel_phaser3_glyph_plugin\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import './styles/styles.scss';\n\nimport type { Renderer } from './shared';\nimport { getParams, renderers } from './shared';\n\ntype DemoArgs = [Renderer, string, boolean];\n\nconst demos = [\n  [\n    'glyphmap-1',\n    \"Display a square 'room' with Glyphmap\",\n    async (...args: DemoArgs) =>\n      (await import(/* webpackChunkName: \"demo-glyphmap-1\" */ './glyphmap-1')).default(...args)\n  ],\n  [\n    'glyphmap-2',\n    'Input handling with Glyphmap',\n    async (...args: DemoArgs) =>\n      (await import(/* webpackChunkName: \"demo-glyphmap-2\" */ './glyphmap-2')).default(...args)\n  ],\n  [\n    'glyphmap-3',\n    'Dynamic font with Glyphmap',\n    async (...args: DemoArgs) =>\n      (await import(/* webpackChunkName: \"demo-glyphmap-3\" */ './glyphmap-3')).default(...args)\n  ],\n  [\n    'glyph-1',\n    'Use Group to create Glyphs',\n    async (...args: DemoArgs) => (await import(/* webpackChunkName: \"demo-glyph-1\" */ './glyph-1')).default(...args)\n  ],\n  [\n    'glyph-2',\n    'Glyph moving in a Glyphmap',\n    async (...args: DemoArgs) => (await import(/* webpackChunkName: \"demo-glyph-2\" */ './glyph-2')).default(...args)\n  ]\n] as const;\n\nfunction getDemo(name: string) {\n  return demos.find(([n]) => n === name);\n}\n\nasync function run() {\n  const params = getParams();\n\n  const demo = getDemo(params.demo);\n\n  if (!demo) {\n    indexHandler(params.demo);\n    return;\n  }\n\n  const renderer = (renderers.includes(params.renderer as Renderer) ? params.renderer : 'auto') as Renderer;\n  const measure = typeof params.measure === 'string' && params.measure.length ? params.measure.charAt(0) : 'W';\n  const advanced = params.advanced === 'true' ? true : false;\n\n  await demo[2](renderer, measure, advanced);\n}\n\nfunction indexHandler(notFound?: string) {\n  const filteredRenderers = renderers.filter((r) => r !== 'auto');\n\n  let html = (notFound ? `<small>Not Found: ${notFound}</small>` : '') + '<h1>Demos</h1><ul>';\n\n  for (const demo of demos) {\n    html += '<li><bold>' + demo[1] + '</bold><ul>';\n\n    for (const renderer of filteredRenderers) {\n      html +=\n        '<li><a href=\"?demo=' +\n        demo[0] +\n        '&renderer=' +\n        renderer +\n        '&measure=W&advanced=false&square=false\" target=\"_blank\">' +\n        renderer +\n        '</a></li>';\n    }\n\n    html += '</ul></li>';\n  }\n\n  html += '</ul>';\n\n  const div = document.createElement('DIV');\n\n  div.innerHTML = html;\n\n  document.body.appendChild(div);\n}\n\nrun();\n"],"names":["leafPrototypes","getProto","inProgress","dataWebpackPrefix","Object","defineProperty","exports","value","AlphaSingle","components_1","create_mixin_1","createMixin","Alpha","BlendMode","ComputedSize","Class_1","component","_i","arguments","length","BaseGameObject","mixin","Crop","Depth","Flip","GetBounds","tslib_1","__exportStar","Mask","Origin","PathFollower","Pipeline","ScrollFactor","Size","TextureCrop","Texture","Tint","Transform","Visible","Mixins","__importStar","check","mixins","_super","apply","this","__extends","Phaser","GameObjects","GameObject","target","forEach","includes","Error","some","m","every","mapping","BaseScene","module","colorNames","swizzle","hasOwnProperty","reverseNames","name","call","cs","to","get","clamp","num","min","max","Math","hexDouble","str","round","toString","toUpperCase","string","val","model","substring","toLowerCase","hsl","hwb","rgb","match","i","hexAlpha","i2","parseInt","slice","parseFloat","alpha","isNaN","hex","rgba","percent","r","g","b","hsla","hwba","a","keyword","BLUR","BOOT","CONTEXT_LOST","CONTEXT_RESTORED","DESTROY","FOCUS","HIDDEN","PAUSE","POST_RENDER","POST_STEP","PRE_RENDER","PRE_STEP","READY","RESUME","STEP","VISIBLE","Class","GameEvents","RenderEvents","BitmapMask","initialize","scene","renderable","renderer","sys","bitmapMask","maskTexture","mainTexture","dirty","mainFramebuffer","maskFramebuffer","invertAlpha","isStencil","createMask","game","events","on","RESIZE","gl","clearMask","width","height","pot","wrap","REPEAT","CLAMP_TO_EDGE","filter","LINEAR","createTexture2D","RGBA","createFramebuffer","deleteTexture","deleteFramebuffer","setBitmap","preRenderWebGL","maskedObject","camera","pipelines","BITMAPMASK_PIPELINE","beginMask","postRenderWebGL","endMask","preRenderCanvas","postRenderCanvas","destroy","off","prevFramebuffer","GeometryMask","graphicsGeometry","geometryMask","level","setShape","setInvertAlpha","undefined","child","flush","maskStack","enable","STENCIL_TEST","clear","STENCIL_BUFFER_BIT","maskCount","currentCameraMask","mask","currentMask","push","applyStencil","inc","colorMask","stencilFunc","EQUAL","stencilOp","KEEP","INCR","DECR","renderWebGL","NOTEQUAL","pop","current","disable","prev","currentContext","save","renderCanvas","clip","restore","Clamp","_alpha","_alphaTL","_alphaTR","_alphaBL","_alphaBR","clearAlpha","setAlpha","topLeft","topRight","bottomLeft","bottomRight","set","v","renderFlags","alphaTopLeft","alphaTopRight","alphaBottomLeft","alphaBottomRight","BlendModes","_blendMode","NORMAL","blendMode","setBlendMode","displayWidth","scaleX","displayHeight","scaleY","setSize","setDisplaySize","texture","frame","isCropped","setCrop","x","y","setCropUVs","_crop","flipX","flipY","rect","resetCropObject","u0","v0","u1","v1","cx","cy","cw","ch","_depth","depth","displayList","queueDepthSort","setDepth","toggleFlipX","toggleFlipY","setFlipX","setFlipY","setFlip","resetFlip","Rectangle","RotateAround","Vector2","prepareBoundsOutput","output","includeParent","rotation","parentContainer","getBoundsTransformMatrix","transformPoint","getCenter","originX","originY","getTopLeft","getTopCenter","getTopRight","getLeftCenter","getRightCenter","getBottomLeft","getBottomCenter","getBottomRight","getBounds","TLx","TLy","TRx","TRy","BLx","BLy","BRx","BRy","parentMatrix","setMask","destroyMask","createBitmapMask","shader","createGeometryMask","graphics","type","_originComponent","_displayOriginX","_displayOriginY","displayOriginX","displayOriginY","setOrigin","updateDisplayOrigin","setOriginFromFrame","customPivot","pivotX","pivotY","setDisplayOrigin","DegToRad","GetBoolean","GetValue","TWEEN_CONST","path","rotateToPath","pathRotationOffset","pathOffset","pathVector","pathDelta","pathTween","pathConfig","_prevDirection","PLAYING_FORWARD","setPath","config","tween","isPlaying","stop","startFollow","setRotateToPath","offset","isFollowing","startAt","duration","from","positionOnPath","seek","onStart","tweenData","data","progress","elapsed","ease","start","end","key","reset","tweens","addCounter","getStartPoint","nextPoint","getPoint","atan2","pauseFollow","pause","resumeFollow","isPaused","resume","stopFollow","pathUpdate","copy","negate","state","COMPLETE","add","setPosition","PLAYING_BACKWARD","getValue","oldX","oldY","speedX","speedY","DeepCopy","PIPELINE_CONST","SpliceOne","defaultPipeline","pipeline","hasPostPipeline","postPipelines","pipelineData","initPipeline","MULTI_PIPELINE","instance","setPipeline","copyData","setPostPipeline","pipelineManager","Array","isArray","getPostPipeline","setPipelineData","results","resetPipeline","resetPostPipelines","resetData","resetPostPipeline","removePostPipeline","getPipelineName","scrollFactorX","scrollFactorY","setScrollFactor","_sizeComponent","abs","realWidth","realHeight","setSizeToFrame","setTexture","textures","setFrame","updateSize","updateOrigin","cutWidth","cutHeight","updateCropUVs","tintTopLeft","tintTopRight","tintBottomLeft","tintBottomRight","tintFill","clearTint","setTint","setTintFill","tint","isTinted","white","gameObject","out","scale","origin","visible","textureKey","frameKey","MATH_CONST","TransformMatrix","TransformXY","WrapAngle","WrapAngleDegrees","_scaleX","_scaleY","_rotation","z","w","angle","RAD_TO_DEG","DEG_TO_RAD","copyPosition","source","setRandomPosition","random","setRotation","radians","setAngle","degrees","setScale","setX","setY","setZ","setW","getLocalTransformMatrix","tempMatrix","applyITRS","getWorldTransformMatrix","parent","multiply","getLocalPoint","point","cameras","main","csx","scrollX","csy","scrollY","px","py","applyInverse","getParentRotation","c","d","tx","ty","matrix","Float32Array","decomposedMatrix","translateX","translateY","e","f","acos","atan","rotationNormalized","TAU","sqrt","loadIdentity","translate","rotate","sin","cos","rhs","localA","localB","localC","localD","localE","localF","sourceA","sourceB","sourceC","sourceD","sourceE","sourceF","destinationMatrix","multiplyWithOffset","src","offsetX","offsetY","otherMatrix","a0","b0","c0","d0","pse","psf","a1","b1","c1","d1","tx1","ty1","transform","tx0","ty0","invert","n","copyFrom","copyFromArray","copyToContext","ctx","setToContext","setTransform","copyToArray","decomposeMatrix","determ","s","PI","radianSin","radianCos","id","getX","getY","getXRound","getYRound","getCSSMatrix","_visible","setVisible","ToJSON","CIRCLE","ELLIPSE","LINE","POINT","POLYGON","RECTANGLE","TRIANGLE","Point","line","position","x1","x2","y1","y2","Length","quantity","stepRate","GetPoint","GetPoints","GEOM_CONST","Random","Line","getPoints","getRandomPoint","setTo","getPointA","vec2","getPointB","left","right","top","bottom","t","Perimeter","rectangle","p","Contains","contains","setEmpty","isEmpty","getLineA","getLineB","getLineC","getLineD","centerX","centerY","CONST","positionX","positionY","FuzzyEqual","clone","setFromObject","obj","setToPolar","azimuth","radius","equals","fuzzyEquals","epsilon","subtract","isFinite","divide","distance","dx","dy","distanceSq","setLength","normalize","lengthSq","len","normalizeRightHand","normalizeLeftHand","dot","cross","lerp","ax","ay","transformMat3","mat","transformMat4","limit","reflect","normal","mirror","axis","delta","ZERO","RIGHT","LEFT","UP","DOWN","ONE","range","MathWrap","Wrap","PI2","EPSILON","RND","MIN_SAFE_INTEGER","Number","MAX_SAFE_INTEGER","SKIP_CHECK","ADD","MULTIPLY","SCREEN","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATION","COLOR","LUMINOSITY","ERASE","SOURCE_IN","SOURCE_OUT","SOURCE_ATOP","DESTINATION_OVER","DESTINATION_IN","DESTINATION_OUT","DESTINATION_ATOP","LIGHTER","COPY","XOR","RENDER","LIGHT_PIPELINE","POINTLIGHT_PIPELINE","SINGLE_PIPELINE","ROPE_PIPELINE","GRAPHICS_PIPELINE","POSTFX_PIPELINE","UTILITY_PIPELINE","defaultValue","CREATED","INIT","DELAY","OFFSET_DELAY","PENDING_RENDER","HOLD_DELAY","REPEAT_DELAY","PENDING_ADD","PAUSED","LOOP_DELAY","ACTIVE","COMPLETE_DELAY","PENDING_REMOVE","REMOVED","getProperty","definition","k","isClassDescriptor","def","getOwnPropertyDescriptor","hasGetterOrSetter","enumerable","configurable","hasNonConfigurable","prop","extend","ctor","prototype","ignoreFinals","myClass","Extends","base","create","constructor","array","index","item","inObject","outObject","indexOf","keys","split","isArrayish","concat","args","arg","fn","splice","Function","renderers","demoHandlerFactory","demo","measure","advanced","phaserFactory","GlyphPlugin","AUTO","CANVAS","WEBGL","dom","createContainer","behindCanvas","pointerEvents","mode","Scale","NONE","autoCenter","CENTER_BOTH","plugins","global","plugin","advancedTextMetrics","measurementCh","getParams","fromEntries","URLSearchParams","window","location","search","entries","defaultFont","GlyphPluginGameObject","font","forceSquareRatio","pluginKey","super","Utils","NOOP","currentGlyphPlugin","currentFont","currentForceSquareRatio","addGlyphPluginEventListeners","setFont","setForceSquareRatio","glyphPlugin","setGlyphPlugin","fromScene","removeGlyphPluginEventListeners","refresh","glyphPluginUpdateEventListener","once","glyphPluginDestroyEventListener","glyphFactory","Glyph","glyphCreator","addToScene","glyph","BuildGameObject","batchSprite","defaultGlyphLike","readMinimalGlyphString","setGlyph","static","getTexture","glyphmapFactory","Glyphmap","glyphmapCreator","glyphmap","bounds","Geom","getCullBounds","map","skipCull","widthInCells","heightInCells","cellW","floor","cellWidth","cellH","cellHeight","boundsLeft","Snap","Floor","worldView","cullPaddingX","boundsRight","Ceil","boundsTop","cullPaddingY","boundsBottom","cullBoundsX","cullBoundsY","cullBoundsWidth","cullBoundsHeight","cullBoundsEndY","cullBoundsEndX","cellCount","sx","sy","getTint","Renderer","WebGL","getTintAppendFloatAlpha","halfWidth","halfHeight","mapData","glyphset","getKey","preBatch","indexY","indexX","has","cellTextureIds","cellTextureIdsLen","ix","glTexture","textureUnit","setTexture2D","batchTexture","postBatch","tempMatrix1","Components","tempMatrix2","tempMatrix3","camMatrix","mapMatrix","calcMatrix","antialias","imageSmoothingEnabled","sourceImage","getSourceImage","drawImage","updateDimensions","updateTextures","Glyphset","Map","currentCellWidth","currentCellHeight","cellToWorldX","cellX","cellToWorldY","cellY","cellToWorldXY","checkBounds","erase","remove","delete","draw","glyphs","setCullPadding","paddingX","paddingY","setSkipCull","worldToCellX","worldX","snapToFloor","worldToCellY","worldY","worldToCellXY","getFrameDimensions","update","texturesIndex","idCounts","idCount","getTextureFromBuffer","bind","GlyphPluginEvent","Plugins","BasePlugin","pluginManager","eventEmitter","Events","EventEmitter","currentMeasurementCh","currentAdvancedTextMetrics","registerGameObject","find","charlike","chHex","fontCss","css","textMetricsCacheKey","frameDimensionsCacheKey","frameDimensions","frameDimensionsCache","textMetrics","textMetricsCache","canvas","Display","Canvas","CanvasPool","getContext","measureText","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","size","getTextureKeyFromBuffer","buffer","exists","defaultFrameWidth","defaultFrameHeight","glyphFrames","textureWidth","textureHeight","glyphFrameWidth","glyphFrameHeight","glyphFrame","createCanvas","glyphsLen","frameX","frameY","fg","bg","frameWidth","frameHeight","fillStyle","fillRect","textAlign","textBaseline","fillText","setMeasurementCh","setAdvancedTextMetrics","emit","Destroy","getTextureKey","init","event","context","Update","GlyphScene","checkAmount","multiple","amount","checkBufferIndexing","convertBufferToHexString","normalizeBufferEndIndex","padStart","convertCharLikeToHexString","convertCharLikeToString","charCodeAt","String","fromCharCode","convertHexStringToBuffer","Uint8Array","byte","createGlyphsBuffer","bytesPerChar","chStart","fgStart","bgStart","writeCharLikeToBuffer","writeColorLikeToBuffer","writeGlyphsToBuffer","readColorsFromBuffer","readColorsFormat","colors","Color","GetColor32","readGlyphsFromBuffer","chEnd","fgEnd","bgEnd","readStringFromBuffer","codes","codesLen","code","colorlike","colorsLen","color","colorBuffer","red","green","blue","IntegerToRGB","TypeError","j","Font","family","weight","style","variant","extendStatics","setPrototypeOf","__proto__","__","__assign","assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","verb","Symbol","iterator","op","__createBinding","o","k2","__values","__read","ar","error","__spread","__spreadArrays","il","jl","__spreadArray","pack","l","__await","__asyncGenerator","asyncIterator","q","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","mod","__esModule","__importDefault","default","__classPrivateFieldGet","receiver","kind","__classPrivateFieldSet","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","getPrototypeOf","ns","getOwnPropertyNames","chunkId","all","reduce","promises","u","miniCssF","globalThis","url","script","needAttach","scripts","document","getElementsByTagName","getAttribute","createElement","charset","timeout","nc","setAttribute","onScriptComplete","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","setTimeout","head","appendChild","toStringTag","scriptUrl","importScripts","currentScript","replace","installedChunks","installedChunkData","promise","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","chunkLoadingGlobal","self","demos","params","notFound","filteredRenderers","html","div","innerHTML","indexHandler","charAt","run"],"sourceRoot":""}