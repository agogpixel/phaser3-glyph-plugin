{"version":3,"file":"326.demos.bundle.js","mappings":"yMAIA,SAAe,SAA0BA,IAAW,iDAClD,MAAMC,QAAY,wCAIZC,EAAqC,UAF5B,UAEiBC,OAEhC,MAAMC,UAAcH,EAAII,YAAYC,WAAW,QAAS,cAAcC,OAAOH,UAC3EI,SACE,MAAMC,EAAO,IAAIR,EAAIS,KAAK,GAAI,8BAA+B,UAEvDC,EAAQC,KAAKC,IAAIF,MAAM,CAC3BG,UAAWb,EAAIc,MACfC,QAAS,GACTC,eAAiBC,IACfA,EAAEC,oBAAoBjB,GAAkBkB,QAAQX,GAAMY,MAAQ,CAC5Dd,OAAOe,KAAKC,IAAIC,eAAe,GAAI,KACnCjB,OAAOkB,QAAQC,MAAMC,YACrBpB,OAAOkB,QAAQC,MAAMC,gBAK3B,IAAK,IAAIC,EAAI,EAAGA,EAAI,KAAMA,EACxBjB,EACGkB,IAAItB,OAAOe,KAAKC,IAAIC,eAAe,GAAI,KAAMjB,OAAOe,KAAKC,IAAIC,eAAe,GAAI,MAChFM,WAAU,GACVC,YAAW,IAKnB/B,EAAOgC,MAAyBC,KAAK7B,GAEtC,IAAIG,OAAO2B,KAAKlC","sources":["webpack://@agogpixel/phaser3-glyph-plugin/./demos/glyph-1/index.ts"],"sourcesContent":["import type { Glyph } from '../../src';\n\nimport { demoHandlerFactory, getParams } from '../shared';\n\nexport default demoHandlerFactory(async (config) => {\n  const api = await import(/* webpackChunkName: \"phaser-glyph-plugin\" */ '../../src');\n\n  const params = getParams();\n\n  const forceSquareRatio = params.square === 'true' ? true : false;\n\n  class Scene extends api.GlyphPlugin.GlyphScene('glyph', class extends Phaser.Scene {}) {\n    create() {\n      const font = new api.Font(36, 'DejaVu Sans Mono, monospace', 'bolder');\n\n      const group = this.add.group({\n        classType: api.Glyph,\n        maxSize: 16,\n        createCallback: (g: Glyph) => {\n          g.setForceSquareRatio(forceSquareRatio).setFont(font).glyph = [\n            Phaser.Math.RND.integerInRange(32, 126),\n            Phaser.Display.Color.RandomRGB(),\n            Phaser.Display.Color.RandomRGB()\n          ];\n        }\n      });\n\n      for (let i = 0; i < 16; ++i) {\n        group\n          .get(Phaser.Math.RND.integerInRange(20, 650), Phaser.Math.RND.integerInRange(20, 650))\n          .setActive(true)\n          .setVisible(true);\n      }\n    }\n  }\n\n  (config.scene as typeof Scene[]).push(Scene);\n\n  new Phaser.Game(config);\n});\n"],"names":["config","api","forceSquareRatio","square","Scene","GlyphPlugin","GlyphScene","Phaser","create","font","Font","group","this","add","classType","Glyph","maxSize","createCallback","g","setForceSquareRatio","setFont","glyph","Math","RND","integerInRange","Display","Color","RandomRGB","i","get","setActive","setVisible","scene","push","Game"],"sourceRoot":""}